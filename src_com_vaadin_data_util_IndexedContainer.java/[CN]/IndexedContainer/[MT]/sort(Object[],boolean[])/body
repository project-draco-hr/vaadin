{
  final List ids=new ArrayList();
  final List<Boolean> orders=new ArrayList<Boolean>();
  final Collection sortable=getSortableContainerPropertyIds();
  for (int i=0; i < propertyId.length; i++) {
    if (sortable.contains(propertyId[i])) {
      ids.add(propertyId[i]);
      orders.add(new Boolean(i < ascending.length ? ascending[i] : true));
    }
  }
  if (ids.size() == 0) {
    return;
  }
  sortPropertyId=ids.toArray();
  sortDirection=new boolean[orders.size()];
  for (int i=0; i < sortDirection.length; i++) {
    sortDirection[i]=(orders.get(i)).booleanValue();
  }
  Collections.sort(itemIds,this);
  if (filteredItemIds != null) {
    updateContainerFiltering();
  }
 else {
    fireContentsChange(-1);
  }
  sortPropertyId=null;
  sortDirection=null;
}
