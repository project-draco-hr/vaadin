{
  EventTarget eventTarget=event.getNativeEvent().getEventTarget();
  if (!Element.is(eventTarget)) {
    super.sendContextClickEvent(event);
    return;
  }
  Element e=Element.as(eventTarget);
  Section section;
  String colKey;
  String rowKey=null;
  if (getWidget().tFoot.getElement().isOrHasChild(e)) {
    section=Section.FOOTER;
    FooterCell w=WidgetUtil.findWidget(e,FooterCell.class);
    colKey=w.getColKey();
  }
 else   if (getWidget().tHead.getElement().isOrHasChild(e)) {
    section=Section.HEADER;
    HeaderCell w=WidgetUtil.findWidget(e,HeaderCell.class);
    colKey=w.getColKey();
  }
 else   if (getWidget().scrollBody.getElement().isOrHasChild(e)) {
    section=Section.BODY;
    VScrollTableRow w=WidgetUtil.findWidget(e,VScrollTableRow.class);
    rowKey=w.getKey();
    colKey=getWidget().tHead.getHeaderCell(getElementIndex(e,w.getElement())).getColKey();
  }
 else {
    super.sendContextClickEvent(event);
    return;
  }
  MouseEventDetails details=MouseEventDetailsBuilder.buildMouseEventDetails(event.getNativeEvent());
  event.preventDefault();
  event.stopPropagation();
  getRpcProxy(TableServerRpc.class).contextClick(rowKey,colKey,section,details);
}
