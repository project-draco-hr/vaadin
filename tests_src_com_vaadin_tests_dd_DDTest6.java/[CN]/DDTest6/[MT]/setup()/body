{
  SplitPanel sp=new SplitPanel(SplitPanel.ORIENTATION_HORIZONTAL);
  CssLayout l=new CssLayout();
  sp.setFirstComponent(l);
  CssLayout l2=new CssLayout();
  sp.setSecondComponent(l2);
  final Tree tree1=new Tree("Volume 1");
  BeanItemContainer<File> fs1=new BeanItemContainer<File>(File.class);
  tree1.setContainerDataSource(fs1);
  for (int i=0; i < files.length; i++) {
    fs1.addBean(files[i]);
    if (files[i] instanceof Folder) {
      tree1.setChildrenAllowed(files[i],true);
    }
 else {
      tree1.setChildrenAllowed(files[i],false);
    }
    if (i >= files.length / 2) {
      tree1.setParent(files[i],files[i - files.length / 2]);
    }
  }
  tree1.setItemCaptionPropertyId("name");
  tree1.setItemIconPropertyId("icon");
  tree1.setDragMode(TreeDragMode.NODE);
  DropHandler dropHandler=new DropHandler(){
    public AcceptCriterion getAcceptCriterion(){
      return AcceptAll.get();
    }
    public void drop(    DragAndDropEvent dropEvent){
      DataBoundTransferable transferable=(DataBoundTransferable)dropEvent.getTransferable();
      TreeDropTargetDetails dropTargetData=(TreeDropTargetDetails)dropEvent.getDropTargetDetails();
      tree1.setParent(transferable.getItemId(),dropTargetData.getItemIdInto());
    }
  }
;
  tree1.setDropHandler(dropHandler);
  l.addComponent(tree1);
  getLayout().setSizeFull();
  getLayout().addComponent(sp);
  TestUtils.injectCSS(getLayout().getWindow(),"" + ".v-tree-node-caption-drag-top {/*border-top: none;*/} " + ".v-tree-node-caption-drag-bottom {border-bottom: none ;} "+ ".v-tree-node-caption-drag-center {background-color: transparent;}"+ ".v-tree-node-caption-dragfolder { background-color: cyan;} ");
}
