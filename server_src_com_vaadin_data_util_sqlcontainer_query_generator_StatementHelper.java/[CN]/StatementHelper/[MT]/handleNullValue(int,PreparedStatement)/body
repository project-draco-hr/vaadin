{
  if (BigDecimal.class.equals(dataTypes.get(i))) {
    pstmt.setBigDecimal(i + 1,null);
  }
 else   if (Boolean.class.equals(dataTypes.get(i))) {
    pstmt.setNull(i + 1,Types.BOOLEAN);
  }
 else   if (Byte.class.equals(dataTypes.get(i))) {
    pstmt.setNull(i + 1,Types.SMALLINT);
  }
 else   if (Date.class.equals(dataTypes.get(i))) {
    pstmt.setDate(i + 1,null);
  }
 else   if (Double.class.equals(dataTypes.get(i))) {
    pstmt.setNull(i + 1,Types.DOUBLE);
  }
 else   if (Float.class.equals(dataTypes.get(i))) {
    pstmt.setNull(i + 1,Types.FLOAT);
  }
 else   if (Integer.class.equals(dataTypes.get(i))) {
    pstmt.setNull(i + 1,Types.INTEGER);
  }
 else   if (Long.class.equals(dataTypes.get(i))) {
    pstmt.setNull(i + 1,Types.BIGINT);
  }
 else   if (Short.class.equals(dataTypes.get(i))) {
    pstmt.setNull(i + 1,Types.SMALLINT);
  }
 else   if (String.class.equals(dataTypes.get(i))) {
    pstmt.setString(i + 1,null);
  }
 else   if (Time.class.equals(dataTypes.get(i))) {
    pstmt.setTime(i + 1,null);
  }
 else   if (Timestamp.class.equals(dataTypes.get(i))) {
    pstmt.setTimestamp(i + 1,null);
  }
 else {
    if (handleUnrecognizedTypeNullValue(i,pstmt,dataTypes)) {
      return;
    }
    throw new SQLException("Data type not supported by SQLContainer: " + parameters.get(i).getClass().toString());
  }
}
