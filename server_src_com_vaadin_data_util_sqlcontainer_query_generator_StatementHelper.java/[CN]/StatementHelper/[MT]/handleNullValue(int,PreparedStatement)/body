{
  Class<?> dataType=dataTypes.get(i);
  int index=i + 1;
  if (BigDecimal.class.equals(dataType)) {
    pstmt.setBigDecimal(index,null);
  }
 else   if (Boolean.class.equals(dataType)) {
    pstmt.setNull(index,Types.BOOLEAN);
  }
 else   if (Byte.class.equals(dataType)) {
    pstmt.setNull(index,Types.SMALLINT);
  }
 else   if (Date.class.equals(dataType)) {
    pstmt.setDate(index,null);
  }
 else   if (Double.class.equals(dataType)) {
    pstmt.setNull(index,Types.DOUBLE);
  }
 else   if (Float.class.equals(dataType)) {
    pstmt.setNull(index,Types.FLOAT);
  }
 else   if (Integer.class.equals(dataType)) {
    pstmt.setNull(index,Types.INTEGER);
  }
 else   if (Long.class.equals(dataType)) {
    pstmt.setNull(index,Types.BIGINT);
  }
 else   if (Short.class.equals(dataType)) {
    pstmt.setNull(index,Types.SMALLINT);
  }
 else   if (String.class.equals(dataType)) {
    pstmt.setString(index,null);
  }
 else   if (Time.class.equals(dataType)) {
    pstmt.setTime(index,null);
  }
 else   if (Timestamp.class.equals(dataType)) {
    pstmt.setTimestamp(index,null);
  }
 else   if (byte[].class.equals(dataType)) {
    pstmt.setBytes(index,null);
  }
 else {
    if (handleUnrecognizedTypeNullValue(i,pstmt,dataTypes)) {
      return;
    }
    throw new SQLException("Data type for parameter " + i + " not supported by SQLContainer: "+ dataType.getName());
  }
}
