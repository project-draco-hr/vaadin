{
  if (vertical) {
  }
 else {
    int handleWidth=Integer.parseInt(DOM.getElementProperty(handle,"offsetWidth"));
    int baseWidth=Integer.parseInt(DOM.getElementProperty(base,"offsetWidth"));
    int range=baseWidth - handleWidth;
    double v=value.doubleValue();
    double valueRange=max - min;
    double p=0;
    if (valueRange != 0)     p=range * ((v - min) / valueRange);
    if (p < 0)     p=0;
    final double pos=p;
    String styleLeft=DOM.getStyleAttribute(handle,"left");
    int left=Integer.parseInt(styleLeft.substring(0,styleLeft.length() - 2));
    if ((int)(Math.round(pos)) != left && animate) {
      if (anim != null)       anim.cancel();
      anim=new Timer(){
        private int left;
        private int goal=(int)Math.round(pos);
        private int dir=0;
        public void run(){
          String styleLeft=DOM.getStyleAttribute(handle,"left");
          left=Integer.parseInt(styleLeft.substring(0,styleLeft.length() - 2));
          if (dir == 0)           dir=(goal - left) / Math.abs(goal - left);
          if ((dir > 0 && left >= goal) || (dir < 0 && left <= goal)) {
            this.cancel();
            return;
          }
          int increment=(goal - left) / 2;
          DOM.setStyleAttribute(handle,"left",(left + increment) + "px");
        }
      }
;
      anim.scheduleRepeating(50);
    }
 else     DOM.setStyleAttribute(handle,"left",pos + "px");
  }
  if (value.doubleValue() < min)   value=new Double(min);
 else   if (value.doubleValue() > max)   value=new Double(max);
  this.value=value;
  if (updateToServer)   client.updateVariable(id,"value",value.doubleValue(),immediate);
}
