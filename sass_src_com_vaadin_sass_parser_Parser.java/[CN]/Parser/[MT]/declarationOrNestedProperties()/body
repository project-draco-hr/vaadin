{
  boolean important=false;
  String name;
  LexicalUnit exp;
  Token save;
  String comment=null;
  try {
    name=property();
    save=token;
    jj_consume_token(COLON);
    label_94:     while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
        ;
      break;
default :
    jj_la1[135]=jj_gen;
  break label_94;
}
jj_consume_token(S);
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case PLUS:
case MINUS:
case STRING:
case IDENT:
case NUMBER:
case URL:
case VARIABLE:
case PERCENTAGE:
case PT:
case MM:
case CM:
case PC:
case IN:
case PX:
case EMS:
case EXS:
case DEG:
case RAD:
case GRAD:
case MS:
case SECOND:
case HZ:
case KHZ:
case DIMEN:
case HASH:
case UNICODERANGE:
case FUNCTION:
exp=expr();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case IMPORTANT_SYM:
important=prio();
break;
default :
jj_la1[136]=jj_gen;
;
}
Token next=getToken(1);
if (next.kind == SEMICOLON || next.kind == RBRACE) {
while (next.kind == SEMICOLON) {
skipStatement();
next=getToken(1);
}
if (token.specialToken != null) {
documentHandler.property(name,exp,important,token.specialToken.image);
}
 else {
documentHandler.property(name,exp,important,null);
}
}
break;
case LBRACE:
jj_consume_token(LBRACE);
label_95: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[137]=jj_gen;
break label_95;
}
jj_consume_token(S);
}
documentHandler.startNestedProperties(name);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case IDENT:
declaration();
break;
default :
jj_la1[138]=jj_gen;
;
}
label_96: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case SEMICOLON:
;
break;
default :
jj_la1[139]=jj_gen;
break label_96;
}
jj_consume_token(SEMICOLON);
label_97: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[140]=jj_gen;
break label_97;
}
jj_consume_token(S);
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case IDENT:
declaration();
break;
default :
jj_la1[141]=jj_gen;
;
}
}
jj_consume_token(RBRACE);
label_98: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[142]=jj_gen;
break label_98;
}
jj_consume_token(S);
}
documentHandler.endNestedProperties(name);
break;
default :
jj_la1[143]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
 catch (JumpException e) {
skipAfterExpression();
}
catch (NumberFormatException e) {
if (errorHandler != null) {
errorHandler.error(new CSSParseException("Invalid number " + e.getMessage(),getLocator(),e));
}
reportWarningSkipText(getLocator(),skipAfterExpression());
}
catch (ParseException e) {
if (errorHandler != null) {
if (e.currentToken != null) {
LocatorImpl li=new LocatorImpl(this,e.currentToken.next.beginLine,e.currentToken.next.beginColumn - 1);
reportError(li,e);
}
 else {
reportError(getLocator(),e);
}
skipAfterExpression();
}
 else {
skipAfterExpression();
}
}
}
