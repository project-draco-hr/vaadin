{
  try {
    documentHandler.startDocument(source);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case CHARSET_SYM:
      charset();
    break;
default :
  jj_la1[0]=jj_gen;
;
}
label_1: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
case CDO:
case CDC:
case ATKEYWORD:
;
break;
default :
jj_la1[1]=jj_gen;
break label_1;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
jj_consume_token(S);
comments();
break;
case CDO:
case CDC:
case ATKEYWORD:
ignoreStatement();
break;
default :
jj_la1[2]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
label_2: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case IMPORT_SYM:
;
break;
default :
jj_la1[3]=jj_gen;
break label_2;
}
importDeclaration();
label_3: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case CDO:
case CDC:
case ATKEYWORD:
;
break;
default :
jj_la1[4]=jj_gen;
break label_3;
}
ignoreStatement();
label_4: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[5]=jj_gen;
break label_4;
}
jj_consume_token(S);
}
}
}
afterImportDeclaration();
jj_consume_token(0);
}
  finally {
documentHandler.endDocument(source);
}
}
