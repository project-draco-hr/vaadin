{
  String name;
  ArrayList<VariableNode> args=null;
  String body;
  jj_consume_token(MIXIN_SYM);
  label_59:   while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
      ;
    break;
default :
  jj_la1[88]=jj_gen;
break label_59;
}
jj_consume_token(S);
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case IDENT:
name=property();
break;
case FUNCTION:
name=functionName();
args=arglist();
jj_consume_token(RPARAN);
label_60: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[89]=jj_gen;
break label_60;
}
jj_consume_token(S);
}
break;
default :
jj_la1[90]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
jj_consume_token(LBRACE);
label_61: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[91]=jj_gen;
break label_61;
}
jj_consume_token(S);
}
documentHandler.startMixinDirective(name,args);
label_62: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case ANY:
case PARENT:
case DOT:
case COLON:
case INCLUDE_SYM:
case EXTEND_SYM:
case IDENT:
case VARIABLE:
case HASH:
case MEDIA_SYM:
;
break;
default :
jj_la1[92]=jj_gen;
break label_62;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case INCLUDE_SYM:
includeDirective();
break;
case MEDIA_SYM:
media();
break;
case EXTEND_SYM:
extendDirective();
break;
case VARIABLE:
variable();
break;
default :
jj_la1[93]=jj_gen;
if (jj_2_3(3)) {
declarationOrNestedProperties();
}
 else {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case ANY:
case PARENT:
case DOT:
case COLON:
case IDENT:
case HASH:
styleRule();
break;
default :
jj_la1[94]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
}
}
jj_consume_token(RBRACE);
label_63: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[95]=jj_gen;
break label_63;
}
jj_consume_token(S);
}
documentHandler.endMixinDirective(name,args);
}
