{
  setTheme("reindeer-tests");
  final File folder;
  try {
    File tempFile=File.createTempFile("fsc-tt","");
    tempFile.delete();
    folder=new File(tempFile.getParent(),tempFile.getName());
    folder.mkdir();
    System.out.println(folder.getPath());
    folder.deleteOnExit();
    populate(folder,3,10);
    FilesystemContainer fsc=new FilesystemContainer(folder);
    treeTable=new TreeTable();
    treeTable.addStyleName("table-equal-rowheight");
    treeTable.setWidth("450px");
    treeTable.setHeight("550px");
    treeTable.setContainerDataSource(fsc);
    treeTable.setItemIconPropertyId(FilesystemContainer.PROPERTY_ICON);
    treeTable.setVisibleColumns(new String[]{"Name"});
    treeTable.setColumnWidth("Name",400);
    treeTable.addListener(new ExpandListener(){
      @Override public void nodeExpand(      ExpandEvent event){
        logExpandCollapse(event.getItemId(),"expanded");
      }
    }
);
    treeTable.addListener(new CollapseListener(){
      @Override public void nodeCollapse(      CollapseEvent event){
        logExpandCollapse(event.getItemId(),"collapsed");
      }
    }
);
    addComponent(log);
    addComponent(treeTable);
    HorizontalLayout buttonLayout=new HorizontalLayout();
    buttonLayout.setSpacing(true);
    buttonLayout.addComponent(new Button("Create dir11",new Button.ClickListener(){
      @Override public void buttonClick(      ClickEvent event){
        new File(folder,"dir11").mkdir();
        log.log("Row dir11 created");
      }
    }
));
    buttonLayout.addComponent(new Button("Delete dir11",new Button.ClickListener(){
      @Override public void buttonClick(      ClickEvent event){
        new File(folder,"dir11").delete();
        log.log("Row dir11 deleted");
      }
    }
));
    buttonLayout.addComponent(new Button("Clean all files",new Button.ClickListener(){
      @Override public void buttonClick(      ClickEvent event){
        folder.delete();
      }
    }
));
    addComponent(buttonLayout);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
}
