{
  if (event.getProperty() == tree) {
    final Object id=tree.getValue();
    final Item item=tree.getItem(id);
    String section;
    if (tree.isRoot(id)) {
      section="";
    }
 else     if (tree.hasChildren(id)) {
      section=(String)item.getItemProperty(PROPERTY_ID_NAME).getValue();
    }
 else {
      section=(String)item.getItemProperty(PROPERTY_ID_CATEGORY).getValue();
    }
    table.setValue(null);
    final IndexedContainer c=(IndexedContainer)table.getContainerDataSource();
    c.removeAllContainerFilters();
    if (section != null) {
      c.addContainerFilter(PROPERTY_ID_CATEGORY,section,false,true);
    }
    if (!tree.hasChildren(id)) {
      table.setValue(id);
    }
  }
 else   if (event.getProperty() == table) {
    if (table.getValue() != null) {
      table.removeListener(this);
      tree.setValue(table.getValue());
      table.addListener(this);
      final Item item=table.getItem(table.getValue());
      final Class c=(Class)item.getItemProperty(PROPERTY_ID_CLASS).getValue();
      final Component component=getComponent(c);
      if (component != null) {
        final String caption=(String)item.getItemProperty(PROPERTY_ID_NAME).getValue();
        ts.removeAllComponents();
        ts.addTab(component,caption,null);
      }
      final Property p=item.getItemProperty(PROPERTY_ID_VIEWED);
      if (p.getValue() == null) {
        p.setValue(new Embedded("",new ThemeResource("icons/ok.png")));
      }
      table.requestRepaint();
    }
  }
}
