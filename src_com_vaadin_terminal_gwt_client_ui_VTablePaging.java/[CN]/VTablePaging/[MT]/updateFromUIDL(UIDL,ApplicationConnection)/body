{
  if (client.updateComponent(this,uidl,true)) {
    return;
  }
  this.client=client;
  id=uidl.getStringAttribute("id");
  immediate=uidl.getBooleanAttribute("immediate");
  totalRows=uidl.getIntAttribute("totalrows");
  pageLength=uidl.getIntAttribute("pagelength");
  firstRow=uidl.getIntAttribute("firstrow");
  rows=uidl.getIntAttribute("rows");
  if (uidl.hasAttribute("selectmode")) {
    if (uidl.getStringAttribute("selectmode").equals("multi")) {
      selectMode=Table.SELECT_MODE_MULTI;
    }
 else {
      selectMode=Table.SELECT_MODE_SINGLE;
    }
    if (uidl.hasAttribute("selected")) {
      final Set<String> selectedKeys=uidl.getStringArrayVariableAsSet("selected");
      selectedRowKeys.clear();
      for (final Iterator<String> it=selectedKeys.iterator(); it.hasNext(); ) {
        selectedRowKeys.add(it.next());
      }
    }
  }
  if (uidl.hasVariable("sortascending")) {
    sortAscending=uidl.getBooleanVariable("sortascending");
  }
  if (uidl.hasAttribute("rowheaders")) {
    rowHeaders=true;
  }
  UIDL rowData=null;
  UIDL visibleColumns=null;
  for (final Iterator it=uidl.getChildIterator(); it.hasNext(); ) {
    final UIDL c=(UIDL)it.next();
    if (c.getTag().equals("rows")) {
      rowData=c;
    }
 else     if (c.getTag().equals("actions")) {
      updateActionMap(c);
    }
 else     if (c.getTag().equals("visiblecolumns")) {
      visibleColumns=c;
    }
  }
  tBody.resize(rows + 1,uidl.getIntAttribute("cols") + (rowHeaders ? 1 : 0));
  updateHeader(visibleColumns);
  updateBody(rowData);
  updatePager();
}
