{
  if (currentTooltipInfo.hasMessage()) {
    setPopupPosition(0,0);
    setPopupPositionAndShow(new PositionCallback(){
      @Override public void setPosition(      int offsetWidth,      int offsetHeight){
        if (offsetWidth > getMaxWidth()) {
          setWidth(getMaxWidth() + "px");
          offsetWidth=getOffsetWidth();
          offsetHeight=getOffsetHeight();
        }
        int x=0;
        int y=0;
        if (BrowserInfo.get().isTouchDevice()) {
          setMaxWidth(Window.getClientWidth());
          offsetWidth=getOffsetWidth();
          offsetHeight=getOffsetHeight();
          x=getFinalTouchX(offsetWidth);
          y=getFinalTouchY(offsetHeight);
        }
 else {
          x=getFinalX(offsetWidth);
          y=getFinalY(offsetHeight);
        }
        setPopupPosition(x,y);
        sinkEvents(Event.ONMOUSEOVER | Event.ONMOUSEOUT);
      }
      /** 
 * Return the final X-coordinate of the tooltip based on cursor
 * position, size of the tooltip, size of the page and necessary
 * margins.
 * @param offsetWidth
 * @return The final X-coordinate
 */
      private int getFinalX(      int offsetWidth){
        int x=0;
        int widthNeeded=10 + MARGIN + offsetWidth;
        int roomLeft=tooltipEventMouseX;
        int roomRight=Window.getClientWidth() - roomLeft;
        if (roomRight > widthNeeded) {
          x=tooltipEventMouseX + 10 + Window.getScrollLeft();
        }
 else {
          x=tooltipEventMouseX + Window.getScrollLeft() - 10 - offsetWidth;
        }
        if (x + offsetWidth + MARGIN - Window.getScrollLeft() > Window.getClientWidth()) {
          x=Window.getClientWidth() - offsetWidth - MARGIN + Window.getScrollLeft();
        }
        if (tooltipEventMouseX != EVENT_XY_POSITION_OUTSIDE) {
          int minX=Window.getScrollLeft() + MARGIN;
          x=Math.max(x,minX);
        }
        return x;
      }
      /** 
 * Return the final X-coordinate of the tooltip based on cursor
 * position, size of the tooltip, size of the page and necessary
 * margins.
 * @param offsetWidth
 * @return The final X-coordinate
 */
      private int getFinalTouchX(      int offsetWidth){
        int x=0;
        int widthNeeded=10 + offsetWidth;
        int roomLeft=currentElement != null ? currentElement.getAbsoluteLeft() : EVENT_XY_POSITION_OUTSIDE;
        int viewPortWidth=Window.getClientWidth();
        int roomRight=viewPortWidth - roomLeft;
        if (roomRight > widthNeeded) {
          x=roomLeft;
        }
 else {
          x=roomLeft - offsetWidth;
        }
        if (x + offsetWidth - Window.getScrollLeft() > viewPortWidth) {
          x=viewPortWidth - offsetWidth + Window.getScrollLeft();
        }
        if (roomLeft != EVENT_XY_POSITION_OUTSIDE) {
          int minX=Window.getScrollLeft();
          x=Math.max(x,minX);
        }
        return x;
      }
      /** 
 * Return the final Y-coordinate of the tooltip based on cursor
 * position, size of the tooltip, size of the page and necessary
 * margins.
 * @param offsetHeight
 * @return The final y-coordinate
 */
      private int getFinalY(      int offsetHeight){
        int y=0;
        int heightNeeded=10 + offsetHeight;
        int roomAbove=tooltipEventMouseY;
        int roomBelow=Window.getClientHeight() - roomAbove;
        if (roomBelow > heightNeeded) {
          y=tooltipEventMouseY + 10 + Window.getScrollTop();
        }
 else {
          y=tooltipEventMouseY + Window.getScrollTop() - 10 - offsetHeight;
        }
        if (y + offsetHeight + MARGIN - Window.getScrollTop() > Window.getClientHeight()) {
          y=tooltipEventMouseY - 5 - offsetHeight + Window.getScrollTop();
          if (y - Window.getScrollTop() < 0) {
            y=Window.getScrollTop();
          }
        }
        if (tooltipEventMouseY != EVENT_XY_POSITION_OUTSIDE) {
          int minY=Window.getScrollTop() + MARGIN;
          y=Math.max(y,minY);
        }
        return y;
      }
      /** 
 * Return the final Y-coordinate of the tooltip based on cursor
 * position, size of the tooltip, size of the page and necessary
 * margins.
 * @param offsetHeight
 * @return The final y-coordinate
 */
      private int getFinalTouchY(      int offsetHeight){
        int y=0;
        int heightNeeded=10 + offsetHeight;
        int roomAbove=currentElement != null ? currentElement.getAbsoluteTop() + currentElement.getOffsetHeight() : EVENT_XY_POSITION_OUTSIDE;
        int roomBelow=Window.getClientHeight() - roomAbove;
        if (roomBelow > heightNeeded) {
          y=roomAbove;
        }
 else {
          y=roomAbove - offsetHeight - (currentElement != null ? currentElement.getOffsetHeight() : 0);
        }
        if (y + offsetHeight - Window.getScrollTop() > Window.getClientHeight()) {
          y=roomAbove - 5 - offsetHeight + Window.getScrollTop();
          if (y - Window.getScrollTop() < 0) {
            y=Window.getScrollTop();
          }
        }
        if (roomAbove != EVENT_XY_POSITION_OUTSIDE) {
          int minY=Window.getScrollTop();
          y=Math.max(y,minY);
        }
        return y;
      }
    }
);
  }
 else {
    hide();
  }
}
