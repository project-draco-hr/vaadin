{
  final String[] ka=(String[])variables.get("selected");
  final String[] ranges=(String[])variables.get("selectedRanges");
  Set<Object> renderedButNotSelectedItemIds=getCurrentlyRenderedItemIds();
  @SuppressWarnings("unchecked") HashSet<Object> newValue=new LinkedHashSet<Object>((Collection<Object>)getValue());
  if (variables.containsKey("clearSelections")) {
    newValue.clear();
  }
  for (int i=0; i < ka.length; i++) {
    final Object id=itemIdMapper.get(ka[i]);
    if (!isNullSelectionAllowed() && (id == null || id == getNullSelectionItemId())) {
      markAsDirty();
    }
 else     if (id != null && containsId(id)) {
      newValue.add(id);
      renderedButNotSelectedItemIds.remove(id);
    }
  }
  if (ranges != null) {
    for (    String range : ranges) {
      String[] split=range.split("-");
      Object startItemId=itemIdMapper.get(split[0]);
      int length=Integer.valueOf(split[1]);
      LinkedHashSet<Object> itemIdsInRange=getItemIdsInRange(startItemId,length);
      newValue.addAll(itemIdsInRange);
      renderedButNotSelectedItemIds.removeAll(itemIdsInRange);
    }
  }
  newValue.removeAll(renderedButNotSelectedItemIds);
  if (!isNullSelectionAllowed() && newValue.isEmpty()) {
    markAsDirty();
    return;
  }
  setValue(newValue,true);
}
