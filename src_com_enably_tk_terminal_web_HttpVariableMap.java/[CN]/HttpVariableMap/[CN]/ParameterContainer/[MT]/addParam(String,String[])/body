{
  if (name.startsWith("set:")) {
    int equalsIndex=name.indexOf('=');
    value[0]=name.substring(equalsIndex + 1,name.length());
    name=name.substring(4,equalsIndex);
    String[] curVal=(String[])values.get(name);
    if (curVal != null) {
      String[] newVal=new String[1 + curVal.length];
      newVal[curVal.length]=value[0];
      for (int i=0; i < curVal.length; i++)       newVal[i]=curVal[i];
      value=newVal;
      if (value.length == 2 && value[0].length() == value[1].length()) {
        boolean same=true;
        for (int i=0; i < value[0].length() - 1 && same; i++)         if (value[0].charAt(i) != value[1].charAt(i))         same=false;
        if (same && ((value[0].charAt(value[0].length() - 1) == 'x' && value[1].charAt(value[1].length() - 1) == 'y') || (value[0].charAt(value[0].length() - 1) == 'y' && value[1].charAt(value[1].length() - 1) == 'x'))) {
          value=new String[]{value[0].substring(0,value[1].length() - 2)};
        }
 else         if (same && value[0].equals(value[1]))         value=new String[]{value[0]};
      }
      if (value.length == 3 && value[1].length() == value[2].length() && value[0].length() + 2 == value[1].length()) {
        boolean same=true;
        for (int i=0; i < value[1].length() - 1 && same; i++)         if (value[2].charAt(i) != value[1].charAt(i))         same=false;
        for (int i=0; i < value[0].length() && same; i++)         if (value[0].charAt(i) != value[1].charAt(i))         same=false;
        if (same && (value[2].charAt(value[2].length() - 1) == 'x' && value[1].charAt(value[1].length() - 1) == 'y') || (value[2].charAt(value[2].length() - 1) == 'y' && value[1].charAt(value[1].length() - 1) == 'x')) {
          value=new String[]{value[0]};
        }
      }
    }
  }
 else   if (name.startsWith("set-array:")) {
    int equalsIndex=name.indexOf('=');
    if (equalsIndex < 0)     return;
    StringTokenizer commalist=new StringTokenizer(name.substring(equalsIndex + 1),",");
    name=name.substring(10,equalsIndex);
    String[] curVal=(String[])values.get(name);
    ArrayList elems=new ArrayList();
    if (curVal != null) {
      for (int i=0; i < curVal.length; i++)       elems.add(curVal[i]);
    }
    while (commalist.hasMoreTokens()) {
      String token=commalist.nextToken();
      if (token != null && token.length() > 0)       elems.add(token);
    }
    value=new String[elems.size()];
    for (int i=0; i < value.length; i++)     value[i]=(String)elems.get(i);
  }
 else   if (name.startsWith("array:")) {
    name=name.substring(6);
    StringTokenizer commalist=new StringTokenizer(value[0],",");
    String[] curVal=(String[])values.get(name);
    ArrayList elems=new ArrayList();
    if (curVal != null) {
      for (int i=0; i < curVal.length; i++)       elems.add(curVal[i]);
    }
    while (commalist.hasMoreTokens()) {
      String token=commalist.nextToken();
      if (token != null && token.length() > 0)       elems.add(token);
    }
    value=new String[elems.size()];
    for (int i=0; i < value.length; i++)     value[i]=(String)elems.get(i);
  }
 else   if (name.startsWith("declare:")) {
    name=name.substring(8);
    value=(String[])values.get(name);
    if (value == null)     value=new String[0];
  }
  WeakReference ref=(WeakReference)idToOwnerMap.get(name);
  VariableOwner owner=null;
  if (ref != null)   owner=(VariableOwner)ref.get();
  if (owner != null) {
    Set p=(Set)parameters.get(owner);
    if (p == null)     parameters.put(owner,p=new HashSet());
    p.add(name);
    if (value != null)     values.put(name,value);
  }
 else {
    if (ref != null) {
      idToNameMap.remove(name);
      idToOwnerMap.remove(name);
      idToTypeMap.remove(name);
      idToValueMap.remove(name);
    }
    nonVariables.put(name,value);
  }
}
