{
  final FileUpload upload=createFileUpload();
  final UploadProgressListener pl=new UploadProgressListener();
  upload.setProgressListener(pl);
  FileItemIterator iter;
  try {
    iter=getItemIterator(upload,request);
    while (iter.hasNext()) {
      final FileItemStream item=iter.next();
      final String name=item.getFieldName();
      final String filename=item.getName();
      final String mimeType=item.getContentType();
      final InputStream stream=item.openStream();
      if (item.isFormField()) {
      }
 else {
        final String pid=name.split("_")[0];
        System.out.println("Looking up upload component with PID " + pid);
        final Upload uploadComponent=(Upload)idPaintableMap.get(pid);
        if (uploadComponent == null) {
          throw new FileUploadException("Upload component not found");
        }
        if (uploadComponent.isReadOnly()) {
          throw new FileUploadException("Warning: ignored file upload because upload component is set as read-only");
        }
synchronized (application) {
          uploadComponent.startUpload();
        }
        final UploadStream upstream=new UploadStream(){
          public String getContentName(){
            return filename;
          }
          public String getContentType(){
            return mimeType;
          }
          public InputStream getStream(){
            return stream;
          }
          public String getStreamName(){
            return "stream";
          }
        }
;
        pl.setUpload(uploadComponent);
        try {
          uploadComponent.receiveUpload(upstream);
        }
 catch (        UploadException e) {
synchronized (application) {
            handleChangeVariablesError(application,uploadComponent,e,new HashMap<Object,Object>());
          }
        }
      }
    }
  }
 catch (  final FileUploadException e) {
    throw e;
  }
  sendUploadResponse(request,response);
}
