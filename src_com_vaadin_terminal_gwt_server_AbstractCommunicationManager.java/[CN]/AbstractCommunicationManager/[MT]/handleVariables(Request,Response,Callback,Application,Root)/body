{
  boolean success=true;
  String changes=getRequestPayload(request);
  if (changes != null) {
    final String[] bursts=changes.split(String.valueOf(VAR_BURST_SEPARATOR));
    if (!"true".equals(application2.getProperty(AbstractApplicationServlet.SERVLET_PARAMETER_DISABLE_XSRF_PROTECTION))) {
      if (bursts.length == 1 && "init".equals(bursts[0])) {
        request.setAttribute(WRITE_SECURITY_TOKEN_FLAG,true);
        return true;
      }
 else {
        String sessId=(String)request.getSession().getAttribute(ApplicationConnection.UIDL_SECURITY_TOKEN_ID);
        if (sessId == null || !sessId.equals(bursts[0])) {
          throw new InvalidUIDLSecurityKeyException("Security key mismatch");
        }
      }
    }
    for (int bi=1; bi < bursts.length; bi++) {
      final String burst=bursts[bi];
      success=handleVariableBurst(request,application2,success,burst);
      if (bi < bursts.length - 1) {
        final PrintWriter outWriter=new PrintWriter(new CharArrayWriter());
        paintAfterVariableChanges(request,response,callback,true,outWriter,root,false);
      }
    }
  }
  return success || closingWindowName != null;
}
