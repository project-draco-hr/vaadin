{
  if (initialized)   return;
  initialized=true;
  features=new Tree();
  features.setStyle("menu");
  features.addContainerProperty("name",String.class,"");
  features.addContainerProperty("feature",Feature.class,null);
  features.setItemCaptionPropertyId("name");
  features.addListener(this);
  features.setImmediate(true);
  layout=new GridLayout(2,1);
  setCompositionRoot(layout);
  OrderedLayout left=new OrderedLayout();
  left.addComponent(features);
  Button close=new Button("restart",getApplication(),"close");
  left.addComponent(close);
  close.setStyle("link");
  layout.addComponent(left,0,0,0,0);
  Label greeting=new Label(WELCOME_TEXT,Label.CONTENT_XHTML);
  welcome=new Embedded("",new ClassResource(getClass(),"millstone-logo.gif",getApplication()));
  layout.addComponent(welcome,1,0,1,0);
  registerFeature("/UI Components",new UIComponents());
  registerFeature("/UI Components/Basic/Text Field",new FeatureTextField());
  registerFeature("/UI Components/Basic/Date Field",new FeatureDateField());
  registerFeature("/UI Components/Basic/Button",new FeatureButton());
  registerFeature("/UI Components/Basic/Form",new FeatureForm());
  registerFeature("/UI Components/Basic/Label",new FeatureLabel());
  registerFeature("/UI Components/Basic/Link",new FeatureLink());
  registerFeature("/UI Components/Item Containers/Select",new FeatureSelect());
  registerFeature("/UI Components/Item Containers/Table",new FeatureTable());
  registerFeature("/UI Components/Item Containers/Tree",new FeatureTree());
  registerFeature("/UI Components/Layouts/Ordered Layout",new FeatureOrderedLayout());
  registerFeature("/UI Components/Layouts/Grid Layout",new FeatureGridLayout());
  registerFeature("/UI Components/Layouts/Custom Layout",new FeatureCustomLayout());
  registerFeature("/UI Components/Layouts/Panel",new FeaturePanel());
  registerFeature("/UI Components/Layouts/Tab Sheet",new FeatureTabSheet());
  registerFeature("/UI Components/Layouts/Window",new FeatureWindow());
  registerFeature("/UI Components/Layouts/Frame Window",new FeatureFrameWindow());
  registerFeature("/UI Components/Data handling/Embedded Objects",new FeatureEmbedded());
  registerFeature("/UI Components/Data handling/Upload",new FeatureUpload());
  registerFeature("/Data Model/Properties",new FeatureProperties());
  registerFeature("/Data Model/Items",new FeatureItems());
  registerFeature("/Data Model/Containers",new FeatureContainers());
  registerFeature("/Data Model/Validators",new FeatureValidators());
  registerFeature("/Data Model/Buffering",new FeatureBuffering());
  registerFeature("/Terminal/Server Initiated Events",new FeatureServerEvents());
  registerFeature("/Terminal/Parameters and URI Handling",new FeatureParameters());
  for (Iterator i=features.getItemIds().iterator(); i.hasNext(); )   features.expandItem(i.next());
}
