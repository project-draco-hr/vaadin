{
  if (null == value) {
    return combineTypeAndValue(VTYPE_UNDEFINED,JSONNull.getInstance());
  }
 else   if (value instanceof String[]) {
    String[] array=(String[])value;
    JSONArray jsonArray=new JSONArray();
    for (int i=0; i < array.length; ++i) {
      jsonArray.set(i,new JSONString(array[i]));
    }
    return combineTypeAndValue(VTYPE_STRINGARRAY,jsonArray);
  }
 else   if (value instanceof String) {
    return combineTypeAndValue(VTYPE_STRING,new JSONString((String)value));
  }
 else   if (value instanceof Boolean) {
    return combineTypeAndValue(VTYPE_BOOLEAN,JSONBoolean.getInstance((Boolean)value));
  }
 else   if (value instanceof Object[]) {
    Object[] array=(Object[])value;
    JSONArray jsonArray=new JSONArray();
    for (int i=0; i < array.length; ++i) {
      jsonArray.set(i,encode(array[i],connectorMap,connection));
    }
    return combineTypeAndValue(VTYPE_ARRAY,jsonArray);
  }
 else   if (value instanceof Map) {
    Map<String,Object> map=(Map<String,Object>)value;
    JSONObject jsonMap=new JSONObject();
    for (    String mapKey : map.keySet()) {
      Object mapValue=map.get(mapKey);
      jsonMap.put(mapKey,encode(mapValue,connectorMap,connection));
    }
    return combineTypeAndValue(VTYPE_MAP,jsonMap);
  }
 else   if (value instanceof ServerConnector) {
    ServerConnector paintable=(ServerConnector)value;
    return combineTypeAndValue(VTYPE_PAINTABLE,new JSONString(connectorMap.getConnectorId(paintable)));
  }
 else {
    if (getTransportType(value) != VTYPE_UNDEFINED) {
      return combineTypeAndValue(getTransportType(value),new JSONString(String.valueOf(value)));
    }
 else {
      String type=value.getClass().getName();
      JSONSerializer serializer=JsonDecoder.serializerMap.getSerializer(type);
      return combineTypeAndValue(type,serializer.serialize(value,connectorMap,connection));
    }
  }
}
