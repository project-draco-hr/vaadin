{
  if (client.updateComponent(this,uidl,true))   return;
  this.client=client;
  this.id=uidl.getStringAttribute("id");
  this.immediate=uidl.getBooleanAttribute("immediate");
  this.totalRows=uidl.getIntAttribute("totalrows");
  this.pageLength=uidl.getIntAttribute("pagelength");
  this.firstRow=uidl.getIntAttribute("firstrow");
  this.rows=uidl.getIntAttribute("rows");
  if (uidl.hasAttribute("selectmode")) {
    if (uidl.getStringAttribute("selectmode").equals("multi"))     selectMode=Table.SELECT_MODE_MULTI;
 else     selectMode=Table.SELECT_MODE_SINGLE;
    if (uidl.hasAttribute("selected")) {
      Set selectedKeys=uidl.getStringArrayVariableAsSet("selected");
      selectedRowKeys.clear();
      for (Iterator it=selectedKeys.iterator(); it.hasNext(); )       selectedRowKeys.add((String)it.next());
    }
  }
  if (uidl.hasVariable("sortascending"))   this.sortAscending=uidl.getBooleanVariable("sortascending");
  if (uidl.hasAttribute("rowheaders"))   rowHeaders=true;
  UIDL rowData=null;
  UIDL visibleColumns=null;
  for (Iterator it=uidl.getChildIterator(); it.hasNext(); ) {
    UIDL c=(UIDL)it.next();
    if (c.getTag().equals("rows"))     rowData=c;
 else     if (c.getTag().equals("actions"))     updateActionMap(c);
 else     if (c.getTag().equals("visiblecolumns"))     visibleColumns=c;
  }
  tBody.resize(rows + 1,uidl.getIntAttribute("cols") + (rowHeaders ? 1 : 0));
  updateHeader(visibleColumns);
  updateBody(rowData);
  updatePager();
}
