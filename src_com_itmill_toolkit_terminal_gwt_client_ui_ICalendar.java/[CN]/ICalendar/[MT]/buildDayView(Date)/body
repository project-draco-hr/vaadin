{
  if (this.hourPanel == null) {
    this.hourPanel=new SimplePanel();
    this.hourPanel.setStyleName(CLASSNAME + "-hours");
    this.calPanel.getFlexCellFormatter().setColSpan(8,0,7);
    this.calPanel.setWidget(8,0,this.hourPanel);
  }
 else {
    this.hourPanel.clear();
  }
  this.hourTable=new FlexTable();
  this.hourTable.addTableListener(this.ftListener);
  this.hourPanel.add(this.hourTable);
  this.hourTable.setCellSpacing(1);
  for (int i=0; i < 24; i++) {
    String style=(i % 2 == 0 ? "even" : "odd");
    if (realResolution >= RESOLUTION_HOUR) {
      if (this.date != null && this.date.getHours() == i) {
        style="selected";
      }
    }
    hourTable.getRowFormatter().setStyleName(i,CLASSNAME + "-row-" + style);
    String hstr=(i < 10 ? "0" : "") + i + ":00";
    if (this.dts.isTwelveHourClock()) {
      String ampm=(i < 12 ? "am" : "pm");
      hstr=(i <= 12 ? i : i - 12) + ":00 " + ampm;
    }
    hourTable.setHTML(i,0,"<span>" + hstr + "</span>");
    hourTable.getCellFormatter().setStyleName(i,0,CLASSNAME + "-time");
  }
  List entries=this.entrySource.getEntries(date,DateTimeService.RESOLUTION_DAY);
  int currentCol=1;
  for (Iterator it=entries.iterator(); it.hasNext(); ) {
    CalendarEntry entry=(CalendarEntry)it.next();
    int start=0;
    int hours=24;
    if (!entry.isNotime()) {
      Date d=entry.getStart();
      start=(d.getDate() < date.getDate() ? 0 : d.getHours());
      d=entry.getEnd();
      hours=(d.getDate() > date.getDate() ? 24 : d.getHours()) - start;
    }
    int col=currentCol;
    if (col > 1) {
      while (!this.hourTable.isCellPresent(start,col - 1))       col--;
    }
    this.hourTable.setHTML(start,col,"<span>" + entry.getTitle() + "</span>");
    this.hourTable.getFlexCellFormatter().setRowSpan(start,col,hours);
    this.hourTable.getFlexCellFormatter().setStyleName(start,col,CLASSNAME + "-entry");
    String sn=entry.getStyleName();
    if (sn != null && !sn.equals("")) {
      this.hourTable.getFlexCellFormatter().addStyleName(start,col,CLASSNAME + "-" + entry.getStyleName());
    }
    Element el=this.hourTable.getFlexCellFormatter().getElement(start,col);
    String tooltip;
    if (DateTimeService.isSameDay(entry.getStart(),entry.getEnd())) {
      tooltip=(start < 10 ? "0" : "") + start + ":00";
      if (this.dts.isTwelveHourClock()) {
        String ampm=(start < 12 ? "am" : "pm");
        tooltip=(start <= 12 ? start : start - 12) + ":00 " + ampm;
      }
      tooltip+=" (" + hours + "h) ";
      tooltip+=entry.getTitle() + "\n ";
    }
 else {
      tooltip=entry.getStringForDate(entry.getEnd()) + "\n ";
    }
    tooltip+="\"" + entry.getDescription() + "\"";
    DOM.setElementProperty(el,"title",tooltip);
    currentCol++;
  }
}
