{
  ScssStylesheet styleSheet=null;
  if (node instanceof ScssStylesheet) {
    styleSheet=(ScssStylesheet)node;
  }
 else {
    Node parent=node.getParentNode();
    while (parent != null && !(parent instanceof ScssStylesheet)) {
      parent=parent.getParentNode();
    }
    if (parent instanceof ScssStylesheet) {
      styleSheet=(ScssStylesheet)parent;
    }
  }
  if (styleSheet == null) {
    throw new ParseException("Nested import in an invalid context");
  }
  ArrayList<Node> c=new ArrayList<Node>(node.getChildren());
  for (  Node n : c) {
    if (n instanceof ImportNode) {
      ImportNode importNode=(ImportNode)n;
      if (!importNode.isPureCssImport()) {
        try {
          ScssStylesheet imported=ScssStylesheet.get(importNode.getUri(),styleSheet);
          if (imported == null) {
            throw new FileNotFoundException("Import '" + importNode.getUri() + "' in '"+ styleSheet.getFileName()+ "' could not be found");
          }
          traverse(imported);
          String prefix=getUrlPrefix(importNode.getUri());
          if (prefix != null) {
            updateUrlInImportedSheet(imported,prefix);
          }
          node.appendChildrenAfter(new ArrayList<Node>(imported.getChildren()),importNode);
          node.removeChild(importNode);
        }
 catch (        CSSException e) {
          Logger.getLogger(ImportNodeHandler.class.getName()).log(Level.SEVERE,null,e);
        }
catch (        IOException e) {
          Logger.getLogger(ImportNodeHandler.class.getName()).log(Level.SEVERE,null,e);
        }
      }
 else {
        if (styleSheet != node) {
          throw new ParseException("CSS imports can only be used at the top level, not as nested imports. Within style rules, use SCSS imports.");
        }
      }
    }
  }
}
