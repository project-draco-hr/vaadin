{
  try {
    Connection conn=connectionPool.reserveConnection();
    Statement statement=conn.createStatement();
    try {
      statement.execute("drop table " + TABLENAME);
    }
 catch (    SQLException e) {
      conn.rollback();
    }
switch (SQLTestsConstants.db) {
case HSQLDB:
      statement.execute("create table " + TABLENAME + " (id integer GENERATED BY DEFAULT AS IDENTITY, field1 varchar(100), field2 boolean, primary key(id))");
    break;
case MYSQL:
  statement.execute("create table " + TABLENAME + " (id integer auto_increment not null, field1 varchar(100), field2 boolean, primary key(id))");
break;
case POSTGRESQL:
statement.execute("create table " + TABLENAME + " (\"id\" serial primary key, \"field1\" varchar(100), \"field2\" boolean)");
break;
}
statement.executeUpdate("insert into " + TABLENAME + " values(default, 'Kalle', 'true')");
statement.executeUpdate("insert into " + TABLENAME + " values(default, 'Ville', 'true')");
statement.executeUpdate("insert into " + TABLENAME + " values(default, 'Jussi', 'true')");
statement.close();
conn.commit();
connectionPool.releaseConnection(conn);
}
 catch (SQLException e) {
e.printStackTrace();
}
}
