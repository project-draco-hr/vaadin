{
  if (client.updateComponent(this,uidl,true)) {
    return;
  }
  this.client=client;
  uidlId=uidl.getId();
  if (!this.getItems().isEmpty()) {
    this.clearItems();
  }
  UIDL items=uidl.getChildUIDL(1);
  Iterator itr=items.getChildIterator();
  Stack iteratorStack=new Stack();
  Stack menuStack=new Stack();
  MenuBar currentMenu=this;
  Command emptyCommand=new Command(){
    public void execute(){
    }
  }
;
  while (itr.hasNext()) {
    UIDL item=(UIDL)itr.next();
    MenuItem menuItem=null;
    String itemText=item.getStringAttribute("text");
    final int itemId=item.getIntAttribute("id");
    boolean itemHasCommand=item.getBooleanAttribute("command");
    if (!item.hasAttribute("icon")) {
      itemText="<p>" + itemText + "</p>";
    }
 else {
      itemText="<p>" + "<img src=\"" + client.translateToolkitUri(item.getStringAttribute("icon")) + "\"</img>"+ itemText+ "</p>";
    }
    if (itemHasCommand) {
      Command normalCommand=new Command(){
        public void execute(){
          hostReference.onMenuClick(itemId);
        }
      }
;
      menuItem=currentMenu.addItem(itemText,true,normalCommand);
    }
 else {
      menuItem=currentMenu.addItem(itemText,true,emptyCommand);
    }
    if (item.getChildCount() > 0) {
      menuStack.push(currentMenu);
      iteratorStack.push(itr);
      itr=item.getChildIterator();
      currentMenu=new MenuBar(true);
      menuItem.setSubMenu(currentMenu);
    }
    if (!itr.hasNext() && !iteratorStack.empty()) {
      itr=(Iterator)iteratorStack.pop();
      currentMenu=(MenuBar)menuStack.pop();
    }
  }
}
