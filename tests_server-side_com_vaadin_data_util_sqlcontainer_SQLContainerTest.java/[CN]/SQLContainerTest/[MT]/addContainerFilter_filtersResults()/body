{
  FreeformQuery query=new FreeformQuery("SELECT * FROM people",connectionPool,"ID");
  FreeformStatementDelegate delegate=EasyMock.createMock(FreeformStatementDelegate.class);
  final ArrayList<Filter> filters=new ArrayList<Filter>();
  delegate.setFilters(null);
  EasyMock.expectLastCall().anyTimes();
  delegate.setOrderBy(null);
  EasyMock.expectLastCall().anyTimes();
  delegate.setOrderBy(EasyMock.isA(List.class));
  EasyMock.expectLastCall().anyTimes();
  delegate.setFilters(EasyMock.isA(List.class));
  EasyMock.expectLastCall().andAnswer(new IAnswer<Object>(){
    @Override public Object answer() throws Throwable {
      List<Filter> orders=(List<Filter>)EasyMock.getCurrentArguments()[0];
      filters.clear();
      filters.addAll(orders);
      return null;
    }
  }
).anyTimes();
  EasyMock.expect(delegate.getQueryStatement(EasyMock.anyInt(),EasyMock.anyInt())).andAnswer(new IAnswer<StatementHelper>(){
    @Override public StatementHelper answer() throws Throwable {
      Object[] args=EasyMock.getCurrentArguments();
      int offset=(Integer)(args[0]);
      int limit=(Integer)(args[1]);
      return FreeformQueryUtil.getQueryWithFilters(filters,offset,limit);
    }
  }
).anyTimes();
  EasyMock.expect(delegate.getCountStatement()).andAnswer(new IAnswer<StatementHelper>(){
    @Override @SuppressWarnings("deprecation") public StatementHelper answer() throws Throwable {
      StatementHelper sh=new StatementHelper();
      StringBuffer query=new StringBuffer("SELECT COUNT(*) FROM people");
      if (!filters.isEmpty()) {
        query.append(QueryBuilder.getWhereStringForFilters(filters,sh));
      }
      sh.setQueryString(query.toString());
      return sh;
    }
  }
).anyTimes();
  EasyMock.replay(delegate);
  query.setDelegate(delegate);
  SQLContainer container=new SQLContainer(query);
  Assert.assertEquals(4,container.size());
  container.addContainerFilter("NAME","Vi",false,false);
  Assert.assertEquals(1,container.size());
  Assert.assertEquals("Ville",container.getContainerProperty(container.lastItemId(),"NAME").getValue());
  EasyMock.verify(delegate);
}
