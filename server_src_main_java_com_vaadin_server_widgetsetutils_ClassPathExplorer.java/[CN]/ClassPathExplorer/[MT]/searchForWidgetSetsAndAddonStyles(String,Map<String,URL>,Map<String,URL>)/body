{
  URL location=classpathLocations.get(locationString);
  File directory=new File(location.getFile());
  if (directory.exists() && !directory.isHidden()) {
    String[] files=directory.list();
    for (int i=0; i < files.length; i++) {
      if (!files[i].endsWith(".gwt.xml")) {
        continue;
      }
      String classname=files[i].substring(0,files[i].length() - 8);
      String packageName=locationString.substring(locationString.lastIndexOf("/") + 1);
      classname=packageName + "." + classname;
      if (!WidgetSetBuilder.isWidgetset(classname)) {
        continue;
      }
      if (!widgetsets.containsKey(classname)) {
        String packagePath=packageName.replaceAll("\\.","/");
        String basePath=location.getFile();
        if (basePath.endsWith("/" + packagePath)) {
          basePath=basePath.replaceAll("/" + packagePath + "$","");
        }
 else         if (basePath.endsWith("/" + packagePath + "/")) {
          basePath=basePath.replaceAll("/" + packagePath + "/$","");
        }
 else {
          throw new IllegalStateException("Error trying to find base path, location (" + location.getFile() + ") does not end in expected '/"+ packagePath+ "'");
        }
        try {
          URL url=new URL(location.getProtocol(),location.getHost(),location.getPort(),basePath);
          widgetsets.put(classname,url);
        }
 catch (        MalformedURLException e) {
          error("Error locating the widgetset " + classname,e);
        }
      }
    }
  }
 else {
    try {
      URLConnection openConnection=location.openConnection();
      if (openConnection instanceof JarURLConnection) {
        JarURLConnection conn=(JarURLConnection)openConnection;
        JarFile jarFile=conn.getJarFile();
        Manifest manifest=jarFile.getManifest();
        if (manifest == null) {
          return;
        }
        String value=manifest.getMainAttributes().getValue("Vaadin-Widgetsets");
        if (value != null) {
          String[] widgetsetNames=value.split(",");
          for (int i=0; i < widgetsetNames.length; i++) {
            String widgetsetname=widgetsetNames[i].trim();
            if (!widgetsetname.equals("")) {
              widgetsets.put(widgetsetname,location);
            }
          }
        }
        value=manifest.getMainAttributes().getValue("Vaadin-Stylesheets");
        if (value != null) {
          String[] stylesheets=value.split(",");
          for (int i=0; i < stylesheets.length; i++) {
            String stylesheet=stylesheets[i].trim();
            if (!stylesheet.equals("")) {
              addonStyles.put(stylesheet,location);
            }
          }
        }
      }
    }
 catch (    IOException e) {
      error("Error parsing jar file",e);
    }
  }
}
