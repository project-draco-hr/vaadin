{
  if (index < 0 || index > getColumnCount()) {
    throw new IndexOutOfBoundsException("The given index(" + index + ") was outside of the current number of columns (0.."+ getColumnCount()+ ")");
  }
  if (numberOfColumns < 1) {
    throw new IllegalArgumentException("Number of columns must be 1 or greater (was " + numberOfColumns);
  }
  flyweightRow.addCells(index,numberOfColumns);
  for (int i=0; i < numberOfColumns; i++) {
    columns.add(index,new Column());
  }
  boolean frozen=index < frozenColumns;
  if (frozen) {
    frozenColumns+=numberOfColumns;
  }
  boolean scrollbarWasNeeded=horizontalScrollbar.getOffsetSize() < horizontalScrollbar.getScrollSize();
  scroller.recalculateScrollbarsForVirtualViewport();
  boolean scrollbarIsNowNeeded=horizontalScrollbar.getOffsetSize() < horizontalScrollbar.getScrollSize();
  if (!scrollbarWasNeeded && scrollbarIsNowNeeded) {
    body.verifyEscalatorCount();
  }
  header.paintInsertColumns(index,numberOfColumns,frozen);
  body.paintInsertColumns(index,numberOfColumns,frozen);
  footer.paintInsertColumns(index,numberOfColumns,frozen);
  if (header.getRowCount() > 0 || body.getRowCount() > 0 || footer.getRowCount() > 0) {
    for (int col=index; col < index + numberOfColumns; col++) {
      getColumnConfiguration().setColumnWidth(col,-1);
      columnConfiguration.columns.get(col).widthIsFinalized();
    }
  }
  int pixelsToInsertedColumn=columnConfiguration.getCalculatedColumnsWidth(Range.withLength(0,index));
  final boolean columnsWereAddedToTheLeftOfViewport=scroller.lastScrollLeft > pixelsToInsertedColumn;
  if (columnsWereAddedToTheLeftOfViewport) {
    int insertedColumnsWidth=columnConfiguration.getCalculatedColumnsWidth(Range.withLength(index,numberOfColumns));
    horizontalScrollbar.setScrollPos(scroller.lastScrollLeft + insertedColumnsWidth);
  }
}
