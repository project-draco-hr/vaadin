{
  final int maxEscalatorRowCapacity=(int)Math.ceil(calculateHeight() / ROW_HEIGHT_PX) + 1;
  final int escalatorRowsStillFit=maxEscalatorRowCapacity - root.getChildCount();
  final int escalatorRowsNeeded=Math.min(numberOfRows,escalatorRowsStillFit);
  if (escalatorRowsNeeded > 0) {
    final List<Element> addedRows=super.paintInsertRows(index,escalatorRowsNeeded);
    visualRowOrder.addAll(index,addedRows);
    for (int i=0; i < addedRows.size(); i++) {
      setRowPosition(addedRows.get(i),0,(index + i) * ROW_HEIGHT_PX);
    }
    for (int i=index + addedRows.size(); i < visualRowOrder.size(); i++) {
      final Element tr=visualRowOrder.get(i);
      setRowPosition(tr,0,i * ROW_HEIGHT_PX);
    }
    return addedRows;
  }
 else {
    return new ArrayList<Element>();
  }
}
