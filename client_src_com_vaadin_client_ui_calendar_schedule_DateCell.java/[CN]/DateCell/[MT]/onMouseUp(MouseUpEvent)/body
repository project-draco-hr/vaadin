{
  if (event.getNativeButton() != NativeEvent.BUTTON_LEFT) {
    return;
  }
  Event.releaseCapture(getElement());
  setFocus(false);
  int dragDistance=Math.abs(eventRangeStart - event.getY());
  if (dragDistance > 0 && eventRangeStart >= 0) {
    Element main=getElement();
    if (eventRangeStart > eventRangeStop) {
      if (eventRangeStop <= -1) {
        eventRangeStop=0;
      }
      int temp=eventRangeStart;
      eventRangeStart=eventRangeStop;
      eventRangeStop=temp;
    }
    NodeList<Node> nodes=main.getChildNodes();
    int slotStart=-1;
    int slotEnd=-1;
    for (int i=0; i < nodes.getLength(); i++) {
      Element element=(Element)nodes.getItem(i);
      boolean isRangeElement=element.getClassName().contains("v-daterange");
      if (isRangeElement && slotStart == -1) {
        slotStart=i;
        slotEnd=i;
      }
 else       if (isRangeElement) {
        slotEnd=i;
      }
 else       if (slotStart != -1 && slotEnd != -1) {
        break;
      }
    }
    clearSelectionRange();
    int startMinutes=firstHour * 60 + slotStart * 30;
    int endMinutes=(firstHour * 60) + (slotEnd + 1) * 30;
    Date currentDate=getDate();
    String yr=(currentDate.getYear() + 1900) + "-" + (currentDate.getMonth() + 1)+ "-"+ currentDate.getDate();
    if (weekgrid.getCalendar().getRangeSelectListener() != null) {
      weekgrid.getCalendar().getRangeSelectListener().rangeSelected(yr + ":" + startMinutes+ ":"+ endMinutes);
    }
    eventRangeStart=-1;
  }
 else {
    eventRangeStart=-1;
    cancelRangeSelect();
  }
}
