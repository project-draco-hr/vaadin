{
  VGridLayout layout=getWidget();
  layout.client=client;
  if (!isRealUpdate(uidl)) {
    return;
  }
  int cols=getState().getColumns();
  int rows=getState().getRows();
  layout.columnWidths=new int[cols];
  layout.rowHeights=new int[rows];
  if (layout.cells == null) {
    layout.cells=new Cell[cols][rows];
  }
 else   if (layout.cells.length != cols || layout.cells[0].length != rows) {
    Cell[][] newCells=new Cell[cols][rows];
    for (int i=0; i < layout.cells.length; i++) {
      for (int j=0; j < layout.cells[i].length; j++) {
        if (i < cols && j < rows) {
          newCells[i][j]=layout.cells[i][j];
        }
      }
    }
    layout.cells=newCells;
  }
  final int[] alignments=uidl.getIntArrayAttribute("alignments");
  int alignmentIndex=0;
  HashSet<Widget> nonRenderedWidgets=new HashSet<Widget>(layout.widgetToCell.keySet());
  for (final Iterator<?> i=uidl.getChildIterator(); i.hasNext(); ) {
    final UIDL r=(UIDL)i.next();
    if ("gr".equals(r.getTag())) {
      for (final Iterator<?> j=r.getChildIterator(); j.hasNext(); ) {
        final UIDL cellUidl=(UIDL)j.next();
        if ("gc".equals(cellUidl.getTag())) {
          int row=cellUidl.getIntAttribute("y");
          int col=cellUidl.getIntAttribute("x");
          Cell cell=layout.getCell(row,col,cellUidl);
          if (cell.hasContent()) {
            cell.setAlignment(new AlignmentInfo(alignments[alignmentIndex++]));
            nonRenderedWidgets.remove(cell.slot.getWidget());
          }
        }
      }
    }
  }
  layout.colExpandRatioArray=uidl.getIntArrayAttribute("colExpand");
  layout.rowExpandRatioArray=uidl.getIntArrayAttribute("rowExpand");
  layout.updateMarginStyleNames(new VMarginInfo(getState().getMarginsBitmask()));
  layout.updateSpacingStyleName(getState().isSpacing());
  if (needCaptionUpdate) {
    needCaptionUpdate=false;
    for (    ComponentConnector child : getChildren()) {
      if (child.delegateCaptionHandling()) {
        updateCaption(child);
      }
    }
  }
  getLayoutManager().setNeedsUpdate(this);
}
