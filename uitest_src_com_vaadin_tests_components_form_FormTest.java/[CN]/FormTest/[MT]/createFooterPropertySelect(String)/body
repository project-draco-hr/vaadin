{
  String propertyCategory="Footer properties";
  createCategory(propertyCategory,category);
  LinkedHashMap<String,String> options=new LinkedHashMap<String,String>();
  options.put("auto","");
  options.put("200px","200px");
  options.put("100%","100%");
  createSelectAction("width",propertyCategory,options,"auto",footerWidthCommand);
  createSelectAction("height",propertyCategory,options,"auto",footerHeightCommand);
  LinkedHashMap<String,Alignment> alignmentOptions=new LinkedHashMap<String,Alignment>();
  for (  AlignmentInfo horizontal : new AlignmentInfo[]{AlignmentInfo.LEFT,AlignmentInfo.CENTER,AlignmentInfo.RIGHT}) {
    for (    AlignmentInfo vertical : new AlignmentInfo[]{AlignmentInfo.TOP,AlignmentInfo.MIDDLE,AlignmentInfo.BOTTOM}) {
      Alignment a=new Alignment(horizontal.getBitMask() + vertical.getBitMask());
      alignmentOptions.put(a.getHorizontalAlignment() + " " + a.getVerticalAlignment(),a);
    }
  }
  Command<Form,Alignment> footerComponentAlignmentCommand=new Command<Form,Alignment>(){
    @Override public void execute(    Form c,    Alignment value,    Object data){
      Layout l=c.getFooter();
      if (l instanceof AlignmentHandler) {
        ((AlignmentHandler)l).setComponentAlignment(l.getComponentIterator().next(),value);
      }
    }
  }
;
  createSelectAction("Component alignment",propertyCategory,alignmentOptions,"left",footerComponentAlignmentCommand);
}
