{
  if (path.isEmpty() || locator.isValidForLegacyLocator(path)) {
    return getLegacyLocatorQuery();
  }
  String[] fragments;
  String tmpPath=path;
  List<SelectorPredicate> postFilters=SelectorPredicate.extractPostFilterPredicates(path);
  if (postFilters.size() > 0) {
    tmpPath=tmpPath.substring(1,tmpPath.lastIndexOf(')'));
    if (tmpPath.contains("#")) {
      tmpPath=tmpPath.split("#")[0];
    }
  }
  fragments=tmpPath.split("/");
  String elementQueryString="";
  int index=0;
  for (  SelectorPredicate p : postFilters) {
    if (p.getIndex() > 0) {
      index=p.getIndex();
    }
  }
  for (int i=1; i < fragments.length; ++i) {
    if (fragments[i].isEmpty()) {
      continue;
    }
    boolean recursive=(i > 1 ? fragments[i - 1].isEmpty() : false);
    String queryFragment=(!elementQueryString.isEmpty() ? "." : "");
    queryFragment+=(!recursive ? "$" : "") + generateFragment(fragments[i]);
    elementQueryString+=queryFragment;
  }
  if (!hasId(fragments[fragments.length - 1])) {
    if (index == 0) {
      elementQueryString+=".first()";
    }
 else {
      elementQueryString+=".get(" + index + ")";
    }
  }
  return generateJavaVariable(fragments[fragments.length - 1]) + elementQueryString + ";";
}
