{
  super.updateFromUIDL(uidl,client);
  if (!isRealUpdate(uidl)) {
    return;
  }
  getWidget().htmlContentAllowed=uidl.hasAttribute(VMenuBar.HTML_CONTENT_ALLOWED);
  getWidget().openRootOnHover=uidl.getBooleanAttribute(VMenuBar.OPEN_ROOT_MENU_ON_HOWER);
  getWidget().enabled=isEnabled();
  getWidget().client=client;
  getWidget().uidlId=uidl.getId();
  if (!getWidget().getItems().isEmpty()) {
    getWidget().clearItems();
  }
  UIDL options=uidl.getChildUIDL(0);
  if (null != getState() && !getState().isUndefinedWidth()) {
    UIDL moreItemUIDL=options.getChildUIDL(0);
    StringBuffer itemHTML=new StringBuffer();
    if (moreItemUIDL.hasAttribute("icon")) {
      itemHTML.append("<img src=\"" + Util.escapeAttribute(client.translateVaadinUri(moreItemUIDL.getStringAttribute("icon"))) + "\" class=\""+ Icon.CLASSNAME+ "\" alt=\"\" />");
    }
    String moreItemText=moreItemUIDL.getStringAttribute("text");
    if ("".equals(moreItemText)) {
      moreItemText="&#x25BA;";
    }
    itemHTML.append(moreItemText);
    getWidget().moreItem=GWT.create(CustomMenuItem.class);
    getWidget().moreItem.setHTML(itemHTML.toString());
    getWidget().moreItem.setCommand(VMenuBar.emptyCommand);
    getWidget().collapsedRootItems=new VMenuBar(true,getWidget());
    getWidget().moreItem.setSubMenu(getWidget().collapsedRootItems);
    getWidget().moreItem.addStyleName(VMenuBar.CLASSNAME + "-more-menuitem");
  }
  UIDL uidlItems=uidl.getChildUIDL(1);
  Iterator<Object> itr=uidlItems.getChildIterator();
  Stack<Iterator<Object>> iteratorStack=new Stack<Iterator<Object>>();
  Stack<VMenuBar> menuStack=new Stack<VMenuBar>();
  VMenuBar currentMenu=getWidget();
  while (itr.hasNext()) {
    UIDL item=(UIDL)itr.next();
    CustomMenuItem currentItem=null;
    final int itemId=item.getIntAttribute("id");
    boolean itemHasCommand=item.hasAttribute("command");
    boolean itemIsCheckable=item.hasAttribute(VMenuBar.ATTRIBUTE_CHECKED);
    String itemHTML=getWidget().buildItemHTML(item);
    Command cmd=null;
    if (!item.hasAttribute("separator")) {
      if (itemHasCommand || itemIsCheckable) {
        cmd=new Command(){
          public void execute(){
            getWidget().hostReference.onMenuClick(itemId);
          }
        }
;
      }
    }
    currentItem=currentMenu.addItem(itemHTML.toString(),cmd);
    currentItem.updateFromUIDL(item,client);
    if (item.getChildCount() > 0) {
      menuStack.push(currentMenu);
      iteratorStack.push(itr);
      itr=item.getChildIterator();
      currentMenu=new VMenuBar(true,currentMenu);
      if (getState().hasStyles()) {
        for (        String style : getState().getStyles()) {
          currentMenu.addStyleDependentName(style);
        }
      }
      currentItem.setSubMenu(currentMenu);
    }
    while (!itr.hasNext() && !iteratorStack.empty()) {
      boolean hasCheckableItem=false;
      for (      CustomMenuItem menuItem : currentMenu.getItems()) {
        hasCheckableItem=hasCheckableItem || menuItem.isCheckable();
      }
      if (hasCheckableItem) {
        currentMenu.addStyleDependentName("check-column");
      }
 else {
        currentMenu.removeStyleDependentName("check-column");
      }
      itr=iteratorStack.pop();
      currentMenu=menuStack.pop();
    }
  }
  getWidget().iLayout(false);
}
