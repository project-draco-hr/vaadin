{
  String requestPath=request.getPathInfo();
  if (requestPath == null) {
    return false;
  }
  Matcher matcher=CONNECTOR_RESOURCE_PATTERN.matcher(requestPath);
  if (!matcher.matches()) {
    return false;
  }
  String uiId=matcher.group(1);
  String cid=matcher.group(2);
  String key=matcher.group(3);
  session.lock();
  UI ui;
  ClientConnector connector;
  try {
    ui=session.getUIById(Integer.parseInt(uiId));
    if (ui == null) {
      return error(request,response,"Ignoring connector request for no-existent root " + uiId);
    }
    connector=ui.getConnectorTracker().getConnector(cid);
    if (connector == null) {
      return error(request,response,"Ignoring connector request for no-existent connector " + cid + " in root "+ uiId);
    }
  }
  finally {
    session.unlock();
  }
  Map<Class<?>,CurrentInstance> oldInstances=CurrentInstance.setCurrent(ui);
  try {
    if (!connector.handleConnectorRequest(request,response,key)) {
      return error(request,response,connector.getClass().getSimpleName() + " (" + connector.getConnectorId()+ ") did not handle connector request for "+ key);
    }
  }
 catch (  Exception e) {
    session.lock();
    try {
      session.getCommunicationManager().handleConnectorRelatedException(connector,e);
    }
  finally {
      session.unlock();
    }
  }
 finally {
    CurrentInstance.restoreInstances(oldInstances);
  }
  return true;
}
