{
  DataGenerator.addFiveThousandPeople(connectionPool);
  FreeformQuery query=new FreeformQuery("SELECT * FROM people",Arrays.asList("ID"),connectionPool);
  FreeformQueryDelegate delegate=EasyMock.createMock(FreeformQueryDelegate.class);
  if (SQLTestsConstants.db == DB.MSSQL) {
    EasyMock.expect(delegate.getQueryString(200,100)).andReturn("SELECT * FROM (SELECT row_number()" + "OVER (ORDER BY id ASC) AS rownum, * FROM people)" + " AS a WHERE a.rownum BETWEEN 201 AND 300");
  }
 else   if (SQLTestsConstants.db == DB.ORACLE) {
    EasyMock.expect(delegate.getQueryString(200,100)).andReturn("SELECT * FROM (SELECT  x.*, ROWNUM AS r FROM" + " (SELECT * FROM people ORDER BY ID ASC) x) WHERE r BETWEEN 201 AND 300");
  }
 else {
    EasyMock.expect(delegate.getQueryString(200,100)).andReturn("SELECT * FROM people LIMIT 100 OFFSET 200");
  }
  EasyMock.replay(delegate);
  query.setDelegate(delegate);
  query.beginTransaction();
  ResultSet rs=query.getResults(200,100);
  for (int i=0; i < 100; i++) {
    Assert.assertTrue(rs.next());
    Assert.assertEquals(200 + i + offset,rs.getInt("ID"));
  }
  Assert.assertFalse(rs.next());
  query.commit();
}
