{
  VerticalLayout rootLayout=new VerticalLayout();
  setContent(rootLayout);
  rootLayout.setSizeFull();
  rootLayout.setMargin(false);
  HorizontalLayout top=new HorizontalLayout();
  top.setWidth("100%");
  top.setMargin(false,true,false,true);
  top.setSpacing(true);
  rootLayout.addComponent(top);
  HorizontalLayout playback=new HorizontalLayout();
  HorizontalLayout volume=new HorizontalLayout();
  HorizontalLayout status=new HorizontalLayout();
  HorizontalLayout viewmodes=new HorizontalLayout();
  ComboBox search=new ComboBox();
  top.addComponent(playback);
  top.addComponent(volume);
  top.addComponent(status);
  top.addComponent(viewmodes);
  top.addComponent(search);
  top.setComponentAlignment(playback,Alignment.MIDDLE_LEFT);
  top.setComponentAlignment(volume,Alignment.MIDDLE_LEFT);
  top.setComponentAlignment(status,Alignment.MIDDLE_CENTER);
  top.setComponentAlignment(viewmodes,Alignment.MIDDLE_LEFT);
  top.setComponentAlignment(search,Alignment.MIDDLE_LEFT);
  top.setExpandRatio(status,1.0F);
  Button prev=new NativeButton("Previous");
  Button play=new NativeButton("Play/pause");
  Button next=new NativeButton("Next");
  playback.addComponent(prev);
  playback.addComponent(play);
  playback.addComponent(next);
  playback.setSpacing(true);
  Button mute=new NativeButton("mute");
  Slider vol=new Slider();
  vol.setOrientation(Slider.ORIENTATION_HORIZONTAL);
  vol.setWidth("100px");
  Button max=new NativeButton("max");
  volume.addComponent(mute);
  volume.addComponent(vol);
  volume.addComponent(max);
  status.setWidth("80%");
  status.setSpacing(true);
  Button toggleVisualization=new NativeButton("Mode");
  Label timeFromStart=new Label("0:00");
  VerticalLayout trackDetails=new VerticalLayout();
  trackDetails.setWidth("100%");
  Label track=new Label("Track Name");
  Label album=new Label("Album Name - Artist");
  track.setWidth(null);
  album.setWidth(null);
  Slider progress=new Slider();
  progress.setOrientation(Slider.ORIENTATION_HORIZONTAL);
  progress.setWidth("100%");
  trackDetails.addComponent(track);
  trackDetails.addComponent(album);
  trackDetails.addComponent(progress);
  trackDetails.setComponentAlignment(track,Alignment.TOP_CENTER);
  trackDetails.setComponentAlignment(album,Alignment.TOP_CENTER);
  Label timeToEnd=new Label("-4:46");
  Button jumpToTrack=new NativeButton("Show");
  status.addComponent(toggleVisualization);
  status.setComponentAlignment(toggleVisualization,Alignment.MIDDLE_LEFT);
  status.addComponent(timeFromStart);
  status.setComponentAlignment(timeFromStart,Alignment.BOTTOM_LEFT);
  status.addComponent(trackDetails);
  status.addComponent(timeToEnd);
  status.setComponentAlignment(timeToEnd,Alignment.BOTTOM_LEFT);
  status.addComponent(jumpToTrack);
  status.setComponentAlignment(jumpToTrack,Alignment.MIDDLE_LEFT);
  status.setExpandRatio(trackDetails,1.0F);
  Button viewAsTable=new NativeButton("Table");
  Button viewAsGrid=new NativeButton("Grid");
  Button coverflow=new NativeButton("Coverflow");
  viewmodes.addComponent(viewAsTable);
  viewmodes.addComponent(viewAsGrid);
  viewmodes.addComponent(coverflow);
  HorizontalSplitPanel bottom=new HorizontalSplitPanel();
  rootLayout.addComponent(bottom);
  rootLayout.setExpandRatio(bottom,1.0F);
  bottom.setSplitPosition(200,Sizeable.UNITS_PIXELS);
  VerticalLayout sidebar=new VerticalLayout();
  sidebar.setSizeFull();
  bottom.setFirstComponent(sidebar);
  VerticalLayout selections=new VerticalLayout();
  Label library=new Label("Library");
  Button music=new NativeButton("Music");
  music.setWidth("100%");
  Label store=new Label("Store");
  Button vaadinTunesStore=new NativeButton("VaadinTunes Store");
  vaadinTunesStore.setWidth("100%");
  Button purchased=new NativeButton("Purchased");
  purchased.setWidth("100%");
  Label playlists=new Label("Playlists");
  Button genius=new NativeButton("Geniues");
  genius.setWidth("100%");
  Button recent=new NativeButton("Recently Added");
  recent.setWidth("100%");
  selections.addComponent(library);
  selections.addComponent(music);
  selections.addComponent(store);
  selections.addComponent(vaadinTunesStore);
  selections.addComponent(purchased);
  selections.addComponent(playlists);
  selections.addComponent(genius);
  selections.addComponent(recent);
  sidebar.addComponent(selections);
  sidebar.setExpandRatio(selections,1.0F);
  Embedded cover=new Embedded("Currently Playing");
  sidebar.addComponent(cover);
  Table listing=new Table();
  listing.setSizeFull();
  listing.setSelectable(true);
  bottom.setSecondComponent(listing);
  listing.addContainerProperty("Name",String.class,"");
  listing.addContainerProperty("Time",String.class,"0:00");
  listing.addContainerProperty("Artist",String.class,"");
  listing.addContainerProperty("Album",String.class,"");
  listing.addContainerProperty("Genre",String.class,"");
  listing.addContainerProperty("Rating",NativeSelect.class,new NativeSelect());
  String[] tracks=new String[]{"Red Flag","Millstone","Not The Sun","Breath","Here We Are","Deep Heaven","Her Voice Resides","Natural Tan","End It All","Kings","Daylight Slaving","Mad Man","Resolve","Teargas","African Air","Passing Bird"};
  String[] times=new String[]{"4:12","6:03","5:43","4:32","3:42","4:45","2:56","9:34","2:10","3:44","5:49","6:30","5:18","7:42","3:13","2:52"};
  String[] artists=new String[]{"Billy Talent","Brand New","Breaking Benjamin","Becoming The Archetype","Bullet For My Valentine","Chasing Victory","Chimaira","Danko Jones","Deadlock","Deftones","From Autumn To Ashes","Haste The Day","Four Year Strong","In Flames","Kemopetrol","John Legend"};
  String[] albums=new String[]{"Once Again","The Caitiff Choir","The Devil And God","Light Grenades","Dicthonomy","Back In Black","Dreamer","Come Clarity","Year Zero","Frames","Fortress","Phobia","The Poison","Manifesto","White Pony","The Big Dirty"};
  String[] genres=new String[]{"Rock","Metal","Hardcore","Indie","Pop","Alternative","Blues","Jazz","Hip Hop","Electronica","Punk","Hard Rock","Dance","R'n'B","Gospel","Country"};
  for (int i=0; i < 1000; i++) {
    NativeSelect s=new NativeSelect();
    s.addItem("1 star");
    s.addItem("2 stars");
    s.addItem("3 stars");
    s.addItem("4 stars");
    s.addItem("5 stars");
    s.select(i % 5 + " stars");
    final int index=i % 16;
    listing.addItem(new Object[]{tracks[index],times[index],artists[index],albums[index],genres[index],s},i);
  }
  listing.setColumnAlignment("Time",Table.ALIGN_RIGHT);
  top.setStyleName("top");
  top.setHeight("75px");
  playback.setStyleName("playback");
  playback.setMargin(false,true,false,false);
  play.setStyleName("play");
  next.setStyleName("next");
  prev.setStyleName("prev");
  playback.setComponentAlignment(prev,Alignment.MIDDLE_LEFT);
  playback.setComponentAlignment(next,Alignment.MIDDLE_LEFT);
  volume.setStyleName("volume");
  mute.setStyleName("mute");
  max.setStyleName("max");
  vol.setWidth("78px");
  status.setStyleName("status");
  status.setMargin(true);
  status.setHeight("46px");
  toggleVisualization.setStyleName("toggle-vis");
  jumpToTrack.setStyleName("jump");
  viewAsTable.setStyleName("viewmode-table");
  viewAsGrid.setStyleName("viewmode-grid");
  coverflow.setStyleName("viewmode-coverflow");
  sidebar.setStyleName("sidebar");
  music.setStyleName("selected");
  cover.setSource(new ThemeResource("images/album-cover.jpg"));
  cover.setWidth("100%");
}
