{
  super.onBrowserEvent(event);
  final int type=DOM.eventGetType(event);
  final Element target=DOM.eventGetTarget(event);
  if (type == Event.ONLOAD && target == icon.getElement()) {
    iconLoaded.trigger();
  }
  if (disabled) {
    return;
  }
  final boolean inCaption=isCaptionElement(target);
  if (inCaption && client.hasEventListeners(VTree.this,TreeConstants.ITEM_CLICK_EVENT_ID) && (type == Event.ONDBLCLICK || type == Event.ONMOUSEUP)) {
    fireClick(event);
  }
  if (type == Event.ONCLICK) {
    if (getElement() == target) {
      toggleState();
    }
 else     if (!readonly && inCaption) {
      if (selectable) {
        if (handleClickSelection(event.getCtrlKey() || event.getMetaKey(),event.getShiftKey())) {
          event.preventDefault();
        }
      }
 else {
        setFocusedNode(this);
      }
    }
    event.stopPropagation();
  }
 else   if (type == Event.ONCONTEXTMENU) {
    showContextMenu(event);
  }
  if (dragMode != 0 || dropHandler != null) {
    if (type == Event.ONMOUSEDOWN || type == Event.ONTOUCHSTART) {
      if (nodeCaptionDiv.isOrHasChild((Node)event.getEventTarget().cast())) {
        if (dragMode > 0 && (type == Event.ONTOUCHSTART || event.getButton() == NativeEvent.BUTTON_LEFT)) {
          mouseDownEvent=event;
          if (type == Event.ONMOUSEDOWN) {
            event.preventDefault();
          }
 else {
            event.stopPropagation();
          }
        }
      }
    }
 else     if (type == Event.ONMOUSEMOVE || type == Event.ONMOUSEOUT || type == Event.ONTOUCHMOVE) {
      if (mouseDownEvent != null) {
        VTransferable t=new VTransferable();
        t.setDragSource(ConnectorMap.get(client).getConnector(VTree.this));
        t.setData("itemId",key);
        VDragEvent drag=VDragAndDropManager.get().startDrag(t,mouseDownEvent,true);
        drag.createDragImage(nodeCaptionDiv,true);
        event.stopPropagation();
        mouseDownEvent=null;
      }
    }
 else     if (type == Event.ONMOUSEUP) {
      mouseDownEvent=null;
    }
    if (type == Event.ONMOUSEOVER) {
      mouseDownEvent=null;
      currentMouseOverKey=key;
      event.stopPropagation();
    }
  }
 else   if (type == Event.ONMOUSEDOWN && event.getButton() == NativeEvent.BUTTON_LEFT) {
    event.preventDefault();
  }
}
