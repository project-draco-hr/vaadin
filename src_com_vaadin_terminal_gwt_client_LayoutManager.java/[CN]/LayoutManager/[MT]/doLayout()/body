{
  if (layoutRunning) {
    throw new IllegalStateException("Can't start a new layout phase before the previous layout phase ends.");
  }
  VConsole.log("Starting layout phase");
  layoutRunning=true;
  ConnectorMap paintableMap=connection.getConnectorMap();
  ComponentConnector[] paintableWidgets=paintableMap.getRegisteredComponentConnectors();
  int passes=0;
  Duration totalDuration=new Duration();
  while (true) {
    Duration passDuration=new Duration();
    passes++;
    measureElements(paintableWidgets);
    FastStringSet needsHeightUpdate=FastStringSet.create();
    FastStringSet needsWidthUpdate=FastStringSet.create();
    for (    ComponentConnector paintable : paintableWidgets) {
      MeasuredSize measuredSize=getMeasuredSize(paintable);
      boolean managed=isManagedLayout(paintable);
      ComponentContainerConnector parent=paintable.getParent();
      boolean managedParent=parent != null && isManagedLayout(parent);
      if (measuredSize.isHeightNeedsUpdate()) {
        if (managed) {
          needsHeightUpdate.add(paintable.getConnectorId());
        }
        if (!paintable.isRelativeHeight() && managedParent) {
          needsHeightUpdate.add(parent.getConnectorId());
        }
      }
      if (measuredSize.isWidthNeedsUpdate()) {
        if (managed) {
          needsWidthUpdate.add(paintable.getConnectorId());
        }
        if (!paintable.isRelativeWidth() && managedParent) {
          needsWidthUpdate.add(parent.getConnectorId());
        }
      }
      measuredSize.clearDirtyState();
    }
    int measureTime=passDuration.elapsedMillis();
    VConsole.log("Measure in " + measureTime + " ms");
    FastStringSet updatedSet=FastStringSet.create();
    JsArrayString needsWidthUpdateArray=needsWidthUpdate.dump();
    for (int i=0; i < needsWidthUpdateArray.length(); i++) {
      String pid=needsWidthUpdateArray.get(i);
      ServerConnector paintable=paintableMap.getConnector(pid);
      if (paintable instanceof DirectionalManagedLayout) {
        DirectionalManagedLayout cl=(DirectionalManagedLayout)paintable;
        cl.layoutHorizontally();
      }
 else       if (paintable instanceof SimpleManagedLayout) {
        SimpleManagedLayout rr=(SimpleManagedLayout)paintable;
        rr.layout();
        needsHeightUpdate.remove(pid);
      }
      updatedSet.add(pid);
    }
    JsArrayString needsHeightUpdateArray=needsHeightUpdate.dump();
    for (int i=0; i < needsHeightUpdateArray.length(); i++) {
      String pid=needsHeightUpdateArray.get(i);
      ComponentConnector paintable=(ComponentConnector)paintableMap.getConnector(pid);
      if (paintable instanceof DirectionalManagedLayout) {
        DirectionalManagedLayout cl=(DirectionalManagedLayout)paintable;
        cl.layoutVertically();
      }
 else       if (paintable instanceof SimpleManagedLayout) {
        SimpleManagedLayout rr=(SimpleManagedLayout)paintable;
        rr.layout();
      }
      updatedSet.add(pid);
    }
    JsArrayString changed=updatedSet.dump();
    VConsole.log(changed.length() + " requestLayout invocations in " + (passDuration.elapsedMillis() - measureTime)+ "ms");
    StringBuilder b=new StringBuilder();
    b.append(changed.length());
    b.append(" changed widgets in pass ");
    b.append(passes);
    b.append(" in ");
    b.append(passDuration.elapsedMillis());
    b.append(" ms: ");
    if (changed.length() < 10) {
      for (int i=0; i < changed.length(); i++) {
        if (i != 0) {
          b.append(", ");
        }
        b.append(changed.get(i));
      }
    }
    VConsole.log(b.toString());
    if (changed.length() == 0) {
      VConsole.log("No more changes in pass " + passes);
      break;
    }
    if (passes > 100) {
      VConsole.log("Aborting layout");
      break;
    }
  }
  VConsole.log("Layout phase done");
  VConsole.log("Calling post layout listeners");
  for (  ComponentConnector vPaintableWidget : paintableWidgets) {
    if (vPaintableWidget instanceof PostLayoutListener) {
      ((PostLayoutListener)vPaintableWidget).postLayout();
    }
  }
  layoutRunning=false;
  VConsole.log("Total layout phase time: " + totalDuration.elapsedMillis() + "ms");
}
