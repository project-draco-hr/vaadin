{
  if (layoutRunning) {
    throw new IllegalStateException("Can't start a new layout phase before the previous layout phase ends.");
  }
  VConsole.log("Starting layout phase");
  layoutRunning=true;
  ConnectorMap paintableMap=connection.getConnectorMap();
  ComponentConnector[] paintableWidgets=paintableMap.getComponentConnectors();
  int passes=0;
  Duration totalDuration=new Duration();
  LayoutDependencyTree layoutDependencyTree=new LayoutDependencyTree();
  for (  ComponentConnector componentConnector : paintableWidgets) {
    layoutDependencyTree.setNeedsMeasure(componentConnector,true);
    if (needsHorizontalLayout.contains(componentConnector)) {
      layoutDependencyTree.setNeedsHorizontalLayout(componentConnector,true);
    }
    if (needsVerticalLayout.contains(componentConnector)) {
      layoutDependencyTree.setNeedsVerticalLayout(componentConnector,true);
    }
  }
  needsHorizontalLayout.clear();
  needsVerticalLayout.clear();
  measureNonPaintables(layoutDependencyTree);
  VConsole.log("Layout init in " + totalDuration.elapsedMillis() + " ms");
  while (true) {
    Duration passDuration=new Duration();
    passes++;
    int measuredConnectorCount=measureConnectors(layoutDependencyTree,passes == 1);
    int measureTime=passDuration.elapsedMillis();
    VConsole.log("Measured " + measuredConnectorCount + " elements in "+ measureTime+ " ms");
    FastStringSet updatedSet=FastStringSet.create();
    for (    ComponentConnector connector : layoutDependencyTree.getHorizontalLayoutTargets()) {
      if (connector instanceof DirectionalManagedLayout) {
        DirectionalManagedLayout cl=(DirectionalManagedLayout)connector;
        cl.layoutHorizontally();
        layoutDependencyTree.markAsHorizontallyLayouted(connector);
      }
 else       if (connector instanceof SimpleManagedLayout) {
        SimpleManagedLayout rr=(SimpleManagedLayout)connector;
        rr.layout();
        layoutDependencyTree.markAsHorizontallyLayouted(connector);
        layoutDependencyTree.markAsVerticallyLayouted(connector);
      }
 else {
        layoutDependencyTree.markAsHorizontallyLayouted(connector);
        layoutDependencyTree.markAsVerticallyLayouted(connector);
      }
      updatedSet.add(connector.getConnectorId());
    }
    for (    ComponentConnector connector : layoutDependencyTree.getVerticalLayoutTargets()) {
      if (connector instanceof DirectionalManagedLayout) {
        DirectionalManagedLayout cl=(DirectionalManagedLayout)connector;
        cl.layoutVertically();
        layoutDependencyTree.markAsVerticallyLayouted(connector);
      }
 else       if (connector instanceof SimpleManagedLayout) {
        SimpleManagedLayout rr=(SimpleManagedLayout)connector;
        rr.layout();
        layoutDependencyTree.markAsHorizontallyLayouted(connector);
        layoutDependencyTree.markAsVerticallyLayouted(connector);
      }
 else {
        layoutDependencyTree.markAsHorizontallyLayouted(connector);
        layoutDependencyTree.markAsVerticallyLayouted(connector);
      }
      updatedSet.add(connector.getConnectorId());
    }
    JsArrayString changed=updatedSet.dump();
    VConsole.log(changed.length() + " requestLayout invocations in " + (passDuration.elapsedMillis() - measureTime)+ "ms");
    StringBuilder b=new StringBuilder();
    b.append(changed.length());
    b.append(" changed widgets in pass ");
    b.append(passes);
    b.append(" in ");
    b.append(passDuration.elapsedMillis());
    b.append(" ms: ");
    if (changed.length() < 10) {
      for (int i=0; i < changed.length(); i++) {
        if (i != 0) {
          b.append(", ");
        }
        b.append(changed.get(i));
      }
    }
    VConsole.log(b.toString());
    if (changed.length() == 0) {
      VConsole.log("No more changes in pass " + passes);
      break;
    }
    if (passes > 100) {
      VConsole.log(LOOP_ABORT_MESSAGE);
      VNotification.createNotification(VNotification.DELAY_FOREVER).show(LOOP_ABORT_MESSAGE,VNotification.CENTERED,"error");
      break;
    }
  }
  VConsole.log("Layout phase done");
  VConsole.log("Calling post layout listeners");
  for (  ComponentConnector vPaintableWidget : paintableWidgets) {
    if (vPaintableWidget instanceof PostLayoutListener) {
      ((PostLayoutListener)vPaintableWidget).postLayout();
    }
  }
  layoutRunning=false;
  VConsole.log("Total layout phase time: " + totalDuration.elapsedMillis() + "ms");
}
