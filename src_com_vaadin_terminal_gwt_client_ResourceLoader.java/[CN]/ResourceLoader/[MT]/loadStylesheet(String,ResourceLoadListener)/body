{
  final String url=getAbsoluteUrl(stylesheetUrl);
  final ResourceLoadEvent event=new ResourceLoadEvent(this,url,false);
  if (loadedResources.contains(url)) {
    if (resourceLoadListener != null) {
      resourceLoadListener.onLoad(event);
    }
    return;
  }
  if (preloadListeners.containsKey(url)) {
    preloadResource(url,new ResourceLoadListener(){
      @Override public void onLoad(      ResourceLoadEvent event){
        loadStylesheet(url,resourceLoadListener);
      }
      @Override public void onError(      ResourceLoadEvent event){
        if (resourceLoadListener != null) {
          resourceLoadListener.onError(event);
        }
      }
    }
);
    return;
  }
  if (addListener(url,resourceLoadListener,loadListeners)) {
    LinkElement linkElement=Document.get().createLinkElement();
    linkElement.setRel("stylesheet");
    linkElement.setType("text/css");
    linkElement.setHref(url);
    if (BrowserInfo.get().isSafari()) {
      Scheduler.get().scheduleFixedPeriod(new RepeatingCommand(){
        private final Duration duration=new Duration();
        @Override public boolean execute(){
          int styleSheetLength=getStyleSheetLength(url);
          if (getStyleSheetLength(url) > 0) {
            fireLoad(event);
            return false;
          }
 else           if (styleSheetLength == 0) {
            fireError(event);
            return true;
          }
 else           if (duration.elapsedMillis() > 60 * 1000) {
            fireError(event);
            return false;
          }
 else {
            return true;
          }
        }
      }
,10);
    }
 else {
      addOnloadHandler(linkElement,new ResourceLoadListener(){
        @Override public void onLoad(        ResourceLoadEvent event){
          if (BrowserInfo.get().isChrome() || BrowserInfo.get().isIE()) {
            int styleSheetLength=getStyleSheetLength(url);
            if (styleSheetLength == 0) {
              fireError(event);
              return;
            }
          }
          fireLoad(event);
        }
        @Override public void onError(        ResourceLoadEvent event){
          fireError(event);
        }
      }
,event);
      if (BrowserInfo.get().isOpera()) {
        new Timer(){
          @Override public void run(){
            if (!loadedResources.contains(url)) {
              fireError(event);
            }
          }
        }
.schedule(5 * 1000);
      }
    }
    head.appendChild(linkElement);
  }
}
