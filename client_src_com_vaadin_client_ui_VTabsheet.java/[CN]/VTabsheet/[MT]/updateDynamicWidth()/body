{
  TableCellElement spacerCell=((TableElement)tb.getElement().cast()).getRows().getItem(0).getCells().getItem(tb.getTabCount());
  int spacerWidth=spacerCell.getOffsetWidth();
  DivElement div=(DivElement)spacerCell.getFirstChildElement();
  int spacerMinWidth=spacerCell.getOffsetWidth() - div.getOffsetWidth();
  int tabsWidth=tb.getOffsetWidth() - spacerWidth + spacerMinWidth;
  Style style=tabPanel.getElement().getStyle();
  String overflow=style.getProperty("overflow");
  style.setProperty("overflow","hidden");
  style.setPropertyPx("width",tabsWidth);
  boolean hasTabs=tabPanel.getWidgetCount() > 0;
  Style wrapperstyle=null;
  if (hasTabs) {
    wrapperstyle=getCurrentlyDisplayedWidget().getElement().getParentElement().getStyle();
    wrapperstyle.setPropertyPx("width",tabsWidth);
  }
  int contentWidth=0;
  if (hasTabs) {
    contentWidth=getCurrentlyDisplayedWidget().getOffsetWidth();
  }
  style.setProperty("overflow",overflow);
  if (tabsWidth < contentWidth) {
    tabsWidth=contentWidth;
  }
  int outerWidth=tabsWidth + getContentAreaBorderWidth();
  tabs.getStyle().setPropertyPx("width",outerWidth);
  style.setPropertyPx("width",tabsWidth);
  if (hasTabs) {
    wrapperstyle.setPropertyPx("width",tabsWidth);
  }
  contentNode.getStyle().setPropertyPx("width",tabsWidth);
  super.setWidth(outerWidth + "px");
  updateOpenTabSize();
}
