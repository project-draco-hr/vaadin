{
  VTransferable transferable=new VTransferable();
  transferable.setDragSource(VScrollTable.this);
  transferable.setData("itemId","" + rowKey);
  NodeList<TableCellElement> cells=rowElement.getCells();
  for (int i=0; i < cells.getLength(); i++) {
    if (cells.getItem(i).isOrHasChild(targetTdOrTr)) {
      HeaderCell headerCell=tHead.getHeaderCell(i);
      transferable.setData("propertyId",headerCell.cid);
      break;
    }
  }
  VDragEvent ev=VDragAndDropManager.get().startDrag(transferable,event,true);
  if (dragmode == DRAGMODE_MULTIROW && isMultiSelectModeAny() && selectedRowKeys.contains("" + rowKey)) {
    ev.createDragImage((Element)scrollBody.tBodyElement.cast(),true);
    Element dragImage=ev.getDragImage();
    int i=0;
    for (Iterator<Widget> iterator=scrollBody.iterator(); iterator.hasNext(); ) {
      VScrollTableRow next=(VScrollTableRow)iterator.next();
      Element child=(Element)dragImage.getChild(i++);
      if (!selectedRowKeys.contains("" + next.rowKey)) {
        child.getStyle().setVisibility(Visibility.HIDDEN);
      }
    }
  }
 else {
    ev.createDragImage(getElement(),true);
  }
  if (type == Event.ONMOUSEDOWN) {
    event.preventDefault();
  }
  event.stopPropagation();
}
