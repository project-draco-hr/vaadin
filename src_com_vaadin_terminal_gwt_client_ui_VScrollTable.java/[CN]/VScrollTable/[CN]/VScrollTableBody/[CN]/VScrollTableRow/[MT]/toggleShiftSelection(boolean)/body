{
  if (selectMode == SELECT_MODE_SINGLE) {
    deselectAll();
    toggleSelection(true);
    return;
  }
  int startKey;
  if (selectionRangeStart != null) {
    startKey=Integer.valueOf(selectionRangeStart.getKey());
  }
 else {
    startKey=Integer.valueOf(focusedRow.getKey());
  }
  int endKey=rowKey;
  if (endKey < startKey) {
    startKey^=endKey;
    endKey^=startKey;
    startKey^=endKey;
  }
  if (deselectPrevious) {
    deselectAll();
  }
  VScrollTableRow startRow=getRenderedRowByKey(String.valueOf(startKey));
  VScrollTableRow endRow=getRenderedRowByKey(String.valueOf(endKey));
  if (startRow == null) {
    startRow=(VScrollTableRow)scrollBody.iterator().next();
    setRowFocus(endRow);
  }
  if (endRow == null) {
    setRowFocus(startRow);
  }
  Iterator<Widget> rows=scrollBody.iterator();
  boolean startSelection=false;
  while (rows.hasNext()) {
    VScrollTableRow row=(VScrollTableRow)rows.next();
    if (row == startRow || startSelection) {
      startSelection=true;
      if (!row.isSelected()) {
        row.toggleSelection(false);
      }
      selectedRowKeys.add(row.getKey());
    }
    if (row == endRow && row != null) {
      startSelection=false;
    }
  }
  if (startRow != endRow) {
    selectedRowRanges.add(new SelectionRange(startKey,endKey));
  }
}
