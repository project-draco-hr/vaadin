{
  if (enabled) {
    Element targetTdOrTr=getEventTargetTdOrTr(event);
    if (targetTdOrTr != null) {
switch (DOM.eventGetType(event)) {
case Event.ONDBLCLICK:
        handleClickEvent(event,targetTdOrTr);
      break;
case Event.ONMOUSEUP:
    mDown=false;
  handleClickEvent(event,targetTdOrTr);
if (event.getButton() == Event.BUTTON_LEFT && selectMode > Table.SELECT_MODE_NONE) {
  toggleSelection();
  client.updateVariable(paintableId,"selected",selectedRowKeys.toArray(new String[selectedRowKeys.size()]),immediate);
}
break;
case Event.ONCONTEXTMENU:
showContextMenu(event);
break;
case Event.ONMOUSEDOWN:
if (dragmode != 0 && event.getButton() == NativeEvent.BUTTON_LEFT) {
mDown=true;
VTransferable transferable=new VTransferable();
transferable.setDragSource(VScrollTable.this);
transferable.setData("itemId","" + rowKey);
NodeList<TableCellElement> cells=rowElement.getCells();
for (int i=0; i < cells.getLength(); i++) {
if (cells.getItem(i).isOrHasChild(targetTdOrTr)) {
HeaderCell headerCell=tHead.getHeaderCell(i);
transferable.setData("propertyId",headerCell.cid);
break;
}
}
VDragEvent ev=VDragAndDropManager.get().startDrag(transferable,event,true);
if (selectMode == SELECT_MODE_MULTI && selectedRowKeys.contains("" + rowKey)) {
ev.createDragImage((Element)scrollBody.tBodyElement.cast(),true);
Element dragImage=ev.getDragImage();
int i=0;
for (Iterator<Widget> iterator=scrollBody.iterator(); iterator.hasNext(); ) {
VScrollTableRow next=(VScrollTableRow)iterator.next();
Element child=(Element)dragImage.getChild(i++);
if (!selectedRowKeys.contains("" + next.rowKey)) {
child.getStyle().setVisibility(Visibility.HIDDEN);
}
}
}
 else {
ev.createDragImage(getElement(),true);
}
event.preventDefault();
event.stopPropagation();
}
break;
case Event.ONMOUSEOUT:
mDown=false;
break;
default :
break;
}
}
}
super.onBrowserEvent(event);
}
