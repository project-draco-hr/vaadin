{
  rendering=true;
  if (uidl.hasAttribute("colfooters")) {
    showColFooters=uidl.getBooleanAttribute("colfooters");
  }
  tFoot.setVisible(showColFooters);
  if (client.updateComponent(this,uidl,true)) {
    rendering=false;
    return;
  }
  rowRequestHandler.cancel();
  enabled=!uidl.hasAttribute("disabled");
  this.client=client;
  paintableId=uidl.getStringAttribute("id");
  immediate=uidl.getBooleanAttribute("immediate");
  updateTotalRows(uidl);
  updateDragMode(uidl);
  updateSelectionProperties(uidl);
  if (uidl.hasAttribute("alb")) {
    bodyActionKeys=uidl.getStringArrayAttribute("alb");
  }
 else {
    bodyActionKeys=null;
  }
  setCacheRateFromUIDL(uidl);
  recalcWidths=uidl.hasAttribute("recalcWidths");
  if (recalcWidths) {
    tHead.clear();
    tFoot.clear();
  }
  updatePageLength(uidl);
  updateFirstVisibleAndScrollIfNeeded(uidl);
  showRowHeaders=uidl.getBooleanAttribute("rowheaders");
  showColHeaders=uidl.getBooleanAttribute("colheaders");
  updateSortingProperties(uidl);
  boolean keyboardSelectionOverRowFetchInProgress=selectSelectedRows(uidl);
  updateColumnProperties(uidl);
  UIDL ac=uidl.getChildByTagName("-ac");
  if (ac == null) {
    if (dropHandler != null) {
      dropHandler=null;
    }
  }
 else {
    if (dropHandler == null) {
      dropHandler=new VScrollTableDropHandler();
    }
    dropHandler.updateAcceptRules(ac);
  }
  UIDL partialRowAdditions=uidl.getChildByTagName("prows");
  UIDL partialRowUpdates=uidl.getChildByTagName("urows");
  if (partialRowUpdates != null || partialRowAdditions != null) {
    updateRowsInBody(partialRowUpdates);
    addRowsToBody(partialRowAdditions);
  }
 else {
    UIDL rowData=uidl.getChildByTagName("rows");
    if (!recalcWidths && initializedAndAttached) {
      updateBody(rowData,uidl.getIntAttribute("firstrow"),uidl.getIntAttribute("rows"));
      if (headerChangedDuringUpdate) {
        lazyAdjustColumnWidths.schedule(1);
      }
 else {
        Scheduler.get().scheduleDeferred(new Command(){
          public void execute(){
            Util.runWebkitOverflowAutoFix(scrollBodyPanel.getElement());
          }
        }
);
      }
    }
 else {
      initializeRows(uidl,rowData);
    }
  }
  if (selectMode == Table.SELECT_MODE_NONE) {
    scrollBody.addStyleName(CLASSNAME + "-body-noselection");
  }
 else {
    scrollBody.removeStyleName(CLASSNAME + "-body-noselection");
  }
  hideScrollPositionAnnotation();
  purgeUnregistryBag();
  if (!keyboardSelectionOverRowFetchInProgress) {
    selectionChanged=false;
  }
  if (selectFirstItemInNextRender || focusFirstItemInNextRender) {
    selectFirstRenderedRowInViewPort(focusFirstItemInNextRender);
    selectFirstItemInNextRender=focusFirstItemInNextRender=false;
  }
  if (selectLastItemInNextRender || focusLastItemInNextRender) {
    selectLastRenderedRowInViewPort(focusLastItemInNextRender);
    selectLastItemInNextRender=focusLastItemInNextRender=false;
  }
  multiselectPending=false;
  if (focusedRow != null) {
    if (!focusedRow.isAttached()) {
      focusRowFromBody();
    }
  }
  tabIndex=uidl.hasAttribute("tabindex") ? uidl.getIntAttribute("tabindex") : 0;
  setProperTabIndex();
  rendering=false;
  headerChangedDuringUpdate=false;
}
