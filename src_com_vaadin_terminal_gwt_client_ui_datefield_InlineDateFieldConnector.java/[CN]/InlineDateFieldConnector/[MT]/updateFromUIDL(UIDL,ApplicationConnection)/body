{
  super.updateFromUIDL(uidl,client);
  if (!isRealUpdate(uidl)) {
    return;
  }
  getWidget().calendarPanel.setShowISOWeekNumbers(getWidget().isShowISOWeekNumbers());
  getWidget().calendarPanel.setDateTimeService(getWidget().getDateTimeService());
  getWidget().calendarPanel.setResolution(getWidget().getCurrentResolution());
  Date currentDate=getWidget().getCurrentDate();
  if (currentDate != null) {
    getWidget().calendarPanel.setDate(new Date(currentDate.getTime()));
  }
 else {
    getWidget().calendarPanel.setDate(null);
  }
  if (getWidget().currentResolution > VDateField.RESOLUTION_DAY) {
    getWidget().calendarPanel.setTimeChangeListener(new TimeChangeListener(){
      @Override public void changed(      int hour,      int min,      int sec,      int msec){
        Date d=getWidget().getDate();
        if (d == null) {
          d=(Date)getWidget().calendarPanel.getDate().clone();
        }
        d.setHours(hour);
        d.setMinutes(min);
        d.setSeconds(sec);
        DateTimeService.setMilliseconds(d,msec);
        getWidget().calendarPanel.setDate(d);
        getWidget().updateValueFromPanel();
      }
    }
);
  }
  if (getWidget().currentResolution <= VDateField.RESOLUTION_MONTH) {
    getWidget().calendarPanel.setFocusChangeListener(new FocusChangeListener(){
      @Override public void focusChanged(      Date date){
        Date date2=new Date();
        if (getWidget().calendarPanel.getDate() != null) {
          date2.setTime(getWidget().calendarPanel.getDate().getTime());
        }
        date2.setYear(date.getYear());
        date2.setMonth(date.getMonth());
        getWidget().calendarPanel.setDate(date2);
        getWidget().updateValueFromPanel();
      }
    }
);
  }
 else {
    getWidget().calendarPanel.setFocusChangeListener(null);
  }
  getWidget().calendarPanel.renderCalendar();
}
