{
  super.init();
  registerRpc(TestGridClientRpc.class,new TestGridClientRpc(){
    @Override public void insertRows(    int offset,    int amount){
      getWidget().insertRows(offset,amount);
    }
    @Override public void removeRows(    int offset,    int amount){
      getWidget().removeRows(offset,amount);
    }
    @Override public void removeColumns(    int offset,    int amount){
      getWidget().removeColumns(offset,amount);
    }
    @Override public void insertColumns(    int offset,    int amount){
      getWidget().insertColumns(offset,amount);
    }
    @Override public void scrollToRow(    int index,    String destination,    int padding){
      getWidget().scrollToRow(index,getDestination(destination),padding);
    }
    @Override public void scrollToColumn(    int index,    String destination,    int padding){
      getWidget().scrollToColumn(index,getDestination(destination),padding);
    }
    private ScrollDestination getDestination(    String destination){
      final ScrollDestination d;
      if (destination.equals("start")) {
        d=ScrollDestination.START;
      }
 else       if (destination.equals("middle")) {
        d=ScrollDestination.MIDDLE;
      }
 else       if (destination.equals("end")) {
        d=ScrollDestination.END;
      }
 else {
        d=ScrollDestination.ANY;
      }
      return d;
    }
    @Override public void setFrozenColumns(    int frozenColumns){
      getWidget().getColumnConfiguration().setFrozenColumnCount(frozenColumns);
    }
    @Override public void insertHeaders(    int index,    int amount){
      getWidget().getHeader().insertRows(index,amount);
    }
    @Override public void removeHeaders(    int index,    int amount){
      getWidget().getHeader().removeRows(index,amount);
    }
    @Override public void insertFooters(    int index,    int amount){
      getWidget().getFooter().insertRows(index,amount);
    }
    @Override public void removeFooters(    int index,    int amount){
      getWidget().getFooter().removeRows(index,amount);
    }
  }
);
}
