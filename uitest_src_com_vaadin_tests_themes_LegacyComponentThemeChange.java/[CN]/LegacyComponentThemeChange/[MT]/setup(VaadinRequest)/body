{
  VerticalLayout vl=new VerticalLayout();
  vl.setCaption("Change theme by clicking a button");
  HorizontalLayout hl=new HorizontalLayout();
  for (  final String theme : new String[]{"reindeer","runo"}) {
    Button b=new Button(theme);
    b.setId(theme + "");
    b.addClickListener(new ClickListener(){
      @Override public void buttonClick(      ClickEvent event){
        getUI().setTheme(theme);
      }
    }
);
    hl.addComponent(b);
  }
  vl.addComponent(hl);
  ThemeResource alwaysTheSameIconImage=new ThemeResource("../runo/icons/16/ok.png");
  ThemeResource varyingIcon=new ThemeResource("menubar-theme-icon.png");
  MenuBar bar=new MenuBar();
  bar.addItem("runo",alwaysTheSameIconImage,null);
  bar.addItem("seletedtheme",varyingIcon,null);
  vl.addComponent(bar);
  ComboBox cb=new ComboBox("ComboBox");
  cb.addItem("No icon");
  cb.addItem("Icon");
  cb.setItemIcon("Icon",new ThemeResource("comboboxicon.png"));
  cb.setValue("Icon");
  vl.addComponent(cb);
  Embedded e=new Embedded("embedded");
  e.setMimeType("application/x-shockwave-flash");
  e.setType(Embedded.TYPE_OBJECT);
  e.setSource(new ThemeResource("embedded.src"));
  vl.addComponent(e);
  Table t=new Table();
  t.addActionHandler(new Handler(){
    @Override public void handleAction(    Action action,    Object sender,    Object target){
    }
    @Override public Action[] getActions(    Object target,    Object sender){
      return new Action[]{new Action("Theme icon",new ThemeResource("action-icon.png"))};
    }
  }
);
  PersonContainer pc=PersonContainer.createWithTestData();
  pc.addNestedContainerBean("address");
  t.setContainerDataSource(pc);
  vl.addComponent(t);
  addComponent(vl);
}
