{
  Style style=wrapper.getStyle();
  double contentHeight=allocatedSpace;
  int captionHeight;
  VCaption caption=getCaption();
  if (caption == null || caption.shouldBePlacedAfterComponent()) {
    style.clearPaddingTop();
    captionHeight=0;
  }
 else {
    captionHeight=getCaptionHeight();
    contentHeight-=captionHeight;
    if (contentHeight < 0) {
      contentHeight=0;
    }
    style.setPaddingTop(captionHeight,Unit.PX);
  }
  if (marginBottom > 0) {
    style.setMarginBottom(marginBottom,Unit.PX);
  }
 else {
    style.clearMarginBottom();
  }
  style.setHeight(contentHeight,Unit.PX);
  double allocatedContentHeight=0;
  if (isRelativeHeight()) {
    String height=getWidget().getElement().getStyle().getHeight();
    double percentage=parsePercent(height);
    allocatedContentHeight=contentHeight * (percentage / 100);
    reportActualRelativeHeight(Math.round((float)allocatedContentHeight));
  }
  style.setTop(currentLocation,Unit.PX);
  double padding=0;
  AlignmentInfo alignment=getAlignment();
  if (!alignment.isTop()) {
    double usedHeight;
    if (isRelativeHeight()) {
      usedHeight=captionHeight + allocatedContentHeight;
    }
 else {
      usedHeight=getUsedHeight();
    }
    if (alignment.isVerticalCenter()) {
      padding=(allocatedSpace - usedHeight) / 2d;
    }
 else {
      padding=(allocatedSpace - usedHeight);
    }
    padding+=captionHeight;
    widget.getElement().getStyle().setTop(padding,Unit.PX);
  }
}
