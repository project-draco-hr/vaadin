{
  setVisible(!uidl.getBooleanAttribute("invisible"));
  boolean wasPlacedAfterComponent=placedAfterComponent;
  placedAfterComponent=true;
  if (null != owner) {
    String style=CLASSNAME;
    if (owner.getState().hasStyles()) {
      final String[] styles=owner.getState().getStyle().split(" ");
      for (int i=0; i < styles.length; i++) {
        style+=" " + CLASSNAME + "-"+ styles[i];
      }
    }
    if (owner.getState().isDisabled()) {
      style+=" " + ApplicationConnection.DISABLED_CLASSNAME;
    }
    setStyleName(style);
  }
  boolean hasIcon=uidl.hasAttribute(VAbstractPaintableWidget.ATTRIBUTE_ICON);
  boolean hasText=uidl.hasAttribute(VAbstractPaintableWidget.ATTRIBUTE_CAPTION);
  boolean showRequired=uidl.getBooleanAttribute(VAbstractPaintableWidget.ATTRIBUTE_REQUIRED);
  boolean showError=uidl.hasAttribute(VAbstractPaintableWidget.ATTRIBUTE_ERROR) && !uidl.getBooleanAttribute(VAbstractPaintableWidget.ATTRIBUTE_HIDEERRORS);
  if (hasIcon) {
    if (icon == null) {
      icon=new Icon(client);
      icon.setWidth("0");
      icon.setHeight("0");
      DOM.insertChild(getElement(),icon.getElement(),getInsertPosition(VAbstractPaintableWidget.ATTRIBUTE_ICON));
    }
    placedAfterComponent=false;
    icon.setUri(uidl.getStringAttribute(VAbstractPaintableWidget.ATTRIBUTE_ICON));
  }
 else   if (icon != null) {
    DOM.removeChild(getElement(),icon.getElement());
    icon=null;
  }
  if (hasText) {
    if (captionText == null) {
      captionText=DOM.createDiv();
      captionText.setClassName("v-captiontext");
      DOM.insertChild(getElement(),captionText,getInsertPosition(VAbstractPaintableWidget.ATTRIBUTE_CAPTION));
    }
    String c=uidl.getStringAttribute(VAbstractPaintableWidget.ATTRIBUTE_CAPTION);
    placedAfterComponent=false;
    if (c == null || c.trim().equals("")) {
      if (!hasIcon && !showRequired && !showError) {
        captionText.setInnerHTML("&nbsp;");
      }
    }
 else {
      DOM.setInnerText(captionText,c);
    }
  }
 else   if (captionText != null) {
    DOM.removeChild(getElement(),captionText);
    captionText=null;
  }
  if (null != owner) {
    if (owner.getState().hasDescription() && captionText != null) {
      addStyleDependentName("hasdescription");
    }
 else {
      removeStyleDependentName("hasdescription");
    }
  }
  if (showRequired) {
    if (requiredFieldIndicator == null) {
      requiredFieldIndicator=DOM.createDiv();
      requiredFieldIndicator.setClassName("v-required-field-indicator");
      DOM.setInnerText(requiredFieldIndicator,"*");
      DOM.insertChild(getElement(),requiredFieldIndicator,getInsertPosition(VAbstractPaintableWidget.ATTRIBUTE_REQUIRED));
    }
  }
 else   if (requiredFieldIndicator != null) {
    DOM.removeChild(getElement(),requiredFieldIndicator);
    requiredFieldIndicator=null;
  }
  if (showError) {
    if (errorIndicatorElement == null) {
      errorIndicatorElement=DOM.createDiv();
      DOM.setInnerHTML(errorIndicatorElement,"&nbsp;");
      DOM.setElementProperty(errorIndicatorElement,"className","v-errorindicator");
      DOM.insertChild(getElement(),errorIndicatorElement,getInsertPosition(VAbstractPaintableWidget.ATTRIBUTE_ERROR));
    }
  }
 else   if (errorIndicatorElement != null) {
    getElement().removeChild(errorIndicatorElement);
    errorIndicatorElement=null;
  }
  if (clearElement == null) {
    clearElement=DOM.createDiv();
    clearElement.setClassName(CLASSNAME_CLEAR);
    getElement().appendChild(clearElement);
  }
  return (wasPlacedAfterComponent != placedAfterComponent);
}
