{
  if (reservedFrom.after(reservedTo)) {
    final Date tmp=reservedTo;
    reservedTo=reservedFrom;
    reservedFrom=tmp;
  }
  final int resourceId=((Integer)resource.getItemProperty(Resource.PROPERTY_ID_ID).getValue()).intValue();
  final String q="INSERT INTO " + Reservation.TABLE + " ("+ Reservation.PROPERTY_ID_RESOURCE_ID+ ","+ Reservation.PROPERTY_ID_RESERVED_BY+ ","+ Reservation.PROPERTY_ID_RESERVED_FROM+ ","+ Reservation.PROPERTY_ID_RESERVED_TO+ ","+ Reservation.PROPERTY_ID_DESCRIPTION+ ")"+ "VALUES (?,?,?,?,?)";
synchronized (DB_URL) {
    if (!isAvailableResource(resourceId,reservedFrom,reservedTo)) {
      throw new ResourceNotAvailableException("The resource is not available at that time.");
    }
    try {
      PreparedStatement p;
      p=connection.prepareStatement(q);
      p.setInt(1,resourceId);
      p.setString(2,reservedBy);
      p.setTimestamp(3,new java.sql.Timestamp(reservedFrom.getTime()));
      p.setTimestamp(4,new java.sql.Timestamp(reservedTo.getTime()));
      p.setString(5,description);
      p.execute();
    }
 catch (    SQLException e) {
      e.printStackTrace();
    }
  }
}
