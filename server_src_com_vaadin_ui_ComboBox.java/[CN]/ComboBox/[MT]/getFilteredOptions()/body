{
  if (null == filterstring || "".equals(filterstring) || Filtering.FILTERINGMODE_OFF == filteringMode) {
    prevfilterstring=null;
    filteredOptions=new LinkedList<Object>(getItemIds());
    return filteredOptions;
  }
  if (filterstring.equals(prevfilterstring)) {
    return filteredOptions;
  }
  Collection<?> items;
  if (prevfilterstring != null && filterstring.startsWith(prevfilterstring)) {
    items=filteredOptions;
  }
 else {
    items=getItemIds();
  }
  prevfilterstring=filterstring;
  filteredOptions=new LinkedList<Object>();
  for (final Iterator<?> it=items.iterator(); it.hasNext(); ) {
    final Object itemId=it.next();
    String caption=getItemCaption(itemId);
    if (caption == null || caption.equals("")) {
      continue;
    }
 else {
      caption=caption.toLowerCase();
    }
switch (filteringMode) {
case Filtering.FILTERINGMODE_CONTAINS:
      if (caption.indexOf(filterstring) > -1) {
        filteredOptions.add(itemId);
      }
    break;
case Filtering.FILTERINGMODE_STARTSWITH:
default :
  if (caption.startsWith(filterstring)) {
    filteredOptions.add(itemId);
  }
break;
}
}
return filteredOptions;
}
