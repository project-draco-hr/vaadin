{
  response.setHeader("Cache-Control","no-cache");
  response.setHeader("Pragma","no-cache");
  response.setDateHeader("Expires",0);
  Document document=response.getDocument();
  DocumentType doctype=new DocumentType("html","","",document.baseUri());
  document.child(0).before(doctype);
  Element head=document.head();
  head.appendElement("meta").attr("http-equiv","Content-Type").attr("content","text/html; charset=utf-8");
  head.appendElement("meta").attr("http-equiv","X-UA-Compatible").attr("content","IE=11;chrome=1");
  Class<? extends UI> uiClass=context.getUIClass();
  String viewportContent=null;
  Viewport viewportAnnotation=uiClass.getAnnotation(Viewport.class);
  ViewportGeneratorClass viewportGeneratorClassAnnotation=uiClass.getAnnotation(ViewportGeneratorClass.class);
  if (viewportAnnotation != null && viewportGeneratorClassAnnotation != null) {
    throw new IllegalStateException(uiClass.getCanonicalName() + " cannot be annotated with both @" + Viewport.class.getSimpleName()+ " and @"+ ViewportGeneratorClass.class.getSimpleName());
  }
  if (viewportAnnotation != null) {
    viewportContent=viewportAnnotation.value();
  }
 else   if (viewportGeneratorClassAnnotation != null) {
    Class<? extends ViewportGenerator> viewportGeneratorClass=viewportGeneratorClassAnnotation.value();
    try {
      viewportContent=viewportGeneratorClass.newInstance().getViewport(context.getRequest());
    }
 catch (    Exception e) {
      throw new RuntimeException("Error processing viewport generator " + viewportGeneratorClass.getCanonicalName(),e);
    }
  }
  if (viewportContent != null) {
    head.appendElement("meta").attr("name","viewport").attr("content",viewportContent);
  }
  String title=response.getUIProvider().getPageTitle(new UICreateEvent(context.getRequest(),context.getUIClass()));
  if (title != null) {
    head.appendElement("title").appendText(title);
  }
  head.appendElement("style").attr("type","text/css").appendText("html, body {height:100%;margin:0;}");
  String themeName=context.getThemeName();
  if (themeName != null) {
    String themeUri=getThemeUri(context,themeName);
    head.appendElement("link").attr("rel","shortcut icon").attr("type","image/vnd.microsoft.icon").attr("href",themeUri + "/favicon.ico");
    head.appendElement("link").attr("rel","icon").attr("type","image/vnd.microsoft.icon").attr("href",themeUri + "/favicon.ico");
  }
  JavaScript javaScript=uiClass.getAnnotation(JavaScript.class);
  if (javaScript != null) {
    String[] resources=javaScript.value();
    for (    String resource : resources) {
      String url=registerDependency(context,uiClass,resource);
      head.appendElement("script").attr("type","text/javascript").attr("src",url);
    }
  }
  StyleSheet styleSheet=uiClass.getAnnotation(StyleSheet.class);
  if (styleSheet != null) {
    String[] resources=styleSheet.value();
    for (    String resource : resources) {
      String url=registerDependency(context,uiClass,resource);
      head.appendElement("link").attr("rel","stylesheet").attr("type","text/css").attr("href",url);
    }
  }
  Element body=document.body();
  body.attr("scroll","auto");
  body.addClass(ApplicationConstants.GENERATED_BODY_CLASSNAME);
}
