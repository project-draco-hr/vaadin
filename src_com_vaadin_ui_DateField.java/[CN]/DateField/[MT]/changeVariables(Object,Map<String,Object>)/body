{
  super.changeVariables(source,variables);
  if (!isReadOnly() && (variables.containsKey("year") || variables.containsKey("month") || variables.containsKey("day")|| variables.containsKey("hour")|| variables.containsKey("min")|| variables.containsKey("sec")|| variables.containsKey("msec")|| variables.containsKey("dateString"))) {
    final Date oldDate=getValue();
    Date newDate=null;
    final String newDateString=(String)variables.get("dateString");
    dateString=newDateString;
    final Calendar cal=getCalendar();
    boolean hasChanges=false;
    Map<Resolution,Integer> parts=new HashMap<DateField.Resolution,Integer>();
    for (    Resolution r : Resolution.values()) {
      String variableName=variableNameForResolution.get(r);
      Integer value=-1;
      if (variables.containsKey(variableName)) {
        value=(Integer)variables.get(variableName);
        if (value == null) {
          value=-1;
        }
 else         if (r == Resolution.MONTH) {
          value--;
        }
      }
      if (value < 0) {
        int calendarField=calendarFieldForResolution.get(r);
        parts.put(r,cal.get(calendarField));
      }
 else {
        parts.put(r,value);
        hasChanges=true;
      }
    }
    if (!hasChanges) {
      newDate=null;
    }
 else {
      for (int r=Resolution.YEAR.ordinal(); r >= 0; r--) {
        Resolution res=Resolution.values()[r];
        cal.set(calendarFieldForResolution.get(res),parts.get(res));
      }
      newDate=cal.getTime();
    }
    if (newDate == null && dateString != null && !"".equals(dateString)) {
      try {
        Date parsedDate=handleUnparsableDateString(dateString);
        setValue(parsedDate,true);
        requestRepaint();
      }
 catch (      ConversionException e) {
        if (oldDate != null) {
          setValue(null);
          dateString=newDateString;
        }
        currentParseErrorMessage=e.getLocalizedMessage();
        uiHasValidDateString=false;
        notifyFormOfValidityChange();
        requestRepaint();
      }
    }
 else     if (newDate != oldDate && (newDate == null || !newDate.equals(oldDate))) {
      setValue(newDate,true);
    }
 else     if (!uiHasValidDateString) {
      setValue(null);
    }
  }
  if (variables.containsKey(FocusEvent.EVENT_ID)) {
    fireEvent(new FocusEvent(this));
  }
  if (variables.containsKey(BlurEvent.EVENT_ID)) {
    fireEvent(new BlurEvent(this));
  }
}
