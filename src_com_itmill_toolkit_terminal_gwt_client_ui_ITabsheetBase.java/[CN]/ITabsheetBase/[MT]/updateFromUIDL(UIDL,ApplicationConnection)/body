{
  if (client.updateComponent(this,uidl,true)) {
    return;
  }
  this.client=client;
  id=uidl.getId();
  disabled=uidl.hasAttribute("disabled");
  final UIDL tabs=uidl.getChildUIDL(0);
  if (keepCurrentTabs(uidl)) {
    int index=0;
    for (final Iterator it=tabs.getChildIterator(); it.hasNext(); ) {
      final UIDL tab=(UIDL)it.next();
      final boolean selected=tab.getBooleanAttribute("selected");
      if (selected) {
        selectTab(index,tab.getChildUIDL(0));
      }
 else       if (tab.getChildCount() > 0) {
        Paintable paintable=client.getPaintable(tab.getChildUIDL(0));
        paintable.updateFromUIDL(tab.getChildUIDL(0),client);
        ((Widget)paintable).setVisible(false);
      }
      index++;
    }
  }
 else {
    tabKeys.clear();
    captions.clear();
    disabledTabKeys.clear();
    clear();
    int index=0;
    for (final Iterator it=tabs.getChildIterator(); it.hasNext(); ) {
      final UIDL tab=(UIDL)it.next();
      final String key=tab.getStringAttribute("key");
      final boolean selected=tab.getBooleanAttribute("selected");
      String caption=tab.getStringAttribute("caption");
      if (caption == null) {
        caption=" ";
      }
      if (tab.getBooleanAttribute("disabled")) {
        disabledTabKeys.add(key);
      }
      captions.add(caption);
      tabKeys.add(key);
      if (selected) {
        activeTabIndex=index;
      }
      renderTab(tab,index,selected);
      index++;
    }
  }
}
