{
  renderInformation.updateSize(getElement());
  if (BrowserInfo.get().isIE6() && width != null && !width.equals("")) {
    DOM.setStyleAttribute(captionNode,"width","1px");
    int parentPadding=Util.measureHorizontalPadding(getElement(),0);
    int parentWidthExcludingPadding=getElement().getOffsetWidth() - parentPadding;
    int captionMarginLeft=captionNode.getAbsoluteLeft() - getElement().getAbsoluteLeft();
    Util.setWidthExcludingPadding(captionNode,parentWidthExcludingPadding - captionMarginLeft,26);
    int contentMarginLeft=contentNode.getAbsoluteLeft() - getElement().getAbsoluteLeft();
    Util.setWidthExcludingPadding(contentNode,parentWidthExcludingPadding - contentMarginLeft,2);
  }
  if (runGeckoFix && BrowserInfo.get().isGecko()) {
    if (width == null || width.equals("")) {
      if (geckoCaptionMeter == null) {
        geckoCaptionMeter=DOM.createDiv();
        DOM.appendChild(captionNode,geckoCaptionMeter);
      }
      int captionWidth=DOM.getElementPropertyInt(captionText,"offsetWidth");
      int availWidth=DOM.getElementPropertyInt(geckoCaptionMeter,"offsetWidth");
      if (captionWidth == availWidth) {
        setWidth(getOffsetWidth() + "px");
      }
 else {
        DOM.setStyleAttribute(captionNode,"width","");
      }
    }
  }
  client.runDescendentsLayout(this);
  Util.runWebkitOverflowAutoFix(contentNode);
}
