{
  getWidget().client=client;
  if (!isRealUpdate(uidl)) {
    return;
  }
  getWidget().id=uidl.getId();
  getWidget().disabled=!isEnabled();
  final UIDL tabs=uidl.getChildUIDL(0);
  ArrayList<Widget> oldWidgets=new ArrayList<Widget>();
  for (Iterator<Widget> iterator=getWidget().getWidgetIterator(); iterator.hasNext(); ) {
    oldWidgets.add(iterator.next());
  }
  getWidget().tabKeys.clear();
  getWidget().disabledTabKeys.clear();
  int index=0;
  for (final Iterator<Object> it=tabs.getChildIterator(); it.hasNext(); ) {
    final UIDL tab=(UIDL)it.next();
    final String key=tab.getStringAttribute("key");
    final boolean selected=tab.getBooleanAttribute("selected");
    final boolean hidden=tab.getBooleanAttribute("hidden");
    if (tab.getBooleanAttribute(ATTRIBUTE_TAB_DISABLED)) {
      getWidget().disabledTabKeys.add(key);
    }
    getWidget().tabKeys.add(key);
    if (selected) {
      getWidget().activeTabIndex=index;
    }
    getWidget().renderTab(tab,index,selected,hidden);
    index++;
  }
  int tabCount=getWidget().getTabCount();
  while (tabCount-- > index) {
    getWidget().removeTab(index);
  }
  for (int i=0; i < getWidget().getTabCount(); i++) {
    ComponentConnector p=getWidget().getTab(i);
    if (p != null) {
      oldWidgets.remove(p.getWidget());
    }
  }
  for (Iterator<Widget> iterator=oldWidgets.iterator(); iterator.hasNext(); ) {
    Widget oldWidget=iterator.next();
    if (oldWidget.isAttached()) {
      oldWidget.removeFromParent();
    }
  }
}
