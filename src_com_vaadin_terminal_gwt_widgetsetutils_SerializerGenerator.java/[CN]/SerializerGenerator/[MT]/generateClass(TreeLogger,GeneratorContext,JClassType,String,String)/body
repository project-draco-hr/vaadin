{
  PrintWriter printWriter=null;
  printWriter=context.tryCreate(logger,serializerPackageName,serializerClassName);
  if (printWriter == null) {
    return;
  }
  boolean isEnum=(type.isEnum() != null);
  boolean isArray=(type.isArray() != null);
  String qualifiedSourceName=type.getQualifiedSourceName();
  logger.log(Type.DEBUG,"Processing serializable type " + qualifiedSourceName + "...");
  ClassSourceFileComposerFactory composer=null;
  composer=new ClassSourceFileComposerFactory(serializerPackageName,serializerClassName);
  composer.addImport(GWT.class.getName());
  composer.addImport(JSONValue.class.getName());
  composer.addImport(com.vaadin.terminal.gwt.client.communication.Type.class.getName());
  composer.addImport(JsonDecoder.class.getName());
  if (isEnum || isArray) {
    composer.addImplementedInterface(JSONSerializer.class.getName() + "<" + qualifiedSourceName+ ">");
  }
 else {
    composer.addImplementedInterface(DiffJSONSerializer.class.getName() + "<" + qualifiedSourceName+ ">");
  }
  SourceWriter sourceWriter=composer.createSourceWriter(context,printWriter);
  sourceWriter.indent();
  sourceWriter.println("public " + JSONValue.class.getName() + " serialize("+ qualifiedSourceName+ " value, "+ ApplicationConnection.class.getName()+ " connection) {");
  sourceWriter.indent();
  sourceWriter.println(qualifiedSourceName + " castedValue = (" + qualifiedSourceName+ ") value;");
  if (isEnum) {
    writeEnumSerializer(logger,sourceWriter,type);
  }
 else   if (isArray) {
    writeArraySerializer(logger,sourceWriter,type.isArray());
  }
 else {
    writeBeanSerializer(logger,sourceWriter,type);
  }
  sourceWriter.outdent();
  sourceWriter.println("}");
  sourceWriter.println();
  if (!isEnum && !isArray) {
    sourceWriter.println("public void update(" + qualifiedSourceName + " target, Type type, "+ JSONValue.class.getName()+ " jsonValue, "+ ApplicationConnection.class.getName()+ " connection) {");
    sourceWriter.indent();
    writeBeanDeserializer(logger,sourceWriter,type);
    sourceWriter.outdent();
    sourceWriter.println("}");
  }
  sourceWriter.println("public " + qualifiedSourceName + " deserialize(Type type, "+ JSONValue.class.getName()+ " jsonValue, "+ ApplicationConnection.class.getName()+ " connection) {");
  sourceWriter.indent();
  if (isEnum) {
    writeEnumDeserializer(logger,sourceWriter,type.isEnum());
  }
 else   if (isArray) {
    writeArrayDeserializer(logger,sourceWriter,type.isArray());
  }
 else {
    sourceWriter.println(qualifiedSourceName + " target = GWT.create(" + qualifiedSourceName+ ".class);");
    sourceWriter.println("update(target, type, jsonValue, connection);");
    sourceWriter.println("return target;");
  }
  sourceWriter.outdent();
  sourceWriter.println("}");
  sourceWriter.outdent();
  sourceWriter.println("}");
  context.commit(logger,printWriter);
  logger.log(TreeLogger.INFO,"Generated Serializer class " + getFullyQualifiedSerializerClassName(type));
}
