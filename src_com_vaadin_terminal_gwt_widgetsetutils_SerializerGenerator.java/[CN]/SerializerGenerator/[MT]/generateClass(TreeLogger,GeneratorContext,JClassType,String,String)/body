{
  PrintWriter printWriter=null;
  printWriter=context.tryCreate(logger,serializerPackageName,serializerClassName);
  if (printWriter == null) {
    return;
  }
  Date date=new Date();
  TypeOracle typeOracle=context.getTypeOracle();
  String beanQualifiedSourceName=beanType.getQualifiedSourceName();
  logger.log(Type.DEBUG,"Processing serializable type " + beanQualifiedSourceName + "...");
  ClassSourceFileComposerFactory composer=null;
  composer=new ClassSourceFileComposerFactory(serializerPackageName,serializerClassName);
  composer.addImport(GWT.class.getName());
  composer.addImport(JSONArray.class.getName());
  composer.addImport(JsonDecoder.class.getName());
  composer.addImplementedInterface(VaadinSerializer.class.getName());
  SourceWriter sourceWriter=composer.createSourceWriter(context,printWriter);
  sourceWriter.indent();
  sourceWriter.println("public " + JSONValue.class.getName() + " serialize("+ Object.class.getName()+ " value, "+ ConnectorMap.class.getName()+ " idMapper) {");
  sourceWriter.indent();
  sourceWriter.println(beanQualifiedSourceName + " castedValue = (" + beanQualifiedSourceName+ ") value;");
  sourceWriter.println(JSONObject.class.getName() + " json = new " + JSONObject.class.getName()+ "();");
  for (  JMethod setterMethod : getSetters(beanType)) {
    String setterName=setterMethod.getName();
    String capitalizedFieldName=setterName.substring(3);
    String fieldName=decapitalize(capitalizedFieldName);
    String getterName=findGetter(beanType,setterMethod);
    if (getterName == null) {
      logger.log(TreeLogger.WARN,"No getter found for " + fieldName + ". Serialization will likely fail");
    }
    sourceWriter.println("json.put(\"" + fieldName + "\", "+ JsonEncoder.class.getName()+ ".encode(castedValue."+ getterName+ "(), idMapper));");
  }
  sourceWriter.println("return json;");
  sourceWriter.println("}");
  sourceWriter.println("public " + beanQualifiedSourceName + " deserialize("+ JSONObject.class.getName()+ " jsonValue, "+ ConnectorMap.class.getName()+ " idMapper) {");
  sourceWriter.indent();
  sourceWriter.println(beanQualifiedSourceName + " state = GWT.create(" + beanQualifiedSourceName+ ".class);");
  for (  JMethod method : getSetters(beanType)) {
    String setterName=method.getName();
    String capitalizedFieldName=setterName.substring(3);
    String fieldName=decapitalize(capitalizedFieldName);
    JType setterParameterType=method.getParameterTypes()[0];
    logger.log(Type.INFO,"* Processing field " + fieldName + " in "+ beanQualifiedSourceName+ " ("+ beanType.getName()+ ")");
    String jsonFieldName="json" + capitalizedFieldName;
    sourceWriter.println("JSONArray " + jsonFieldName + " = (JSONArray) jsonValue.get(\""+ fieldName+ "\");");
    String fieldType;
    JPrimitiveType primitiveType=setterParameterType.isPrimitive();
    if (primitiveType != null) {
      fieldType=primitiveType.getQualifiedBoxedSourceName();
    }
 else {
      fieldType=setterParameterType.getQualifiedSourceName();
    }
    sourceWriter.println("state." + setterName + "(("+ fieldType+ ") JsonDecoder.convertValue("+ jsonFieldName+ ", idMapper));");
  }
  sourceWriter.println("return state;");
  sourceWriter.println("}");
  sourceWriter.outdent();
  sourceWriter.println("}");
  sourceWriter.outdent();
  context.commit(logger,printWriter);
  logger.log(Type.INFO,"Done. (" + (new Date().getTime() - date.getTime()) / 1000 + "seconds)");
}
