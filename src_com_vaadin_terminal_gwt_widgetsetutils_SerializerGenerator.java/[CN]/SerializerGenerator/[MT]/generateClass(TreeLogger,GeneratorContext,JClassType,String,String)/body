{
  PrintWriter printWriter=null;
  printWriter=context.tryCreate(logger,serializerPackageName,serializerClassName);
  if (printWriter == null) {
    return;
  }
  Date date=new Date();
  TypeOracle typeOracle=context.getTypeOracle();
  String beanQualifiedSourceName=beanType.getQualifiedSourceName();
  logger.log(Type.DEBUG,"Processing serializable type " + beanQualifiedSourceName + "...");
  ClassSourceFileComposerFactory composer=null;
  composer=new ClassSourceFileComposerFactory(serializerPackageName,serializerClassName);
  composer.addImport(GWT.class.getName());
  composer.addImport(JSONArray.class.getName());
  composer.addImport(JsonDecoder.class.getName());
  composer.addImplementedInterface(VaadinSerializer.class.getName());
  SourceWriter sourceWriter=composer.createSourceWriter(context,printWriter);
  sourceWriter.indent();
  sourceWriter.println("public " + beanQualifiedSourceName + " deserialize("+ JSONObject.class.getName()+ " jsonValue, "+ ConnectorMap.class.getName()+ " idMapper) {");
  sourceWriter.indent();
  sourceWriter.println(beanQualifiedSourceName + " state = GWT.create(" + beanQualifiedSourceName+ ".class);");
  JClassType objectType=typeOracle.findType("java.lang.Object");
  while (!objectType.equals(beanType)) {
    for (    JMethod method : getSetters(beanType)) {
      String setterName=method.getName();
      String capitalizedFieldName=setterName.substring(3);
      String fieldName=decapitalize(capitalizedFieldName);
      JType setterParameterType=method.getParameterTypes()[0];
      logger.log(Type.INFO,"* Processing field " + fieldName + " in "+ beanQualifiedSourceName+ " ("+ beanType.getName()+ ")");
      String jsonFieldName="json" + capitalizedFieldName;
      sourceWriter.println("JSONArray " + jsonFieldName + " = (JSONArray) jsonValue.get(\""+ fieldName+ "\");");
      String fieldType;
      JPrimitiveType primitiveType=setterParameterType.isPrimitive();
      if (primitiveType != null) {
        fieldType=primitiveType.getQualifiedBoxedSourceName();
      }
 else {
        fieldType=setterParameterType.getQualifiedSourceName();
      }
      sourceWriter.println("state." + setterName + "(("+ fieldType+ ") JsonDecoder.convertValue("+ jsonFieldName+ ", idMapper));");
    }
    beanType=beanType.getSuperclass();
  }
  sourceWriter.println("return state;");
  sourceWriter.println("}");
  sourceWriter.outdent();
  sourceWriter.println("}");
  sourceWriter.outdent();
  context.commit(logger,printWriter);
  logger.log(Type.INFO,"Done. (" + (new Date().getTime() - date.getTime()) / 1000 + "seconds)");
}
