{
  PrintWriter printWriter=null;
  printWriter=context.tryCreate(logger,serializerPackageName,serializerClassName);
  if (printWriter == null) {
    return;
  }
  boolean isEnum=(beanType.isEnum() != null);
  Date date=new Date();
  TypeOracle typeOracle=context.getTypeOracle();
  String beanQualifiedSourceName=beanType.getQualifiedSourceName();
  logger.log(Type.DEBUG,"Processing serializable type " + beanQualifiedSourceName + "...");
  ClassSourceFileComposerFactory composer=null;
  composer=new ClassSourceFileComposerFactory(serializerPackageName,serializerClassName);
  composer.addImport(GWT.class.getName());
  composer.addImport(JSONArray.class.getName());
  composer.addImport(JsonDecoder.class.getName());
  composer.addImplementedInterface(JSONSerializer.class.getName() + "<" + beanQualifiedSourceName+ ">");
  SourceWriter sourceWriter=composer.createSourceWriter(context,printWriter);
  sourceWriter.indent();
  sourceWriter.println("public " + JSONValue.class.getName() + " serialize("+ beanQualifiedSourceName+ " value, "+ ConnectorMap.class.getName()+ " idMapper, "+ ApplicationConnection.class.getName()+ " connection) {");
  sourceWriter.indent();
  sourceWriter.println(beanQualifiedSourceName + " castedValue = (" + beanQualifiedSourceName+ ") value;");
  if (isEnum) {
    writeEnumSerializer(logger,sourceWriter,beanType);
  }
 else {
    writeBeanSerializer(logger,sourceWriter,beanType);
  }
  sourceWriter.println("}");
  sourceWriter.println("public " + beanQualifiedSourceName + " deserialize("+ JSONValue.class.getName()+ " jsonValue, "+ beanQualifiedSourceName+ " target, "+ ConnectorMap.class.getName()+ " idMapper, "+ ApplicationConnection.class.getName()+ " connection) {");
  sourceWriter.indent();
  if (isEnum) {
    writeEnumDeserializer(logger,sourceWriter,beanType.isEnum());
  }
 else {
    writeBeanDeserializer(logger,sourceWriter,beanType);
  }
  sourceWriter.println("}");
  sourceWriter.outdent();
  sourceWriter.println("}");
  sourceWriter.outdent();
  context.commit(logger,printWriter);
  logger.log(TreeLogger.INFO,"Generated Serializer class " + getFullyQualifiedSerializerClassName(beanType));
}
