{
  this.client=client;
  id=uidl.getId();
  rendering=true;
  immediate=uidl.hasAttribute("immediate");
  if (client.updateComponent(this,uidl,true)) {
    rendering=false;
    return;
  }
  setEnabled(!uidl.getBooleanAttribute("disabled"));
  clickEventHandler.handleEventHandlerRegistration(client);
  if (uidl.hasAttribute("style")) {
    componentStyleNames=uidl.getStringAttribute("style").split(" ");
  }
 else {
    componentStyleNames=new String[0];
  }
  setLocked(uidl.getBooleanAttribute("locked"));
  setPositionReversed(uidl.getBooleanAttribute("reversed"));
  setStylenames();
  position=uidl.getStringAttribute("position");
  setSplitPosition(position);
  final VPaintableWidget newFirstChildPaintable=client.getPaintable(uidl.getChildUIDL(0));
  final VPaintableWidget newSecondChildPaintable=client.getPaintable(uidl.getChildUIDL(1));
  Widget newFirstChild=newFirstChildPaintable.getWidgetForPaintable();
  Widget newSecondChild=newSecondChildPaintable.getWidgetForPaintable();
  if (firstChild != newFirstChild) {
    if (firstChild != null) {
      client.unregisterPaintable(VPaintableMap.get(client).getPaintable(firstChild));
    }
    setFirstWidget(newFirstChild);
  }
  if (secondChild != newSecondChild) {
    if (secondChild != null) {
      client.unregisterPaintable(VPaintableMap.get(client).getPaintable(secondChild));
    }
    setSecondWidget(newSecondChild);
  }
  newFirstChildPaintable.updateFromUIDL(uidl.getChildUIDL(0),client);
  newSecondChildPaintable.updateFromUIDL(uidl.getChildUIDL(1),client);
  renderInformation.updateSize(getElement());
  client.runDescendentsLayout(this);
  rendering=false;
}
