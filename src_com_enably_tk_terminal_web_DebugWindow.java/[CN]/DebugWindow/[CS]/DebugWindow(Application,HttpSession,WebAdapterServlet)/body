{
  super("Debug window");
  setName(WINDOW_NAME);
  setServlet(servlet);
  setSession(session);
  setBorder(Window.BORDER_NONE);
  OrderedLayout controls=new OrderedLayout(OrderedLayout.ORIENTATION_HORIZONTAL);
  controls.addComponent(new Button("Restart Application",this,"restartApplication"));
  controls.addComponent(new Button("Clear Session",this,"clearSession"));
  Collection themes=servlet.getThemeSource().getThemes();
  Collection names=new LinkedList();
  for (Iterator i=themes.iterator(); i.hasNext(); ) {
    names.add(((Theme)i.next()).getName());
  }
  themeSelector=new Select("Application Theme",names);
  themeSelector.setWriteThrough(false);
  Label terminal=new Label("<h2>Terminal Information</h2> ",Label.CONTENT_XHTML);
  Form browser=new Form();
  browser.setItemDataSource(new BeanItem(WebBrowserProbe.getTerminalType(session)));
  browser.removeItemProperty("class");
  browser.replaceWithSelect("javaScriptVersion",WebBrowser.JAVASCRIPT_VERSIONS,WebBrowser.JAVASCRIPT_VERSIONS);
  browser.replaceWithSelect("markupVersion",WebBrowser.MARKUP_VERSIONS,WebBrowser.MARKUP_VERSIONS);
  browser.setWriteThrough(false);
  Button setbrowser=new Button("Set terminal information",browser,"commit");
  setbrowser.dependsOn(browser);
  TabSheet infoTabs=new TabSheet();
  addComponent(infoTabs);
  OrderedLayout appInfo=new OrderedLayout();
  infoTabs.addTab(appInfo,"Application",null);
  appInfo.addComponent(applicationInfo);
  appInfo.addComponent(controls);
  appInfo.addComponent(themeSelector);
  appInfo.addComponent(new Button("Change theme",this,"commitTheme"));
  OrderedLayout winInfo=new OrderedLayout();
  infoTabs.addTab(winInfo,"Windows",null);
  winInfo.addComponent(tabs);
  winInfo.addComponent(new Button("Save UIDL",this,"saveUIDL"));
  OrderedLayout termInfo=new OrderedLayout();
  infoTabs.addTab(termInfo,"Terminal",null);
  termInfo.addComponent(terminal);
  termInfo.addComponent(browser);
  termInfo.addComponent(setbrowser);
  setDebuggedApplication(debuggedApplication);
}
