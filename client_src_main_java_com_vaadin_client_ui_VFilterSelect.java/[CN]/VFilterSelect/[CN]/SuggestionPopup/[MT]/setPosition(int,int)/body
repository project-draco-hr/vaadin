{
  debug("VFS.SP: setPosition(" + offsetWidth + ", "+ offsetHeight+ ")");
  int top;
  int left=getPopupLeft();
  menu.setHeight("");
  if (currentPage > 0 && !hasNextPage()) {
    menu.fixHeightTo(pageLength);
  }
  final int desiredHeight=offsetHeight=getOffsetHeight();
  final int desiredWidth=getMainWidth();
  debug("VFS.SP:     desired[" + desiredWidth + ", "+ desiredHeight+ "]");
  Element menuFirstChild=menu.getElement().getFirstChildElement();
  final int naturalMenuWidth=WidgetUtil.getRequiredWidth(menuFirstChild);
  if (popupOuterPadding == -1) {
    popupOuterPadding=WidgetUtil.measureHorizontalPaddingAndBorder(getElement(),2);
  }
  if (naturalMenuWidth < desiredWidth) {
    menu.setWidth((desiredWidth - popupOuterPadding) + "px");
    menuFirstChild.getStyle().setWidth(100,Unit.PCT);
  }
  if (BrowserInfo.get().isIE() && BrowserInfo.get().getBrowserMajorVersion() < 11) {
    double naturalMenuOuterWidth=WidgetUtil.getRequiredWidthDouble(menuFirstChild) + getMarginBorderPaddingWidth(menu.getElement());
    double rootWidth=Math.max(desiredWidth - popupOuterPadding,naturalMenuOuterWidth);
    getContainerElement().getStyle().setWidth(rootWidth,Unit.PX);
  }
  final int textInputHeight=VFilterSelect.this.getOffsetHeight();
  final int textInputTopOnPage=tb.getAbsoluteTop();
  final int viewportOffset=Document.get().getScrollTop();
  final int textInputTopInViewport=textInputTopOnPage - viewportOffset;
  final int textInputBottomInViewport=textInputTopInViewport + textInputHeight;
  final int spaceAboveInViewport=textInputTopInViewport;
  final int spaceBelowInViewport=Window.getClientHeight() - textInputBottomInViewport;
  if (spaceBelowInViewport < offsetHeight && spaceBelowInViewport < spaceAboveInViewport) {
    if (offsetHeight > spaceAboveInViewport) {
      offsetHeight=spaceAboveInViewport;
    }
    top=textInputTopOnPage - offsetHeight;
  }
 else {
    top=topPosition;
    offsetHeight=Math.min(offsetHeight,spaceBelowInViewport);
  }
  offsetWidth=menuFirstChild.getOffsetWidth();
  if (offsetHeight < desiredHeight) {
    int menuHeight=offsetHeight;
    if (isPagingEnabled) {
      menuHeight-=up.getOffsetHeight() + down.getOffsetHeight() + status.getOffsetHeight();
    }
 else {
      final ComputedStyle s=new ComputedStyle(menu.getElement());
      menuHeight-=s.getIntProperty("marginBottom") + s.getIntProperty("marginTop");
    }
    int menuElementHeight=menu.getItemOffsetHeight();
    if (menuHeight < menuElementHeight) {
      menuHeight=menuElementHeight;
    }
    menu.setHeight(menuHeight + "px");
    final int naturalMenuWidthPlusScrollBar=naturalMenuWidth + WidgetUtil.getNativeScrollbarSize();
    if (offsetWidth < naturalMenuWidthPlusScrollBar) {
      menu.setWidth(naturalMenuWidthPlusScrollBar + "px");
    }
  }
  if (offsetWidth + left > Window.getClientWidth()) {
    left=VFilterSelect.this.getAbsoluteLeft() + VFilterSelect.this.getOffsetWidth() - offsetWidth;
    if (left < 0) {
      left=0;
      menu.setWidth(Window.getClientWidth() + "px");
    }
  }
  setPopupPosition(left,top);
  menu.scrollSelectionIntoView();
}
