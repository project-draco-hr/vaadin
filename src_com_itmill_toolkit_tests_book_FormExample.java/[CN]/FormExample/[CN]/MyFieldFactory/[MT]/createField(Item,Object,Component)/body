{
  String pid=(String)propertyId;
  if (pid.equals("name")) {
    return new TextField("Name");
  }
  if (pid.equals("address")) {
    return new TextField("Street Address");
  }
  if (pid.equals("postalCode")) {
    TextField field=new TextField("Postal Code");
    field.setColumns(5);
    Validator postalCodeValidator=new Validator(){
      public boolean isValid(      Object value){
        if (value == null || !(value instanceof String)) {
          return false;
        }
        return ((String)value).matches("[0-9]{5}");
      }
      public void validate(      Object value) throws InvalidValueException {
        if (!isValid(value)) {
          throw new InvalidValueException("Postal code must be a number 10000-99999.");
        }
      }
    }
;
    field.addValidator(postalCodeValidator);
    return field;
  }
  if (pid.equals("city")) {
    Select select=new Select("City");
    final String cities[]=new String[]{"Amsterdam","Berlin","Helsinki","Hong Kong","London","Luxemburg","New York","Oslo","Paris","Rome","Stockholm","Tokyo","Turku"};
    for (int i=0; i < cities.length; i++) {
      select.addItem(cities[i]);
    }
    return select;
  }
  return null;
}
