{
  main=new OrderedLayout();
  main.setMargin(true);
  setCompositionRoot(main);
  l=new Label(txt);
  l.setContentMode(Label.CONTENT_XHTML);
  main.addComponent(l);
  Button b=new Button("Edit",new Button.ClickListener(){
    public void buttonClick(    ClickEvent event){
      if (main.getComponentIterator().next() == l) {
        editor.setValue(l.getValue());
        main.replaceComponent(l,editor);
        event.getButton().setCaption("Save");
      }
 else {
        l.setValue(editor.getValue());
        main.replaceComponent(editor,l);
        event.getButton().setCaption("Edit");
      }
    }
  }
);
  main.addComponent(b);
  main.setComponentAlignment(b,OrderedLayout.ALIGNMENT_RIGHT,OrderedLayout.ALIGNMENT_VERTICAL_CENTER);
  Label l=new Label("This label will update it's value AFTER it's rendered to the client. " + "The client will be synchronized on reload, when you click a button, " + "or when itmill.forceSync() is called."){
    public void paintContent(    PaintTarget target) throws PaintException {
      super.paintContent(target);
      Delay d=new Delay(this);
      d.start();
    }
  }
;
  main.addComponent(l);
}
