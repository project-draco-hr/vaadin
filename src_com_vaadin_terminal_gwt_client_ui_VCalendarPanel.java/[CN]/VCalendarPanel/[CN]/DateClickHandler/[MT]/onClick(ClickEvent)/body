{
  Object sender=event.getSource();
  Cell cell=cal.days.getCellForEvent(event);
  if (sender != cal.days || cell == null || cell.getRowIndex() < 1 || cell.getRowIndex() > 6 || !cal.datefield.isEnabled() || cal.datefield.isReadonly()) {
    return;
  }
  final String text=cal.days.getText(cell.getRowIndex(),cell.getCellIndex());
  if (text.equals(" ")) {
    return;
  }
  try {
    final Integer day=new Integer(text);
    final Date newDate=cal.datefield.getShowingDate();
    newDate.setDate(day.intValue());
    if (!isEnabledDate(newDate)) {
      return;
    }
    if (cal.datefield.getCurrentDate() == null) {
      cal.datefield.setCurrentDate(new Date(newDate.getTime()));
      datefield.getClient().updateVariable(cal.datefield.getId(),"hour",newDate.getHours(),false);
      datefield.getClient().updateVariable(cal.datefield.getId(),"min",newDate.getMinutes(),false);
      datefield.getClient().updateVariable(cal.datefield.getId(),"sec",newDate.getSeconds(),false);
      datefield.getClient().updateVariable(cal.datefield.getId(),"msec",datefield.getMilliseconds(),false);
    }
    cal.datefield.getCurrentDate().setTime(newDate.getTime());
    cal.datefield.getClient().updateVariable(cal.datefield.getId(),"day",cal.datefield.getCurrentDate().getDate(),false);
    cal.datefield.getClient().updateVariable(cal.datefield.getId(),"month",cal.datefield.getCurrentDate().getMonth() + 1,false);
    cal.datefield.getClient().updateVariable(cal.datefield.getId(),"year",cal.datefield.getCurrentDate().getYear() + 1900,cal.datefield.isImmediate());
    if (datefield instanceof VTextualDate && resolution < VDateField.RESOLUTION_HOUR) {
      ((VOverlay)getParent()).hide();
    }
 else {
      updateCalendar();
    }
  }
 catch (  final NumberFormatException e) {
    return;
  }
}
