{
  if (ctrl) {
    return false;
  }
  if (keycode == getForwardKey() && !shift) {
    Date newCurrentDate=(Date)focusedDate.clone();
    newCurrentDate.setDate(newCurrentDate.getDate() + 1);
    if (newCurrentDate.getMonth() == focusedDate.getMonth()) {
      focusDay(newCurrentDate);
    }
 else {
      focusedDate.setDate(focusedDate.getDate() + 1);
      renderCalendar();
    }
    return true;
  }
 else   if (keycode == getBackwardKey() && !shift) {
    Date newCurrentDate=(Date)focusedDate.clone();
    newCurrentDate.setDate(newCurrentDate.getDate() - 1);
    if (newCurrentDate.getMonth() == focusedDate.getMonth()) {
      focusDay(newCurrentDate);
    }
 else {
      focusedDate.setDate(focusedDate.getDate() - 1);
      renderCalendar();
    }
    return true;
  }
 else   if (keycode == getPreviousKey() && !shift) {
    Date newCurrentDate=(Date)focusedDate.clone();
    newCurrentDate.setDate(newCurrentDate.getDate() - 7);
    if (newCurrentDate.getMonth() == focusedDate.getMonth() && focusedRow > 1) {
      focusDay(newCurrentDate);
    }
 else {
      focusedDate=newCurrentDate;
      renderCalendar();
    }
    return true;
  }
 else   if (keycode == getNextKey() && !ctrl && !shift) {
    Date newCurrentDate=(Date)focusedDate.clone();
    newCurrentDate.setDate(newCurrentDate.getDate() + 7);
    if (newCurrentDate.getMonth() == focusedDate.getMonth()) {
      focusDay(newCurrentDate);
    }
 else {
      focusedDate=newCurrentDate;
      renderCalendar();
    }
    return true;
  }
 else   if (keycode == getSelectKey() && !shift) {
    selectFocused();
    onSubmit();
    return true;
  }
 else   if (keycode == getCloseKey()) {
    onCancel();
    return true;
  }
 else   if (shift && keycode == getForwardKey()) {
    focusNextMonth();
    return true;
  }
 else   if (shift && keycode == getBackwardKey()) {
    focusPreviousMonth();
    return true;
  }
 else   if (shift && keycode == getPreviousKey()) {
    focusNextYear(1);
    return true;
  }
 else   if (shift && keycode == getNextKey()) {
    focusPreviousYear(1);
    return true;
  }
 else   if (keycode == getResetKey() && !shift) {
    focusedDate.setTime(value.getTime());
    renderCalendar();
    return true;
  }
  return false;
}
