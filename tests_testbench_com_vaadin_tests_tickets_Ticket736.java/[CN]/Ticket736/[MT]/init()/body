{
  final Window mainWin=new Window("Test app for #736");
  setMainWindow(mainWin);
  mainWin.setTheme("runo");
  final Form f=new Form();
  f.setItemDataSource(new BeanItem<Address>(address,new String[]{"name","street","zip","city","state","country"}));
  f.setCaption("Office address");
  f.setIcon(new ThemeResource("../runo/icons/16/document.png"));
  f.setDescription("Jep jpe, this is form description.");
  mainWin.addComponent(f);
  f.setWriteThrough(false);
  f.setReadThrough(false);
  Button commit=new Button("Commit",f,"commit");
  Button discard=new Button("Discard",f,"discard");
  HorizontalLayout ol=new HorizontalLayout();
  ol.setHeight("3em");
  ol.addComponent(commit);
  ol.setComponentAlignment(commit,Alignment.TOP_RIGHT);
  ol.addComponent(discard);
  f.setFooter(ol);
  f.getField("zip").addValidator(new IsInteger());
  ((AbstractComponent)f.getField("zip")).setDescription("Jepjep");
  ((AbstractComponent)f.getField("zip")).setIcon(new ThemeResource("../runo/icons/16/folder.png"));
  f.getField("state").addValidator(new IsValidState());
  f.getField("name").setRequired(true);
  f.getField("street").setRequired(true);
  f.getField("city").setRequired(true);
  f.getField("zip").setRequired(true);
  final Panel formProperties=new Panel("Form properties");
  formProperties.setWidth("200px");
  final String[] visibleProps={"required","invalidAllowed","readOnly","readThrough","writeThrough","invalidCommitted","validationVisible","immediate"};
  for (int i=0; i < visibleProps.length; i++) {
    CheckBox b=new CheckBox(visibleProps[i],new MethodProperty<Boolean>(f,visibleProps[i]));
    b.setImmediate(true);
    formProperties.addComponent(b);
  }
  mainWin.addComponent(formProperties);
  mainWin.addComponent(new Button("Show state of the address object",new Button.ClickListener(){
    public void buttonClick(    ClickEvent event){
      mainWin.showNotification(address.toString());
    }
  }
));
}
