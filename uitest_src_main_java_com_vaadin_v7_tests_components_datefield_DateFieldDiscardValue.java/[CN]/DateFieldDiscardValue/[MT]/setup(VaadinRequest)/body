{
  String dateFormat="dd/MM/yy";
  final DateField df=new DateField(PROP_NONULL);
  df.setDateFormat(dateFormat);
  df.setBuffered(true);
  Date date=null;
  try {
    date=new SimpleDateFormat(dateFormat).parse("25/07/16");
  }
 catch (  ParseException e1) {
  }
  ObjectProperty<Date> prop=new ObjectProperty<>(date,Date.class);
  df.setPropertyDataSource(prop);
  Button button=new Button("Discard 1");
  button.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      df.discard();
    }
  }
);
  VerticalLayout layout=new VerticalLayout();
  HorizontalLayout hLayout=new HorizontalLayout(df,button);
  layout.addComponent(hLayout);
  final DateField df1=new DateField(PROP_NULL_VALUE);
  df1.setDateFormat(dateFormat);
  df1.setBuffered(true);
  prop=new ObjectProperty<>(null,Date.class);
  df1.setPropertyDataSource(prop);
  button=new Button("Discard 2");
  button.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      df1.discard();
    }
  }
);
  hLayout=new HorizontalLayout(df1,button);
  layout.addComponent(hLayout);
  final DateField df2=new DateField(PROP_NULL);
  df2.setDateFormat(dateFormat);
  df2.setBuffered(true);
  df2.setPropertyDataSource(null);
  button=new Button("Discard 3");
  button.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      df2.discard();
    }
  }
);
  hLayout=new HorizontalLayout(df2,button);
  layout.addComponent(hLayout);
  setContent(layout);
}
