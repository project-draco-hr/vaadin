{
  super.onStateChanged(stateChangeEvent);
  if (stateChangeEvent.hasPropertyChanged("columns")) {
    purgeRemovedColumns();
    for (    GridColumnState state : getState().columns) {
      if (!columnIdToColumn.containsKey(state.id)) {
        addColumnFromStateChangeEvent(state);
      }
      updateColumnFromState(columnIdToColumn.get(state.id),state);
    }
  }
  if (stateChangeEvent.hasPropertyChanged("columnOrder")) {
    if (orderNeedsUpdate(getState().columnOrder)) {
      updateColumnOrderFromState(getState().columnOrder);
    }
  }
  if (stateChangeEvent.hasPropertyChanged("header")) {
    updateHeaderFromState(getState().header);
  }
  if (stateChangeEvent.hasPropertyChanged("footer")) {
    updateFooterFromState(getState().footer);
  }
  if (stateChangeEvent.hasPropertyChanged("selectionMode")) {
    onSelectionModeChange();
  }
  if (stateChangeEvent.hasPropertyChanged("selectedKeys")) {
    updateSelectionFromState();
  }
  if (stateChangeEvent.hasPropertyChanged("sortColumns") || stateChangeEvent.hasPropertyChanged("sortDirs")) {
    onSortStateChange();
  }
  if (stateChangeEvent.hasPropertyChanged("editorEnabled")) {
    getWidget().setEditorEnabled(getState().editorEnabled);
  }
  if (stateChangeEvent.hasPropertyChanged("frozenColumnCount")) {
    getWidget().setFrozenColumnCount(getState().frozenColumnCount);
  }
  String activeTheme=getConnection().getUIConnector().getActiveTheme();
  if (lastKnownTheme == null) {
    lastKnownTheme=activeTheme;
  }
 else   if (!lastKnownTheme.equals(activeTheme)) {
    getWidget().resetSizesFromDom();
    lastKnownTheme=activeTheme;
  }
}
