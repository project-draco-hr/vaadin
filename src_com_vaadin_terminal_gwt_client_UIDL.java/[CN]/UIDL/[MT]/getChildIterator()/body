{
  return new Iterator<Object>(){
    int index=-1;
    public void remove(){
      throw new UnsupportedOperationException();
    }
    public Object next(){
      if (hasNext()) {
        int typeOfChild=typeOfChild(++index);
switch (typeOfChild) {
case CHILD_TYPE_UIDL:
          UIDL childUIDL=getChildUIDL(index);
        return childUIDL;
case CHILD_TYPE_STRING:
      return getChildString(index);
case CHILD_TYPE_XML:
    return getChildXML(index);
default :
  throw new IllegalStateException("Illegal child  in tag " + getTag() + " at index "+ index);
}
}
return null;
}
public boolean hasNext(){
int count=getChildCount();
return count > index + 1;
}
}
;
}
