{
  this.client=client;
  if (client.updateComponent(this,uidl,false))   return;
  ArrayList uidlWidgets=new ArrayList();
  for (Iterator it=uidl.getChildIterator(); it.hasNext(); ) {
    UIDL uidlForChild=(UIDL)it.next();
    Widget child=client.getWidget(uidlForChild);
    ((Paintable)child).updateFromUIDL(uidlForChild,client);
    uidlWidgets.add(child);
  }
  Vector oldWidgets=getPaintables();
  Iterator oldIt=oldWidgets.iterator();
  Iterator newIt=uidlWidgets.iterator();
  Widget oldChild=null;
  while (newIt.hasNext()) {
    Widget child=(Widget)newIt.next();
    if (oldChild == null && oldIt.hasNext()) {
      while (oldIt.hasNext()) {
        oldChild=(Widget)oldIt.next();
        if (uidlWidgets.contains(oldChild))         break;
 else {
          removePaintable((Paintable)oldChild);
          oldChild=null;
        }
      }
    }
    if (oldChild == null) {
      add(child);
      continue;
    }
    if (child == oldChild) {
      if (oldIt.hasNext()) {
        oldChild=(Widget)oldIt.next();
      }
      continue;
    }
    if (hasChildComponent(child)) {
      this.insert(child,getWidgetIndex(oldChild));
    }
  }
  while (oldIt.hasNext()) {
    Paintable p=(Paintable)oldIt.next();
    if (!uidlWidgets.contains(p))     removePaintable(p);
  }
}
