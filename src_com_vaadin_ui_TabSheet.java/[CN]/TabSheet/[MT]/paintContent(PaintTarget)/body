{
  if (areTabsHidden()) {
    target.addAttribute("hidetabs",true);
  }
  target.startTag("tabs");
  Collection<Component> orphaned=new HashSet<Component>(paintedTabs);
  for (final Iterator<Component> i=getComponentIterator(); i.hasNext(); ) {
    final Component component=i.next();
    orphaned.remove(component);
    Tab tab=tabs.get(component);
    target.startTag("tab");
    if (!tab.isEnabled() && tab.isVisible()) {
      target.addAttribute("disabled",true);
    }
    if (!tab.isVisible()) {
      target.addAttribute("hidden",true);
    }
    if (tab.isClosable()) {
      target.addAttribute("closable",true);
    }
    final Resource icon=tab.getIcon();
    if (icon != null) {
      target.addAttribute("icon",icon);
    }
    final String caption=tab.getCaption();
    if (caption != null && caption.length() > 0) {
      target.addAttribute("caption",caption);
    }
    final String description=tab.getDescription();
    if (description != null) {
      target.addAttribute("description",description);
    }
    final ErrorMessage componentError=tab.getComponentError();
    if (componentError != null) {
      componentError.paint(target);
    }
    final String styleName=tab.getStyleName();
    if (styleName != null && styleName.length() != 0) {
      target.addAttribute(VTabsheet.TAB_STYLE_NAME,styleName);
    }
    target.addAttribute("key",keyMapper.key(component));
    if (component.equals(selected)) {
      target.addAttribute("selected",true);
      component.paint(target);
      paintedTabs.add(component);
    }
 else     if (paintedTabs.contains(component)) {
      component.paint(target);
    }
 else {
      component.requestRepaintRequests();
    }
    target.endTag("tab");
  }
  target.endTag("tabs");
  if (selected != null) {
    target.addVariable(this,"selected",keyMapper.key(selected));
  }
  for (  Component component2 : orphaned) {
    paintedTabs.remove(component2);
  }
}
