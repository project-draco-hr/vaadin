{
  if (dependencies.length() == 0) {
    return;
  }
  ResourceLoadListener resourceLoadListener=new ResourceLoadListener(){
    @Override public void onLoad(    ResourceLoadEvent event){
      if (dependencies.length() != 0) {
        String url=translateVaadinUri(dependencies.shift());
        ApplicationConfiguration.startDependencyLoading();
        event.getResourceLoader().loadScript(url,this);
      }
      ApplicationConfiguration.endDependencyLoading();
    }
    @Override public void onError(    ResourceLoadEvent event){
      getLogger().severe(event.getResourceUrl() + " could not be loaded.");
      onLoad(event);
    }
  }
;
  ResourceLoader loader=ResourceLoader.get();
  String url=translateVaadinUri(dependencies.shift());
  ApplicationConfiguration.startDependencyLoading();
  loader.loadScript(url,resourceLoadListener);
  if (ResourceLoader.supportsInOrderScriptExecution()) {
    for (int i=0; i < dependencies.length(); i++) {
      String preloadUrl=translateVaadinUri(dependencies.get(i));
      loader.loadScript(preloadUrl,null);
    }
  }
 else {
    for (int i=0; i < dependencies.length(); i++) {
      String preloadUrl=translateVaadinUri(dependencies.get(i));
      loader.preloadResource(preloadUrl,null);
    }
  }
}
