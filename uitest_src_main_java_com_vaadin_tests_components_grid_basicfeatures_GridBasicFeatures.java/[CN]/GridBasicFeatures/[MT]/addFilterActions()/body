{
  createBooleanAction("Column 1 starts with \"(23\"","Filter",false,new Command<LegacyGrid,Boolean>(){
    Filter filter=new Filter(){
      @Override public boolean passesFilter(      Object itemId,      Item item){
        return item.getItemProperty("Column 1").getValue().toString().startsWith("(23");
      }
      @Override public boolean appliesToProperty(      Object propertyId){
        return propertyId.equals("Column 1");
      }
    }
;
    @Override public void execute(    LegacyGrid grid,    Boolean value,    Object data){
      if (value) {
        ds.addContainerFilter(filter);
      }
 else {
        ds.removeContainerFilter(filter);
      }
    }
  }
);
  createBooleanAction("Impassable filter","Filter",false,new Command<LegacyGrid,Boolean>(){
    Filter filter=new Filter(){
      @Override public boolean passesFilter(      Object itemId,      Item item){
        return false;
      }
      @Override public boolean appliesToProperty(      Object propertyId){
        return true;
      }
    }
;
    @Override public void execute(    LegacyGrid c,    Boolean value,    Object data){
      if (value) {
        ds.addContainerFilter(filter);
      }
 else {
        ds.removeContainerFilter(filter);
      }
    }
  }
);
}
