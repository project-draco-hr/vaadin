{
  createCategory("Header",null);
  createBooleanAction("Visible","Header",true,new Command<LegacyGrid,Boolean>(){
    @Override public void execute(    LegacyGrid grid,    Boolean value,    Object data){
      grid.setHeaderVisible(value);
    }
  }
);
  LinkedHashMap<String,String> defaultRows=new LinkedHashMap<String,String>();
  defaultRows.put("Top","Top");
  defaultRows.put("Bottom","Bottom");
  defaultRows.put("Unset","Unset");
  createMultiClickAction("Default row","Header",defaultRows,new Command<LegacyGrid,String>(){
    @Override public void execute(    LegacyGrid grid,    String value,    Object data){
      HeaderRow defaultRow=null;
      if (value.equals("Top")) {
        defaultRow=grid.getHeaderRow(0);
      }
 else       if (value.equals("Bottom")) {
        defaultRow=grid.getHeaderRow(grid.getHeaderRowCount() - 1);
      }
      grid.setDefaultHeaderRow(defaultRow);
    }
  }
,defaultRows.get("Top"));
  createClickAction("Prepend row","Header",new Command<LegacyGrid,Object>(){
    @Override public void execute(    LegacyGrid grid,    Object value,    Object data){
      grid.prependHeaderRow();
    }
  }
,null);
  createClickAction("Append row","Header",new Command<LegacyGrid,Object>(){
    @Override public void execute(    LegacyGrid grid,    Object value,    Object data){
      grid.appendHeaderRow();
    }
  }
,null);
  createClickAction("Remove top row","Header",new Command<LegacyGrid,Object>(){
    @Override public void execute(    LegacyGrid grid,    Object value,    Object data){
      grid.removeHeaderRow(0);
    }
  }
,null);
  createClickAction("Remove bottom row","Header",new Command<LegacyGrid,Object>(){
    @Override public void execute(    LegacyGrid grid,    Object value,    Object data){
      grid.removeHeaderRow(grid.getHeaderRowCount() - 1);
    }
  }
,null);
}
