{
  RequestType requestType=getRequestType(request);
  if (requestType == RequestType.UNKNOWN) {
    handleUnknownRequest(request,response);
  }
 else   if (requestType == RequestType.DUMMY) {
    ((ResourceResponse)response).setContentType("text/html");
    final OutputStream out=((ResourceResponse)response).getPortletOutputStream();
    final PrintWriter outWriter=new PrintWriter(new BufferedWriter(new OutputStreamWriter(out,"UTF-8")));
    outWriter.print("<html><body>dummy page</body></html>");
    outWriter.flush();
    out.close();
  }
 else   if (requestType == RequestType.STATIC_FILE) {
    serveStaticResources((ResourceRequest)request,(ResourceResponse)response);
  }
 else {
    Application application=null;
    boolean transactionStarted=false;
    boolean requestStarted=false;
    try {
      application=findApplicationInstance(request,requestType);
      if (application == null) {
        return;
      }
      PortletApplicationContext2 applicationContext=PortletApplicationContext2.getApplicationContext(request.getPortletSession());
      applicationContext.setResponse(response);
      PortletCommunicationManager applicationManager=applicationContext.getApplicationManager(application);
      if (response instanceof RenderResponse && applicationManager.dummyURL == null) {
        ResourceURL dummyURL=((RenderResponse)response).createResourceURL();
        dummyURL.setResourceID("DUMMY");
        applicationManager.dummyURL=dummyURL.toString();
      }
      updateBrowserProperties(applicationContext.getBrowser(),request);
      if (application instanceof PortletRequestListener) {
        ((PortletRequestListener)application).onRequestStart(request,response);
        requestStarted=true;
      }
      startApplication(request,application,applicationContext);
      applicationContext.startTransaction(application,request);
      transactionStarted=true;
      if (request instanceof RenderRequest) {
        applicationContext.firePortletRenderRequest(application,(RenderRequest)request,(RenderResponse)response);
      }
 else       if (request instanceof ActionRequest) {
        applicationContext.firePortletActionRequest(application,(ActionRequest)request,(ActionResponse)response);
      }
 else       if (request instanceof EventRequest) {
        applicationContext.firePortletEventRequest(application,(EventRequest)request,(EventResponse)response);
      }
 else       if (request instanceof ResourceRequest) {
        applicationContext.firePortletResourceRequest(application,(ResourceRequest)request,(ResourceResponse)response);
      }
      if (requestType == RequestType.FILE_UPLOAD) {
        applicationManager.handleFileUpload((ActionRequest)request,(ActionResponse)response);
        return;
      }
 else       if (requestType == RequestType.UIDL) {
        applicationManager.handleUidlRequest((ResourceRequest)request,(ResourceResponse)response,this);
        return;
      }
 else {
        if (!application.isRunning()) {
          endApplication(request,response,application);
          return;
        }
        handleOtherRequest(request,response,requestType,application,applicationContext,applicationManager);
      }
    }
 catch (    final SessionExpiredException e) {
      System.err.println("Session has expired");
      e.printStackTrace(System.err);
    }
catch (    final GeneralSecurityException e) {
      System.err.println("General security exception, should never happen");
      e.printStackTrace(System.err);
    }
catch (    final Throwable e) {
      handleServiceException(request,response,application,e);
    }
 finally {
      try {
        if (transactionStarted) {
          ((PortletApplicationContext2)application.getContext()).endTransaction(application,request);
        }
      }
  finally {
        if (requestStarted) {
          ((PortletRequestListener)application).onRequestEnd(request,response);
        }
      }
    }
  }
}
