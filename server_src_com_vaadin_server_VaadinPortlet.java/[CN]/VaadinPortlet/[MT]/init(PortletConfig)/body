{
  super.init(config);
  Properties applicationProperties=new Properties();
  final PortletContext context=config.getPortletContext();
  for (final Enumeration<String> e=context.getInitParameterNames(); e.hasMoreElements(); ) {
    final String name=e.nextElement();
    applicationProperties.setProperty(name,context.getInitParameter(name));
  }
  for (final Enumeration<String> e=config.getInitParameterNames(); e.hasMoreElements(); ) {
    final String name=e.nextElement();
    applicationProperties.setProperty(name,config.getInitParameter(name));
  }
  deploymentConfiguration=new AbstractDeploymentConfiguration(getClass(),applicationProperties){
    @Override public String getConfiguredWidgetset(    WrappedRequest request){
      String widgetset=getApplicationOrSystemProperty(PARAMETER_WIDGETSET,null);
      if (widgetset == null) {
        widgetset=WrappedPortletRequest.cast(request).getPortalProperty(PORTAL_PARAMETER_VAADIN_WIDGETSET);
      }
      if (widgetset == null) {
        widgetset=DEFAULT_WIDGETSET;
      }
      return widgetset;
    }
    @Override public String getConfiguredTheme(    WrappedRequest request){
      String themeName=WrappedPortletRequest.cast(request).getPortalProperty(Constants.PORTAL_PARAMETER_VAADIN_THEME);
      if (themeName == null) {
        themeName=DEFAULT_THEME_NAME;
      }
      return themeName;
    }
    @Override public boolean isStandalone(    WrappedRequest request){
      return false;
    }
    @Override public String getStaticFileLocation(    WrappedRequest request){
      String staticFileLocation=WrappedPortletRequest.cast(request).getPortalProperty(Constants.PORTAL_PARAMETER_VAADIN_RESOURCE_PATH);
      if (staticFileLocation != null) {
        while (staticFileLocation.endsWith(".")) {
          staticFileLocation=staticFileLocation.substring(0,staticFileLocation.length() - 1);
        }
        return staticFileLocation;
      }
 else {
        return "/html";
      }
    }
    @Override public String getMimeType(    String resourceName){
      return getPortletContext().getMimeType(resourceName);
    }
    @Override public SystemMessages getSystemMessages(){
      return VaadinPortlet.this.getSystemMessages();
    }
  }
;
  addonContext=new AddonContext(deploymentConfiguration);
  addonContext.init();
}
