{
  final String tag=uidl.getTag();
  if ("button".equals(tag)) {
    if ("switch".equals(uidl.getStringAttribute("type"))) {
      return ICheckBox.class;
    }
 else {
      return IButton.class;
    }
  }
 else   if ("window".equals(tag)) {
    return IWindow.class;
  }
 else   if ("orderedlayout".equals(tag)) {
    return IOrderedLayout.class;
  }
 else   if ("verticallayout".equals(tag)) {
    return IVerticalLayout.class;
  }
 else   if ("horizontallayout".equals(tag)) {
    return IHorizontalLayout.class;
  }
 else   if ("label".equals(tag)) {
    return ILabel.class;
  }
 else   if ("link".equals(tag)) {
    return ILink.class;
  }
 else   if ("gridlayout".equals(tag)) {
    return IGridLayout.class;
  }
 else   if ("tree".equals(tag)) {
    return ITree.class;
  }
 else   if ("select".equals(tag)) {
    if (uidl.hasAttribute("type")) {
      final String type=uidl.getStringAttribute("type");
      if (type.equals("twincol")) {
        return ITwinColSelect.class;
      }
      if (type.equals("optiongroup")) {
        return IOptionGroup.class;
      }
      if (type.equals("native")) {
        return INativeSelect.class;
      }
      if (type.equals("list")) {
        return IListSelect.class;
      }
    }
 else {
      if (uidl.hasAttribute("selectmode") && uidl.getStringAttribute("selectmode").equals("multi")) {
        return IListSelect.class;
      }
 else {
        return IFilterSelect.class;
      }
    }
  }
 else   if ("panel".equals(tag)) {
    return IPanel.class;
  }
 else   if ("tabsheet".equals(tag)) {
    return ITabsheet.class;
  }
 else   if ("accordion".equals(tag)) {
    return IAccordion.class;
  }
 else   if ("embedded".equals(tag)) {
    return IEmbedded.class;
  }
 else   if ("customlayout".equals(tag)) {
    return ICustomLayout.class;
  }
 else   if ("customcomponent".equals(tag)) {
    return ICustomComponent.class;
  }
 else   if ("textfield".equals(tag)) {
    if (uidl.getBooleanAttribute("richtext")) {
      return IRichTextArea.class;
    }
 else     if (uidl.hasAttribute("multiline")) {
      return ITextArea.class;
    }
 else     if (uidl.getBooleanAttribute("secret")) {
      return IPasswordField.class;
    }
 else {
      return ITextField.class;
    }
  }
 else   if ("table".equals(tag)) {
    return IScrollTable.class;
  }
 else   if ("pagingtable".equals(tag)) {
    return ITablePaging.class;
  }
 else   if ("datefield".equals(tag)) {
    if (uidl.hasAttribute("type")) {
      if ("inline".equals(uidl.getStringAttribute("type"))) {
        return IDateFieldCalendar.class;
      }
 else       if ("popup".equals(uidl.getStringAttribute("type"))) {
        return IPopupCalendar.class;
      }
    }
    return IPopupCalendar.class;
  }
 else   if ("slider".equals(tag)) {
    return ISlider.class;
  }
 else   if ("form".equals(tag)) {
    return IForm.class;
  }
 else   if ("formlayout".equals(tag)) {
    return IFormLayout.class;
  }
 else   if ("upload".equals(tag)) {
    return IUpload.class;
  }
 else   if ("hsplitpanel".equals(tag)) {
    return ISplitPanelHorizontal.class;
  }
 else   if ("vsplitpanel".equals(tag)) {
    return ISplitPanelVertical.class;
  }
 else   if ("progressindicator".equals(tag)) {
    return IProgressIndicator.class;
  }
 else   if ("menubar".equals(tag)) {
    return IMenuBar.class;
  }
 else   if ("popupview".equals(tag)) {
    return IPopupView.class;
  }
 else   if ("urifragment".equals(tag)) {
    return IUriFragmentUtility.class;
  }
 else   if (IAbsoluteLayout.TAGNAME.equals(tag)) {
    return IAbsoluteLayout.class;
  }
  return IUnknownComponent.class;
}
