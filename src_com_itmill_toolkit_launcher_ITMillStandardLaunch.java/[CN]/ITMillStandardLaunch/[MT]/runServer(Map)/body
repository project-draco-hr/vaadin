{
  System.out.println("-------------------------------------------------\n" + "Starting IT Mill Toolkit examples.\n" + "Please go to http://localhost:" + serverPort + "\nif your web browser is not automatically started."+ "\n-------------------------------------------------\n");
  assignDefault(serverArgs,"webroot","WebContent");
  assignDefault(serverArgs,"httpPort",serverPort);
  try {
    long started=System.currentTimeMillis();
    Server server=new Server();
    String threadPoolName=System.getProperty("jetty.threadpool.name","Jetty thread");
    int maxIdleTimeMs=Integer.getInteger("jetty.threadpool.maxIdleTimeMs",60000);
    int maxThreads=Integer.getInteger("jetty.threadpool.maxThreads",100);
    int minThreads=Integer.getInteger("jetty.threadpool.minThreads",1);
    int lowThreads=Integer.getInteger("jetty.threadpool.maxIdleTimeMs",25);
    BoundedThreadPool threadPool=new BoundedThreadPool();
    threadPool.setName(threadPoolName);
    threadPool.setMaxIdleTimeMs(maxIdleTimeMs);
    threadPool.setMaxThreads(maxThreads);
    threadPool.setMinThreads(minThreads);
    threadPool.setLowThreads(lowThreads);
    server.setThreadPool(threadPool);
    Connector connector=new SelectChannelConnector();
    connector.setPort(Integer.valueOf(serverArgs.get("httpPort").toString()));
    server.setConnectors(new Connector[]{connector});
    WebAppContext webappcontext=new WebAppContext();
    webappcontext.setContextPath("");
    webappcontext.setWar(serverArgs.get("webroot").toString());
    server.setHandler(webappcontext);
    server.start();
    System.err.println("Started Jetty in " + (System.currentTimeMillis() - started) + "ms.");
  }
 catch (  Exception e) {
    e.printStackTrace();
    return null;
  }
  return "http://localhost:" + serverArgs.get("httpPort");
}
