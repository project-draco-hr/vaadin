{
  if (!isAttached()) {
    return;
  }
  int wholeSize;
  int pixelPosition;
switch (orientation) {
case HORIZONTAL:
    wholeSize=DOM.getElementPropertyInt(wrapper,"clientWidth");
  pixelPosition=DOM.getElementPropertyInt(splitter,"offsetLeft");
if ((pixelPosition > 0 && pixelPosition + getSplitterSize() > wholeSize) || (positionReversed && pixelPosition < 0)) {
  pixelPosition=wholeSize - getSplitterSize();
  if (pixelPosition < 0) {
    pixelPosition=0;
  }
  setSplitPosition(pixelPosition + "px",false);
  return;
}
firstContainer.getStyle().setWidth(pixelPosition,Unit.PX);
int secondContainerWidth=(wholeSize - pixelPosition - getSplitterSize());
if (secondContainerWidth < 0) {
secondContainerWidth=0;
}
secondContainer.getStyle().setWidth(secondContainerWidth,Unit.PX);
secondContainer.getStyle().setLeft(pixelPosition + getSplitterSize(),Unit.PX);
LayoutManager layoutManager=LayoutManager.get(client);
ConnectorMap connectorMap=ConnectorMap.get(client);
if (firstChild != null) {
ComponentConnector connector=connectorMap.getConnector(firstChild);
if (connector.isRelativeWidth()) {
layoutManager.reportWidthAssignedToRelative(connector,pixelPosition);
}
 else {
layoutManager.setNeedsMeasure(connector);
}
}
if (secondChild != null) {
ComponentConnector connector=connectorMap.getConnector(secondChild);
if (connector.isRelativeWidth()) {
layoutManager.reportWidthAssignedToRelative(connector,secondContainerWidth);
}
 else {
layoutManager.setNeedsMeasure(connector);
}
}
break;
case VERTICAL:
wholeSize=DOM.getElementPropertyInt(wrapper,"clientHeight");
pixelPosition=DOM.getElementPropertyInt(splitter,"offsetTop");
if ((pixelPosition > 0 && pixelPosition + getSplitterSize() > wholeSize) || (positionReversed && pixelPosition < 0)) {
pixelPosition=wholeSize - getSplitterSize();
if (pixelPosition < 0) {
pixelPosition=0;
}
setSplitPosition(pixelPosition + "px",false);
return;
}
firstContainer.getStyle().setHeight(pixelPosition,Unit.PX);
int secondContainerHeight=(wholeSize - pixelPosition - getSplitterSize());
if (secondContainerHeight < 0) {
secondContainerHeight=0;
}
secondContainer.getStyle().setHeight(secondContainerHeight,Unit.PX);
secondContainer.getStyle().setTop(pixelPosition + getSplitterSize(),Unit.PX);
layoutManager=LayoutManager.get(client);
connectorMap=ConnectorMap.get(client);
if (firstChild != null) {
ComponentConnector connector=connectorMap.getConnector(firstChild);
if (connector.isRelativeHeight()) {
layoutManager.reportHeightAssignedToRelative(connector,pixelPosition);
}
 else {
layoutManager.setNeedsMeasure(connector);
}
}
if (secondChild != null) {
ComponentConnector connector=connectorMap.getConnector(secondChild);
if (connector.isRelativeHeight()) {
layoutManager.reportHeightAssignedToRelative(connector,secondContainerHeight);
}
 else {
layoutManager.setNeedsMeasure(connector);
}
}
break;
}
}
