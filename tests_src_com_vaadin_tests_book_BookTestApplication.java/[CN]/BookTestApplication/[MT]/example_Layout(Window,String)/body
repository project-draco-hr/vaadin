{
  if (param.equals("intro")) {
    VerticalLayout root=new VerticalLayout();
    main.setContent(root);
    Label title=new Label("The Ultimate Cat Finder");
    main.addComponent(title);
    HorizontalLayout horlayout=new HorizontalLayout();
    main.addComponent(horlayout);
    VerticalLayout treeContainer=new VerticalLayout();
    horlayout.addComponent(treeContainer);
    treeContainer.addComponent(new Label("The Planets and Major Moons"));
    Tree tree=new Tree();
    treeContainer.addComponent(tree);
    Panel detailspanel=new Panel("Details");
    detailspanel.setSizeFull();
    horlayout.addComponent(detailspanel);
    VerticalLayout detailslayout=new VerticalLayout();
    detailspanel.setContent(detailslayout);
    detailslayout.addComponent(new Label("Where is the cat?"));
    detailslayout.addComponent(new Label("I don't know!"));
    horlayout.setExpandRatio(detailspanel,1);
    horlayout.setExpandRatio(treeContainer,0);
    horlayout.setSizeFull();
    horlayout.setSpacing(true);
    root.addStyleName("layoutexample");
    root.setSizeFull();
    root.setExpandRatio(horlayout,1);
    title.addStyleName("title");
    tree.setSizeUndefined();
    tree.setHeight("100%");
    treeContainer.addStyleName("treecontainer");
    treeContainer.setSizeUndefined();
    treeContainer.setHeight("100%");
    treeContainer.setExpandRatio(tree,1);
    detailspanel.addStyleName("light");
    for (Iterator i=detailslayout.getComponentIterator(); i.hasNext(); ) {
      Label c=(Label)i.next();
      detailslayout.setComponentAlignment(c,Alignment.MIDDLE_CENTER);
      c.setSizeUndefined();
    }
    final Object[][] planets=new Object[][]{new Object[]{"Mercury"},new Object[]{"Venus"},new Object[]{"Earth","The Moon"},new Object[]{"Mars","Phobos","Deimos"},new Object[]{"Jupiter","Io","Europa","Ganymedes","Callisto"},new Object[]{"Saturn","Titan","Tethys","Dione","Rhea","Iapetus"},new Object[]{"Uranus","Miranda","Ariel","Umbriel","Titania","Oberon"},new Object[]{"Neptune","Triton","Proteus","Nereid","Larissa"}};
    for (int i=0; i < planets.length; i++) {
      final String planet=(String)(planets[i][0]);
      tree.addItem(planet);
      if (planets[i].length == 1) {
        tree.setChildrenAllowed(planet,false);
      }
 else {
        for (int j=1; j < planets[i].length; j++) {
          final String moon=(String)planets[i][j];
          tree.addItem(moon);
          tree.setParent(moon,planet);
          tree.setChildrenAllowed(moon,false);
        }
        tree.expandItemsRecursively(planet);
      }
    }
  }
}
