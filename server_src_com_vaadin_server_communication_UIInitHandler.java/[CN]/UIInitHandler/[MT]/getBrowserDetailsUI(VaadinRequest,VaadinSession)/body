{
  VaadinService vaadinService=request.getService();
  List<UIProvider> uiProviders=session.getUIProviders();
  UIClassSelectionEvent classSelectionEvent=new UIClassSelectionEvent(request);
  UIProvider provider=null;
  Class<? extends UI> uiClass=null;
  for (  UIProvider p : uiProviders) {
    if (p instanceof LegacyApplicationUIProvider) {
      LegacyApplicationUIProvider legacyProvider=(LegacyApplicationUIProvider)p;
      UI existingUi=legacyProvider.getExistingUI(classSelectionEvent);
      if (existingUi != null) {
        reinitUI(existingUi,request);
        return existingUi;
      }
    }
    uiClass=p.getUIClass(classSelectionEvent);
    if (uiClass != null) {
      provider=p;
      break;
    }
  }
  if (provider == null || uiClass == null) {
    return null;
  }
  String embedId=getEmbedId(request);
  UI retainedUI=session.getUIByEmbedId(embedId);
  if (retainedUI != null) {
    if (vaadinService.preserveUIOnRefresh(provider,new UICreateEvent(request,uiClass))) {
      if (uiClass.isInstance(retainedUI)) {
        reinitUI(retainedUI,request);
        return retainedUI;
      }
 else {
        getLogger().info("Not using the preserved UI " + embedId + " because it is of type "+ retainedUI.getClass()+ " but "+ uiClass+ " is expected for the request.");
      }
    }
  }
  Integer uiId=Integer.valueOf(session.getNextUIid());
  UICreateEvent event=new UICreateEvent(request,uiClass,uiId);
  UI ui=uiClass.cast(provider.createInstance(event));
  if (ui.getSession() != session) {
    ui.setSession(session);
  }
  PushMode pushMode=provider.getPushMode(event);
  if (pushMode == null) {
    pushMode=session.getConfiguration().getPushMode();
  }
  ui.getPushConfiguration().setPushMode(pushMode);
  ui.getPushConfiguration().setPushPath(session.getConfiguration().getPushPath());
  Transport transport=provider.getPushTransport(event);
  if (transport != null) {
    ui.getPushConfiguration().setTransport(transport);
  }
  UI.setCurrent(ui);
  ui.doInit(request,uiId.intValue(),embedId);
  session.addUI(ui);
  if (embedId == null && vaadinService.preserveUIOnRefresh(provider,event)) {
    getLogger().warning("There is no embed id available for UI " + uiClass + " that should be preserved.");
  }
  return ui;
}
