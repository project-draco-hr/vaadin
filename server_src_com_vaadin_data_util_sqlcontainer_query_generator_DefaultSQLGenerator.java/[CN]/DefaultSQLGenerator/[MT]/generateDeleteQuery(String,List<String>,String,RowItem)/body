{
  if (tableName == null || tableName.trim().equals("")) {
    throw new IllegalArgumentException("Table name must be given.");
  }
  if (item == null) {
    throw new IllegalArgumentException("Item to be deleted must be given.");
  }
  if (primaryKeyColumns == null || primaryKeyColumns.isEmpty()) {
    throw new IllegalArgumentException("Valid keyColumnNames must be provided.");
  }
  StatementHelper sh=getStatementHelper();
  StringBuffer query=new StringBuffer();
  query.append("DELETE FROM ").append(tableName).append(" WHERE ");
  int count=1;
  for (  String keyColName : primaryKeyColumns) {
    if ((this instanceof MSSQLGenerator || this instanceof OracleGenerator) && keyColName.equalsIgnoreCase("rownum")) {
      count++;
      continue;
    }
    if (count > 1) {
      query.append(" AND ");
    }
    if (item.getItemProperty(keyColName).getValue() != null) {
      query.append(QueryBuilder.quote(keyColName) + " = ?");
      sh.addParameterValue(item.getItemProperty(keyColName).getValue(),item.getItemProperty(keyColName).getType());
    }
    count++;
  }
  if (versionColumn != null) {
    if (!item.getItemPropertyIds().contains(versionColumn)) {
      throw new IllegalArgumentException(String.format("Table '%s' does not contain version column '%s'.",tableName,versionColumn));
    }
    query.append(String.format(" AND %s = ?",QueryBuilder.quote(versionColumn)));
    sh.addParameterValue(item.getItemProperty(versionColumn).getValue(),item.getItemProperty(versionColumn).getType());
  }
  sh.setQueryString(query.toString());
  return sh;
}
