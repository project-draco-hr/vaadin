{
  target.addAttribute("margins",margins.getBitMask());
  if (isSpacingEnabled()) {
    target.addAttribute("spacing",true);
  }
  if (getOrientation() == ORIENTATION_HORIZONTAL) {
    target.addAttribute("orientation","horizontal");
  }
  final String[] alignmentsArray=new String[components.size()];
  int index=0;
  for (final Iterator i=getComponentIterator(); i.hasNext(); ) {
    final Component c=(Component)i.next();
    if (c != null) {
      target.startTag("cc");
      if (c == expanded) {
        target.addAttribute("expanded",true);
      }
      c.paint(target);
      target.endTag("cc");
    }
    alignmentsArray[index++]=String.valueOf(getComponentAlignment(c));
  }
  target.addAttribute("alignments",alignmentsArray);
}
