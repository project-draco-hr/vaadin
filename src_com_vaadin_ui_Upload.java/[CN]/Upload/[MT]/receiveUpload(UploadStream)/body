{
  if (!isUploading) {
    throw new IllegalStateException("uploading not started");
  }
  final String filename=upload.getContentName();
  final String type=upload.getContentType();
  final Application application=getApplication();
synchronized (application) {
    fireStarted(filename,type);
  }
  final OutputStream out=receiver.receiveUpload(filename,type);
  if (out == null) {
synchronized (application) {
      fireNoOutputStream(filename,type,0);
      endUpload();
    }
    return;
  }
  final InputStream in=upload.getStream();
  if (null == in) {
synchronized (application) {
      fireNoInputStream(filename,type,0);
      endUpload();
    }
    return;
  }
  final byte buffer[]=new byte[BUFFER_SIZE];
  int bytesRead=0;
  totalBytes=0;
  try {
    while ((bytesRead=in.read(buffer)) > 0) {
      out.write(buffer,0,bytesRead);
      totalBytes+=bytesRead;
      if (contentLength > 0 && (progressListeners != null || progressListener != null)) {
synchronized (application) {
          fireUpdateProgress(totalBytes,contentLength);
        }
      }
      if (interrupted) {
        throw new Exception("Upload interrupted by other thread");
      }
    }
    out.close();
synchronized (application) {
      fireUploadSuccess(filename,type,totalBytes);
      endUpload();
      requestRepaint();
    }
  }
 catch (  final Exception e) {
synchronized (application) {
      try {
        out.close();
      }
 catch (      IOException e1) {
      }
      fireUploadInterrupted(filename,type,totalBytes,e);
      endUpload();
      interrupted=false;
    }
  }
}
