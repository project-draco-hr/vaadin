{
  HorizontalLayout demoLayout=new HorizontalLayout();
  demoLayout.setSpacing(true);
  demoLayout.setMargin(true);
  Tree t=new Tree("Hardware Inventory",ExampleUtil.getHardwareContainer());
  t.setItemCaptionPropertyId(ExampleUtil.hw_PROPERTY_NAME);
  t.setItemCaptionMode(AbstractSelect.ITEM_CAPTION_MODE_PROPERTY);
  t.setSizeUndefined();
  int itemId=t.getContainerDataSource().size();
  for (int i=0; i < itemId; i++) {
    t.expandItemsRecursively(i);
  }
  final TabSheet ts=new TabSheet();
  final Label l1=new Label("This window shows an example of a so called" + " Web-style layout. You probably notice that the layout" + " is quite different than the Application-style layout."+ " Please select one of the other tabs to find out more!");
  l1.setSizeUndefined();
  final Label l2=new Label("Typical design principles for a Web-style layout" + " state that the content should 'push' the layout" + " to reach adequate proportions. In Toolkit, this is"+ " achieved by calling setSizeUndefined() for a Component."+ " In this example you may notice that the width of the Tree"+ " component is set by the content of it. Also, the width of"+ " the Tabsheet is set by the combined width of the tab captions.");
  l2.setSizeUndefined();
  final Label l3=new Label("In some cases it is reasonable to set some of the" + " sizes by hand, or at least set some limits to the sizes." + " For example here the height of the TabSheet component has"+ " been set to a fixed 200 pixels. Also, in some cases setting"+ " the base layout of the window to be of undefined size does not"+ " produce very good results.");
  l3.setSizeUndefined();
  ts.addTab(l1);
  ts.setTabCaption(l1,"Example of a Web-style layout");
  ts.addTab(l2);
  ts.setTabCaption(l2,"Principles");
  ts.addTab(l3);
  ts.setTabCaption(l3,"Exceptions");
  ts.setSizeUndefined();
  ts.setHeight(200,UNITS_PIXELS);
  Label commentArea=new Label("Comment area: no comments");
  VerticalLayout tabsAndComments=new VerticalLayout();
  tabsAndComments.setSizeUndefined();
  tabsAndComments.addComponent(ts);
  tabsAndComments.addComponent(commentArea);
  demoLayout.addComponent(t);
  demoLayout.addComponent(tabsAndComments);
  return demoLayout;
}
