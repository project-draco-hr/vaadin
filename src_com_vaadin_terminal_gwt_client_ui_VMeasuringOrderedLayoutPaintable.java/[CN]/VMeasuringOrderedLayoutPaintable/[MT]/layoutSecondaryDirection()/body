{
  Collection<VPaintableWidget> children=getChildren();
  int maxSize=0;
  for (  VPaintableWidget child : children) {
    Widget widget=child.getWidgetForPaintable();
    int captionAllocation;
    if (!getWidgetForPaintable().isVertical) {
      captionAllocation=getCaptionHeight(child);
      getWidgetForPaintable().getWrapper(widget).getStyle().setPaddingTop(captionAllocation,Unit.PX);
    }
 else {
      captionAllocation=0;
    }
    if (!isRelativeInDirection(child,!getWidgetForPaintable().isVertical)) {
      int childSize=getOuterSizeInDirection(child,!getWidgetForPaintable().isVertical) + captionAllocation;
      maxSize=Math.max(maxSize,childSize);
    }
  }
  double availableSpace;
  Style ownStyle=getWidgetForPaintable().getElement().getStyle();
  if (isUndefinedInDirection(this,!getWidgetForPaintable().isVertical)) {
    ownStyle.setPropertyPx(getSizeProperty(!getWidgetForPaintable().isVertical),getSizeForInnerSize(maxSize,!getWidgetForPaintable().isVertical));
    availableSpace=maxSize;
  }
 else {
    ownStyle.setProperty(getSizeProperty(!getWidgetForPaintable().isVertical),getDefinedSize(!getWidgetForPaintable().isVertical));
    availableSpace=getInnerSizeInDirection(!getWidgetForPaintable().isVertical);
  }
  for (  VPaintableWidget child : children) {
    Widget widget=child.getWidgetForPaintable();
    Element wrapper=getWidgetForPaintable().getWrapper(widget);
    Style wrapperStyle=wrapper.getStyle();
    boolean relative=isRelativeInDirection(child,!getWidgetForPaintable().isVertical);
    int captionHeight=getCaptionHeight(child);
    double allocatedSize=getOuterSizeInDirection(child,!getWidgetForPaintable().isVertical);
    if (!getWidgetForPaintable().isVertical) {
      allocatedSize+=captionHeight;
    }
 else     if (!relative) {
      allocatedSize=Math.max(allocatedSize,getCaptionWidth(child));
    }
    int alignment=getAlignmentInDirection(getWidgetForPaintable().getAlignment(child),!getWidgetForPaintable().isVertical);
    double startPosition=getStartPadding(getWidgetForPaintable().isVertical);
    if (alignment == 0) {
      startPosition+=(availableSpace - allocatedSize) / 2;
    }
 else     if (alignment == 1) {
      startPosition+=(availableSpace - allocatedSize);
    }
    wrapperStyle.setProperty(getStartProperty(!getWidgetForPaintable().isVertical),startPosition,Unit.PX);
    if (relative) {
      double captionReservation=!getWidgetForPaintable().isVertical ? captionHeight : 0;
      wrapperStyle.setProperty(getSizeProperty(!getWidgetForPaintable().isVertical),availableSpace - captionReservation,Unit.PX);
    }
 else {
      wrapperStyle.clearProperty(getSizeProperty(!getWidgetForPaintable().isVertical));
    }
  }
}
