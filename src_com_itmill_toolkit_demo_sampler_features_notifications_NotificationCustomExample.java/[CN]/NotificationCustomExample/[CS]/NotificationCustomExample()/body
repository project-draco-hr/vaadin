{
  setSpacing(true);
  setWidth(null);
  final TextField caption=new TextField("Caption");
  caption.setDescription("Main info; a short caption-only notification is often most effective.");
  caption.setWidth("200px");
  addComponent(caption);
  final RichTextArea description=new RichTextArea();
  description.setCaption("Description");
  description.setDescription("Additional information; try to keep it short.");
  addComponent(description);
  HorizontalLayout horiz=new HorizontalLayout();
  horiz.setSpacing(true);
  addComponent(horiz);
  final NativeSelect position=new NativeSelect("Position");
  position.setNullSelectionAllowed(false);
  horiz.addComponent(position);
  initPositionItems(position);
  final NativeSelect style=new NativeSelect("Style");
  style.setNullSelectionAllowed(false);
  horiz.addComponent(style);
  initTypeItems(style);
  final Slider delay=new Slider("Delay (msec), -1 means click to hide");
  delay.setDescription("Delay before fading<br/>Pull all the way to the left to get -1, which means forever (click to hide).");
  delay.setWidth("100%");
  delay.setMin(Notification.DELAY_FOREVER);
  delay.setMax(10000);
  addComponent(delay);
  Button show=new Button("Show notification",new Button.ClickListener(){
    public void buttonClick(    ClickEvent event){
      Notification n=new Notification((String)caption.getValue(),(String)description.getValue(),(Integer)style.getValue());
      n.setPosition((Integer)position.getValue());
      Double d=(Double)delay.getValue();
      n.setDelayMsec(d.intValue());
      getWindow().showNotification(n);
    }
  }
);
  addComponent(show);
  setComponentAlignment(show,Alignment.MIDDLE_RIGHT);
}
