{
  Roles.getTreeitemRole().setAriaLevelProperty(treeNode.getElement(),level);
  String nodeKey=uidl.getStringAttribute("key");
  treeNode.setText(uidl.getStringAttribute(TreeConstants.ATTRIBUTE_NODE_CAPTION));
  treeNode.key=nodeKey;
  getWidget().registerNode(treeNode);
  if (uidl.hasAttribute("al")) {
    treeNode.actionKeys=uidl.getStringArrayAttribute("al");
  }
  if (uidl.getTag().equals("node")) {
    if (uidl.getChildCount() == 0) {
      treeNode.childNodeContainer.setVisible(false);
    }
 else {
      renderChildNodes(treeNode,(Iterator)uidl.getChildIterator(),level + 1);
      treeNode.childrenLoaded=true;
    }
  }
 else {
    treeNode.addStyleName(TreeNode.CLASSNAME + "-leaf");
  }
  if (uidl.hasAttribute(TreeConstants.ATTRIBUTE_NODE_STYLE)) {
    treeNode.setNodeStyleName(uidl.getStringAttribute(TreeConstants.ATTRIBUTE_NODE_STYLE));
  }
  String description=uidl.getStringAttribute("descr");
  if (description != null) {
    tooltipMap.put(treeNode,new TooltipInfo(description,null,treeNode));
  }
  if (uidl.getBooleanAttribute("expanded") && !treeNode.getState()) {
    treeNode.setState(true,false);
  }
  if (uidl.getBooleanAttribute("selected")) {
    treeNode.setSelected(true);
    getWidget().selectedIds.add(nodeKey);
  }
  String iconUrl=uidl.getStringAttribute(TreeConstants.ATTRIBUTE_NODE_ICON);
  String iconAltText=uidl.getStringAttribute(TreeConstants.ATTRIBUTE_NODE_ICON_ALT);
  treeNode.setIcon(iconUrl,iconAltText);
}
