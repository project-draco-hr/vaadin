{
  System.out.println("UI " + getUIId() + " inited");
  final int sessionHash=getSession().hashCode();
  final String sessionId=request.getWrappedSession().getId();
  log.log("Current session hashcode: " + sessionHash);
  log.log("Current WrappedSession id: " + sessionId);
  String oldHashValue=request.getParameter(OLD_HASH_PARAM);
  if (oldHashValue != null) {
    log.log("Old session hashcode: " + oldHashValue);
    log.log("Same hash as current? " + oldHashValue.equals(Integer.toString(sessionHash)));
  }
  String oldSessionId=request.getParameter(OLD_SESSION_ID_PARAM);
  if (oldSessionId != null) {
    log.log("Old WrappedSession id: " + oldSessionId);
    log.log("Same WrappedSession id? " + oldSessionId.equals(sessionId));
  }
  final String reopenUrl=getPage().getLocation().getPath() + "?" + OLD_HASH_PARAM+ "="+ sessionHash+ "&"+ OLD_SESSION_ID_PARAM+ "="+ sessionId;
  addComponent(log);
  addComponent(new Button("Close VaadinServiceSession and redirect elsewhere",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      getPage().setLocation("/statictestfiles/static.html");
      getSession().close();
    }
  }
));
  addComponent(new Button("Close VaadinServiceSession and reopen page",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      getPage().setLocation(reopenUrl);
      getSession().close();
    }
  }
));
  addComponent(new Button("Just close VaadinSession",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      getSession().close();
    }
  }
));
  addComponent(new Button("Just close HttpSession",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      getSession().getSession().invalidate();
    }
  }
));
  addComponent(new Button("Invalidate HttpSession and reopen page",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      VaadinService.getCurrentRequest().getWrappedSession().invalidate();
      getPage().setLocation(reopenUrl);
    }
  }
));
  addComponent(new Button("Invalidate HttpSession and redirect elsewhere",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      VaadinService.getCurrentRequest().getWrappedSession().invalidate();
      getPage().setLocation("/statictestfiles/static.html");
    }
  }
));
  addComponent(new Button("Invalidate HttpSession in a background thread",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      final HttpSession session=((WrappedHttpSession)VaadinService.getCurrentRequest().getWrappedSession()).getHttpSession();
      Thread t=new Thread(new Runnable(){
        @Override public void run(){
          try {
            Thread.sleep(1000);
          }
 catch (          InterruptedException e) {
            e.printStackTrace();
          }
          System.out.println("Invalidating session from thread " + session.getId());
          session.invalidate();
          System.out.println("Invalidated session from thread " + session.getId());
        }
      }
);
      t.start();
    }
  }
));
}
