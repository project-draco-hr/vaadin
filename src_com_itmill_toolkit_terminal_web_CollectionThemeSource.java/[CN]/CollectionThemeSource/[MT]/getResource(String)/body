{
  int delim=resourceId.indexOf("/");
  String subResourceId="";
  String themeName="";
  if (delim >= 0 && delim < resourceId.length() - 1) {
    subResourceId=resourceId.substring(delim + 1);
    themeName=resourceId.substring(0,delim);
  }
  List themes=new LinkedList();
  while (themeName != null && themeName.length() > 0) {
    Theme t=this.getThemeByName(themeName);
    if (t != null)     themes.add(themeName);
    themeName=t.getParent();
  }
  for (Iterator ti=themes.iterator(); ti.hasNext(); ) {
    String name=(String)ti.next();
    String resource=name + "/" + subResourceId;
    for (Iterator i=this.sources.iterator(); i.hasNext(); ) {
      try {
        InputStream in=((ThemeSource)i.next()).getResource(resource);
        if (in != null)         return in;
      }
 catch (      ThemeException e) {
      }
    }
  }
  throw new ThemeException("Theme resource not found:" + subResourceId + " in themes "+ themes);
}
