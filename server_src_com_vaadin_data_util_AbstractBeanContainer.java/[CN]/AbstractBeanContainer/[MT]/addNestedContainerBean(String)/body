{
  Class<?> propertyType=getType(propertyId);
  LinkedHashMap<String,VaadinPropertyDescriptor<Object>> pds=BeanItem.getPropertyDescriptors((Class<Object>)propertyType);
  for (  String subPropertyId : pds.keySet()) {
    String qualifiedPropertyId=propertyId + "." + subPropertyId;
    NestedPropertyDescriptor<BEANTYPE> pd=new NestedPropertyDescriptor<BEANTYPE>(qualifiedPropertyId,(Class<BEANTYPE>)type);
    model.put(qualifiedPropertyId,pd);
    model.remove(propertyId);
    for (    BeanItem<BEANTYPE> item : itemIdToItem.values()) {
      item.addItemProperty(qualifiedPropertyId,pd.createProperty(item.getBean()));
      item.removeItemProperty(propertyId);
    }
  }
  fireContainerPropertySetChange();
}
