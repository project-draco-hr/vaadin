{
  String name;
  LexicalUnit exp;
  name=property();
  jj_consume_token(COLON);
  label_152:   while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
      ;
    break;
default :
  jj_la1[221]=jj_gen;
break label_152;
}
jj_consume_token(S);
}
jj_consume_token(LBRACE);
label_153: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[222]=jj_gen;
break label_153;
}
jj_consume_token(S);
}
documentHandler.startNestedProperties(name);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case INTERPOLATION:
case IDENT:
declaration();
break;
default :
jj_la1[223]=jj_gen;
;
}
label_154: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case SEMICOLON:
;
break;
default :
jj_la1[224]=jj_gen;
break label_154;
}
jj_consume_token(SEMICOLON);
label_155: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[225]=jj_gen;
break label_155;
}
jj_consume_token(S);
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case INTERPOLATION:
case IDENT:
declaration();
break;
default :
jj_la1[226]=jj_gen;
;
}
}
jj_consume_token(RBRACE);
documentHandler.endNestedProperties(name);
label_156: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[227]=jj_gen;
break label_156;
}
jj_consume_token(S);
}
}
