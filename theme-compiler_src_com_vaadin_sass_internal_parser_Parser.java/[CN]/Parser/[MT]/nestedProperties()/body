{
  String name;
  LexicalUnit exp;
  name=property();
  jj_consume_token(COLON);
  label_144:   while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
      ;
    break;
default :
  jj_la1[205]=jj_gen;
break label_144;
}
jj_consume_token(S);
}
jj_consume_token(LBRACE);
label_145: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[206]=jj_gen;
break label_145;
}
jj_consume_token(S);
}
documentHandler.startNestedProperties(name);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case INTERPOLATION:
case IDENT:
declaration();
break;
default :
jj_la1[207]=jj_gen;
;
}
label_146: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case SEMICOLON:
;
break;
default :
jj_la1[208]=jj_gen;
break label_146;
}
jj_consume_token(SEMICOLON);
label_147: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[209]=jj_gen;
break label_147;
}
jj_consume_token(S);
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case INTERPOLATION:
case IDENT:
declaration();
break;
default :
jj_la1[210]=jj_gen;
;
}
}
jj_consume_token(RBRACE);
documentHandler.endNestedProperties(name);
label_148: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[211]=jj_gen;
break label_148;
}
jj_consume_token(S);
}
}
