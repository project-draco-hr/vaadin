{
  String name;
  LexicalUnit exp;
  name=property();
  jj_consume_token(COLON);
  label_140:   while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
      ;
    break;
default :
  jj_la1[201]=jj_gen;
break label_140;
}
jj_consume_token(S);
}
jj_consume_token(LBRACE);
label_141: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[202]=jj_gen;
break label_141;
}
jj_consume_token(S);
}
documentHandler.startNestedProperties(name);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case INTERPOLATION:
case IDENT:
declaration();
break;
default :
jj_la1[203]=jj_gen;
;
}
label_142: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case SEMICOLON:
;
break;
default :
jj_la1[204]=jj_gen;
break label_142;
}
jj_consume_token(SEMICOLON);
label_143: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[205]=jj_gen;
break label_143;
}
jj_consume_token(S);
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case INTERPOLATION:
case IDENT:
declaration();
break;
default :
jj_la1[206]=jj_gen;
;
}
}
jj_consume_token(RBRACE);
documentHandler.endNestedProperties(name);
label_144: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[207]=jj_gen;
break label_144;
}
jj_consume_token(S);
}
}
