{
  Token n;
  String name="";
  String value="";
  n=jj_consume_token(MICROSOFT_RULE);
  label_43:   while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
      ;
    break;
default :
  jj_la1[63]=jj_gen;
break label_43;
}
jj_consume_token(S);
}
name=n.image;
jj_consume_token(COLON);
label_44: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case IDENT:
n=jj_consume_token(IDENT);
value+=n.image;
break;
case NUMBER:
n=jj_consume_token(NUMBER);
value+=n.image;
break;
case STRING:
n=jj_consume_token(STRING);
value+=n.image;
break;
case COMMA:
n=jj_consume_token(COMMA);
value+=n.image;
break;
case INTERPOLATION:
n=jj_consume_token(INTERPOLATION);
value+=n.image;
break;
case COLON:
n=jj_consume_token(COLON);
value+=n.image;
break;
case FUNCTION:
n=jj_consume_token(FUNCTION);
value+=n.image;
break;
case RPARAN:
n=jj_consume_token(RPARAN);
value+=n.image;
break;
case EQ:
n=jj_consume_token(EQ);
value+=n.image;
break;
case DOT:
n=jj_consume_token(DOT);
value+=n.image;
break;
case S:
n=jj_consume_token(S);
if (value.lastIndexOf(' ') != value.length() - 1) {
value+=n.image;
}
break;
default :
jj_la1[64]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
case EQ:
case COMMA:
case DOT:
case RPARAN:
case COLON:
case INTERPOLATION:
case STRING:
case IDENT:
case NUMBER:
case FUNCTION:
;
break;
default :
jj_la1[65]=jj_gen;
break label_44;
}
}
jj_consume_token(SEMICOLON);
label_45: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[66]=jj_gen;
break label_45;
}
jj_consume_token(S);
}
documentHandler.microsoftDirective(name,value);
}
