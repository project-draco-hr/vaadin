{
  if (source.getCharacterStream() != null) {
    return new Generic_CharStream(source.getCharacterStream(),1,1);
  }
 else   if (source.getByteStream() == null) {
    try {
      source.setByteStream(new URL(source.getURI()).openStream());
    }
 catch (    Exception e) {
      try {
        source.setByteStream(new FileInputStream(source.getURI()));
      }
 catch (      IOException ex) {
        throw new CSSException("invalid url ?");
      }
    }
  }
  String encoding=source.getEncoding();
  InputStream input=source.getByteStream();
  if (!input.markSupported()) {
    input=new BufferedInputStream(input);
    source.setByteStream(input);
  }
  input.mark(100);
  if (encoding == null) {
    encoding="ASCII";
    char c=' ';
    c=(char)input.read();
    if (c == '@') {
      int size=100;
      byte[] buf=new byte[size];
      input.read(buf,0,7);
      String keyword=new String(buf,0,7);
      if (keyword.equals("charset")) {
        while ((c=(char)input.read()) == ' ') {
        }
        char endChar=c;
        int i=0;
        if ((endChar != '"') && (endChar != '\u005c'')) {
          throw new CSSException("invalid charset declaration");
        }
        while ((c=(char)input.read()) != endChar) {
          buf[i++]=(byte)c;
          if (i == size) {
            byte[] old=buf;
            buf=new byte[size + 100];
            System.arraycopy(old,0,buf,0,size);
            size+=100;
          }
        }
        while ((c=(char)input.read()) == ' ') {
        }
        if (c != ';') {
          throw new CSSException("invalid charset declaration: " + "missing semi colon");
        }
        encoding=new String(buf,0,i);
        if (source.getEncoding() != null) {
          if (!encoding.equals(source.getEncoding())) {
            throw new CSSException("invalid encoding information.");
          }
        }
      }
    }
  }
  source.setEncoding(encoding);
  source.setCharacterStream(new InputStreamReader(source.getByteStream(),Encoding.getJavaEncoding(encoding)));
  input.reset();
  return new Generic_CharStream(source.getCharacterStream(),1,1);
}
