{
  boolean start=false;
  ArrayList<String> l=null;
  Token save;
  Locator loc;
  try {
    l=selectorList();
    save=token;
    jj_consume_token(LBRACE);
    label_42:     while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
        ;
      break;
default :
    jj_la1[59]=jj_gen;
  break label_42;
}
jj_consume_token(S);
}
start=true;
documentHandler.startSelector(l);
label_43: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case ANY:
case PARENT:
case DOT:
case COLON:
case INTERPOLATION:
case INCLUDE_SYM:
case EACH_SYM:
case IF_SYM:
case EXTEND_SYM:
case MICROSOFT_RULE:
case IDENT:
case VARIABLE:
case HASH:
case MEDIA_SYM:
;
break;
default :
jj_la1[60]=jj_gen;
break label_43;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case IF_SYM:
ifDirective();
break;
default :
jj_la1[62]=jj_gen;
if (jj_2_2(5)) {
listModifyDirective();
}
 else {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case INCLUDE_SYM:
includeDirective();
break;
case MEDIA_SYM:
media();
break;
case EXTEND_SYM:
extendDirective();
break;
case EACH_SYM:
eachDirective();
break;
case VARIABLE:
variable();
break;
default :
jj_la1[63]=jj_gen;
if (jj_2_3(3)) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case MICROSOFT_RULE:
microsoftExtension();
break;
case IDENT:
declarationOrNestedProperties();
break;
default :
jj_la1[61]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
 else {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case ANY:
case PARENT:
case DOT:
case COLON:
case INTERPOLATION:
case IDENT:
case HASH:
styleRule();
break;
default :
jj_la1[64]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
}
}
}
}
jj_consume_token(RBRACE);
label_44: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[65]=jj_gen;
break label_44;
}
jj_consume_token(S);
}
}
 catch (ThrowedParseException e) {
if (errorHandler != null) {
LocatorImpl li=new LocatorImpl(this,e.e.currentToken.next.beginLine,e.e.currentToken.next.beginColumn - 1);
reportError(li,e.e);
}
}
catch (ParseException e) {
reportError(getLocator(),e);
skipStatement();
}
catch (TokenMgrError e) {
reportWarningSkipText(getLocator(),skipStatement());
}
 finally {
if (start) {
documentHandler.endSelector();
}
}
}
