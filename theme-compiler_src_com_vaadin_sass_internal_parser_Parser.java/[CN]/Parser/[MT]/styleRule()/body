{
  boolean start=false;
  ArrayList<String> l=null;
  Token save;
  Locator loc;
  try {
    l=selectorList();
    save=token;
    jj_consume_token(LBRACE);
    label_53:     while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
        ;
      break;
default :
    jj_la1[73]=jj_gen;
  break label_53;
}
jj_consume_token(S);
}
start=true;
documentHandler.startSelector(l);
label_54: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case ANY:
case PARENT:
case DOT:
case COLON:
case INTERPOLATION:
case INCLUDE_SYM:
case DEBUG_SYM:
case WARN_SYM:
case EACH_SYM:
case IF_SYM:
case EXTEND_SYM:
case MICROSOFT_RULE:
case IDENT:
case VARIABLE:
case HASH:
case MEDIA_SYM:
case KEY_FRAME_SYM:
case CONTAINS:
;
break;
default :
jj_la1[74]=jj_gen;
break label_54;
}
if (jj_2_3(5)) {
ifContentStatement();
}
 else {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case EACH_SYM:
case IF_SYM:
controlDirective();
break;
case MICROSOFT_RULE:
microsoftExtension();
break;
default :
jj_la1[75]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
}
jj_consume_token(RBRACE);
label_55: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[76]=jj_gen;
break label_55;
}
jj_consume_token(S);
}
}
 catch (ThrowedParseException e) {
if (errorHandler != null) {
LocatorImpl li=new LocatorImpl(this,e.e.currentToken.next.beginLine,e.e.currentToken.next.beginColumn - 1);
reportError(li,e.e);
}
}
catch (ParseException e) {
reportError(getLocator(),e);
skipStatement();
}
catch (TokenMgrError e) {
reportWarningSkipText(getLocator(),skipStatement());
}
 finally {
if (start) {
documentHandler.endSelector();
}
}
}
