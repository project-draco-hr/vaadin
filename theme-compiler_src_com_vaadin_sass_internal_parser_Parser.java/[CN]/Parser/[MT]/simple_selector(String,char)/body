{
  String simple_current=null;
  String cond=null;
  pseudoElt=null;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case ANY:
case PARENT:
case INTERPOLATION:
case IDENT:
    simple_current=element_name();
  label_49:   while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case DOT:
case COLON:
case HASH:
      ;
    break;
default :
  jj_la1[68]=jj_gen;
break label_49;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case HASH:
cond=hash(cond);
break;
case DOT:
cond=_class(cond);
break;
case LBRACKET:
cond=attrib(cond);
break;
case COLON:
cond=pseudo(cond);
break;
default :
jj_la1[69]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
break;
case HASH:
cond=hash(cond);
label_50: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case DOT:
case COLON:
;
break;
default :
jj_la1[70]=jj_gen;
break label_50;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case DOT:
cond=_class(cond);
break;
case LBRACKET:
cond=attrib(cond);
break;
case COLON:
cond=pseudo(cond);
break;
default :
jj_la1[71]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
break;
case DOT:
cond=_class(cond);
label_51: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case DOT:
case COLON:
case HASH:
;
break;
default :
jj_la1[72]=jj_gen;
break label_51;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case HASH:
cond=hash(cond);
break;
case DOT:
cond=_class(cond);
break;
case LBRACKET:
cond=attrib(cond);
break;
case COLON:
cond=pseudo(cond);
break;
default :
jj_la1[73]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
break;
case COLON:
cond=pseudo(cond);
label_52: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case DOT:
case COLON:
case HASH:
;
break;
default :
jj_la1[74]=jj_gen;
break label_52;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case HASH:
cond=hash(cond);
break;
case DOT:
cond=_class(cond);
break;
case LBRACKET:
cond=attrib(cond);
break;
case COLON:
cond=pseudo(cond);
break;
default :
jj_la1[75]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
break;
case LBRACKET:
cond=attrib(cond);
label_53: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case DOT:
case COLON:
case HASH:
;
break;
default :
jj_la1[76]=jj_gen;
break label_53;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case HASH:
cond=hash(cond);
break;
case DOT:
cond=_class(cond);
break;
case LBRACKET:
cond=attrib(cond);
break;
case COLON:
cond=pseudo(cond);
break;
default :
jj_la1[77]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
break;
default :
jj_la1[78]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
if (simple_current == null) {
simple_current="";
}
if (cond != null) {
simple_current=simple_current + cond;
}
if (selector != null) {
switch (comb) {
case ' ':
selector=selector + comb + simple_current;
break;
case '+':
case '>':
case '~':
selector=selector + " " + comb+ " "+ simple_current;
break;
default :
{
if (true) throw new ParseException("invalid state. send a bug report");
}
}
}
 else {
selector=simple_current;
}
if (pseudoElt != null) {
selector=selector + pseudoElt;
}
{
if (true) return selector;
}
throw new Error("Missing return statement in function");
}
