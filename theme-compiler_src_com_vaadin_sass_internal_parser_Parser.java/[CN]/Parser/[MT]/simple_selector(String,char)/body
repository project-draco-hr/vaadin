{
  String simple_current=null;
  String cond=null;
  pseudoElt=null;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case ANY:
case PARENT:
case INTERPOLATION:
case IDENT:
    simple_current=element_name();
  label_60:   while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case DOT:
case COLON:
case HASH:
      ;
    break;
default :
  jj_la1[80]=jj_gen;
break label_60;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case HASH:
cond=hash(cond);
break;
case DOT:
cond=_class(cond);
break;
case LBRACKET:
cond=attrib(cond);
break;
case COLON:
cond=pseudo(cond);
break;
default :
jj_la1[81]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
break;
case HASH:
cond=hash(cond);
label_61: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case DOT:
case COLON:
;
break;
default :
jj_la1[82]=jj_gen;
break label_61;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case DOT:
cond=_class(cond);
break;
case LBRACKET:
cond=attrib(cond);
break;
case COLON:
cond=pseudo(cond);
break;
default :
jj_la1[83]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
break;
case DOT:
cond=_class(cond);
label_62: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case DOT:
case COLON:
case HASH:
;
break;
default :
jj_la1[84]=jj_gen;
break label_62;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case HASH:
cond=hash(cond);
break;
case DOT:
cond=_class(cond);
break;
case LBRACKET:
cond=attrib(cond);
break;
case COLON:
cond=pseudo(cond);
break;
default :
jj_la1[85]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
break;
case COLON:
cond=pseudo(cond);
label_63: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case DOT:
case COLON:
case HASH:
;
break;
default :
jj_la1[86]=jj_gen;
break label_63;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case HASH:
cond=hash(cond);
break;
case DOT:
cond=_class(cond);
break;
case LBRACKET:
cond=attrib(cond);
break;
case COLON:
cond=pseudo(cond);
break;
default :
jj_la1[87]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
break;
case LBRACKET:
cond=attrib(cond);
label_64: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case DOT:
case COLON:
case HASH:
;
break;
default :
jj_la1[88]=jj_gen;
break label_64;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case HASH:
cond=hash(cond);
break;
case DOT:
cond=_class(cond);
break;
case LBRACKET:
cond=attrib(cond);
break;
case COLON:
cond=pseudo(cond);
break;
default :
jj_la1[89]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
break;
default :
jj_la1[90]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
if (simple_current == null) {
simple_current="";
}
if (cond != null) {
simple_current=simple_current + cond;
}
if (selector != null) {
switch (comb) {
case ' ':
selector=selector + comb + simple_current;
break;
case '+':
case '>':
case '~':
selector=selector + " " + comb+ " "+ simple_current;
break;
default :
{
if (true) {
throw new ParseException("invalid state. send a bug report");
}
}
}
}
 else {
selector=simple_current;
}
if (pseudoElt != null) {
selector=selector + pseudoElt;
}
{
if (true) {
return selector;
}
}
throw new Error("Missing return statement in function");
}
