{
  String var;
  String from;
  String to;
  boolean exclusive;
  String body;
  Token tok;
  var=variableName();
  int[] toThrough={TO,THROUGH};
  from=skipStatementUntil(toThrough);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TO:
    tok=jj_consume_token(TO);
  exclusive=true;
break;
case THROUGH:
tok=jj_consume_token(THROUGH);
exclusive=false;
break;
default :
jj_la1[197]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
to=skipStatementUntilLeftBrace();
label_137: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[198]=jj_gen;
break label_137;
}
jj_consume_token(S);
}
body=skipStatement();
{
if (true) {
return documentHandler.forDirective(var,from,to,exclusive,body);
}
}
throw new Error("Missing return statement in function");
}
