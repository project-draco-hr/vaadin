{
  if (animateIn && getStyleName().contains(ADDITIONAL_CLASSNAME_ANIMATE_IN)) {
    AnimationUtil.addAnimationEndListener(getElement(),new AnimationEndListener(){
      @Override public void onAnimationEnd(      NativeEvent event){
        if (AnimationUtil.getAnimationName(event).contains(ADDITIONAL_CLASSNAME_ANIMATE_IN)) {
          reallyHide(autoClosed);
        }
      }
    }
);
  }
 else {
    addStyleDependentName(ADDITIONAL_CLASSNAME_ANIMATE_OUT);
    ComputedStyle cs=new ComputedStyle(getElement());
    String animationName=AnimationUtil.getAnimationName(cs);
    if (animationName == null) {
      animationName="";
    }
    if (animateOut && animationName.contains(ADDITIONAL_CLASSNAME_ANIMATE_OUT)) {
      setAnimationEnabled(false);
      AnimationUtil.addAnimationEndListener(getElement(),new AnimationEndListener(){
        @Override public void onAnimationEnd(        NativeEvent event){
          String animationName=AnimationUtil.getAnimationName(event);
          if (animationName.contains(ADDITIONAL_CLASSNAME_ANIMATE_OUT)) {
            AnimationUtil.removeAllAnimationEndListeners(getElement());
            removeStyleDependentName(ADDITIONAL_CLASSNAME_ANIMATE_IN);
            removeStyleDependentName(ADDITIONAL_CLASSNAME_ANIMATE_OUT);
            reallyHide(autoClosed);
          }
        }
      }
);
      Overlay.this.setPreviewingAllNativeEvents(false);
    }
 else {
      removeStyleDependentName(ADDITIONAL_CLASSNAME_ANIMATE_OUT);
      reallyHide(autoClosed);
    }
  }
}
