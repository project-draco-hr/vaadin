{
  if (serveStaticResources(request,response)) {
    return;
  }
  Application application=null;
  RequestType requestType=getRequestType(request);
  try {
    if (requestType == RequestType.UIDL && request.getParameterMap().containsKey(ApplicationConnection.PARAM_UNLOADBURST) && request.getContentLength() < 1 && getExistingApplication(request,false) == null) {
      redirectToApplication(request,response);
      return;
    }
    application=findApplicationInstance(request,requestType);
    if (application == null) {
      return;
    }
    WebApplicationContext webApplicationContext=WebApplicationContext.getApplicationContext(request.getSession());
    CommunicationManager applicationManager=webApplicationContext.getApplicationManager(application,this);
    webApplicationContext.getBrowser().updateBrowserProperties(request);
    startApplication(request,application,webApplicationContext);
    webApplicationContext.startTransaction(application,request);
    if (requestType == RequestType.FILE_UPLOAD) {
      applicationManager.handleFileUpload(request,response);
      return;
    }
 else     if (requestType == RequestType.UIDL) {
      applicationManager.handleUidlRequest(request,response,this);
      return;
    }
    if (!application.isRunning()) {
      endApplication(request,response,application);
      return;
    }
    Window window=getApplicationWindow(request,applicationManager,application);
    if (window == null) {
      throw new ServletException(ERROR_NO_WINDOW_FOUND);
    }
    if (window.getTerminal() == null) {
      window.setTerminal(webApplicationContext.getBrowser());
    }
    final Map parameters=request.getParameterMap();
    if (window != null && parameters != null) {
      window.handleParameters(parameters);
    }
    if (handleURI(applicationManager,window,request,response)) {
      return;
    }
    writeAjaxPage(request,response,window,application);
  }
 catch (  final SessionExpired e) {
    handleServiceSessionExpired(request,response);
  }
catch (  final GeneralSecurityException e) {
    handleServiceSecurityException(request,response);
  }
catch (  final Throwable e) {
    handleServiceException(request,response,application,e);
  }
 finally {
    if (application != null) {
      ((WebApplicationContext)application.getContext()).endTransaction(application,request);
    }
  }
}
