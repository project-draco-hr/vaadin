{
  this.client=client;
  if (client.updateComponent(this,uidl,false)) {
    return;
  }
  int i=0;
  for (final Iterator it=uidl.getChildIterator(); it.hasNext(); i++) {
    prepareCell(i,1);
    final UIDL childUidl=(UIDL)it.next();
    final Paintable p=client.getPaintable(childUidl);
    Caption caption=(Caption)componentToCaption.get(p);
    if (caption == null) {
      caption=new Caption(p,client);
      componentToCaption.put(p,caption);
    }
    ErrorFlag error=(ErrorFlag)componentToError.get(p);
    if (error == null) {
      error=new ErrorFlag();
      componentToError.put(p,error);
    }
    final Paintable oldComponent=(Paintable)getWidget(i,1);
    prepareCell(i,2);
    if (oldComponent == null) {
      setWidget(i,2,(Widget)p);
    }
 else     if (oldComponent != p) {
      client.unregisterPaintable(oldComponent);
      setWidget(i,2,(Widget)p);
    }
    getCellFormatter().setStyleName(i,0,"i-formlayout-captioncell");
    setWidget(i,0,caption);
    getCellFormatter().setStyleName(i,1,"i-formlayout-errorcell");
    setWidget(i,1,error);
    p.updateFromUIDL(childUidl,client);
  }
  while (getRowCount() > i) {
    final Paintable p=(Paintable)getWidget(i,1);
    client.unregisterPaintable(p);
    componentToCaption.remove(p);
    removeRow(i);
  }
}
