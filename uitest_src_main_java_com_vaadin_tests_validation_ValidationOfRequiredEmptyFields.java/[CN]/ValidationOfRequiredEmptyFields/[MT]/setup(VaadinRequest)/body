{
  requiredInput=new CheckBox("Field required");
  requiredInput.setImmediate(true);
  requiredInput.addValueChangeListener(new ValueChangeListener(){
    @Override public void valueChange(    ValueChangeEvent event){
      tf.setRequired(requiredInput.getValue());
    }
  }
);
  requiredErrorInput=new TextField("Required error message");
  requiredErrorInput.setImmediate(true);
  requiredErrorInput.addValueChangeListener(new ValueChangeListener(){
    @Override public void valueChange(    ValueChangeEvent event){
      tf.setRequiredError(requiredErrorInput.getValue());
    }
  }
);
  integerValidatorInput=new CheckBox("Integer validator");
  integerValidatorInput.setImmediate(true);
  integerValidatorInput.addValueChangeListener(new ValueChangeListener(){
    @Override public void valueChange(    ValueChangeEvent event){
      if (integerValidatorInput.getValue()) {
        tf.addValidator(integerValidator);
      }
 else {
        tf.removeValidator(integerValidator);
      }
    }
  }
);
  stringLengthValidatorInput=new CheckBox("String length validator");
  stringLengthValidatorInput.setImmediate(true);
  stringLengthValidatorInput.addValueChangeListener(new ValueChangeListener(){
    @Override public void valueChange(    ValueChangeEvent event){
      if (stringLengthValidatorInput.getValue()) {
        tf.addValidator(stringLengthValidator);
      }
 else {
        tf.removeValidator(stringLengthValidator);
      }
    }
  }
);
  tf=new TextField();
  tf.setImmediate(true);
  requiredInput.setValue(false);
  requiredErrorInput.setValue("");
  integerValidatorInput.setValue(false);
  stringLengthValidatorInput.setValue(false);
  addComponent(requiredInput);
  addComponent(requiredErrorInput);
  addComponent(integerValidatorInput);
  addComponent(stringLengthValidatorInput);
  addComponent(tf);
}
