{
  final double timeDiff=timestamp - prevTimestamp;
  prevTimestamp=timestamp;
  reboundScrollArea(timeDiff);
  pixelsToScroll+=scrollSpeed * (timeDiff / 1000.0d);
  final int intPixelsToScroll=(int)pixelsToScroll;
  pixelsToScroll-=intPixelsToScroll;
  if (intPixelsToScroll != 0) {
    grid.setScrollTop(grid.getScrollTop() + intPixelsToScroll);
  }
  @SuppressWarnings("hiding") int logicalRow=getLogicalRowIndex(Util.getElementFromPoint(pageX,pageY));
  if (logicalRow != -1 && logicalRow != this.logicalRow) {
    this.logicalRow=logicalRow;
    setSelected(logicalRow,selectionPaint);
    if (remoteDataSource != null && batchedSelectionModel != null) {
      Collection<T> pinneds=batchedSelectionModel.getSelectedRowsBatch();
      pinneds.addAll(batchedSelectionModel.getDeselectedRowsBatch());
      remoteDataSource.transactionPin(pinneds);
    }
  }
  reschedule();
}
