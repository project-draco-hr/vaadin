{
  Profiler.enter("AbstractComponentConnector.onStateChanged");
  Profiler.enter("AbstractComponentConnector.onStateChanged update id");
  if (stateChangeEvent.hasPropertyChanged("id")) {
    if (getState().id != null) {
      getWidget().getElement().setId(getState().id);
    }
 else     if (!initialStateEvent) {
      getWidget().getElement().removeAttribute("id");
    }
  }
  Profiler.leave("AbstractComponentConnector.onStateChanged update id");
  Profiler.enter("AbstractComponentConnector.onStateChanged update tab index");
  if (getState() instanceof TabIndexState) {
    if (getWidget() instanceof Focusable) {
      ((Focusable)getWidget()).setTabIndex(((TabIndexState)getState()).tabIndex);
    }
 else {
    }
  }
  Profiler.leave("AbstractComponentConnector.onStateChanged update tab index");
  super.onStateChanged(stateChangeEvent);
  updateWidgetStyleNames();
  updateComponentSize();
  Profiler.enter("AbstractComponentContainer.onStateChanged check tooltip");
  if (!tooltipListenersAttached && hasTooltip()) {
    tooltipListenersAttached=true;
    getConnection().getVTooltip().connectHandlersToWidget(getWidget());
  }
  Profiler.leave("AbstractComponentContainer.onStateChanged check tooltip");
  initialStateEvent=false;
  Profiler.leave("AbstractComponentConnector.onStateChanged");
}
