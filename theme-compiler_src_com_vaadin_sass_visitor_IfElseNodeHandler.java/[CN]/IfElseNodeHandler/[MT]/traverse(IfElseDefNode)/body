{
  for (  final Node child : node.getChildren()) {
    if (child instanceof IfNode) {
      try {
        String expression=((IfElseNode)child).getExpression();
        expression=replaceStrings(expression);
        Expression e=evaluator.createExpression(expression);
        try {
          Object eval=e.evaluate(null);
          Boolean result=false;
          if (eval instanceof Boolean) {
            result=(Boolean)eval;
          }
 else           if (eval instanceof String) {
            result=Boolean.valueOf((String)eval);
          }
          if (result) {
            replaceDefNodeWithCorrectChild(node,node.getParentNode(),child);
            break;
          }
        }
 catch (        ClassCastException ex) {
          throw new ParseException("Invalid @if/@else in scss file, not a boolean expression : " + child.toString());
        }
catch (        NullPointerException ex) {
          throw new ParseException("Invalid @if/@else in scss file, not a boolean expression : " + child.toString());
        }
      }
 catch (      JexlException e) {
        throw new ParseException("Invalid @if/@else in scss file for " + child.toString());
      }
    }
 else {
      if (!(child instanceof ElseNode) && node.getChildren().indexOf(child) == node.getChildren().size() - 1) {
        throw new ParseException("Invalid @if/@else in scss file for " + node);
      }
 else {
        replaceDefNodeWithCorrectChild(node,node.getParentNode(),child);
        break;
      }
    }
  }
  node.getParentNode().removeChild(node);
}
