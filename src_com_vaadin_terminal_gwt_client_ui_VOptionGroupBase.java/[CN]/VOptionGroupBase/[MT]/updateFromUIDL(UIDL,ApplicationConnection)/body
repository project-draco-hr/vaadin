{
  this.client=client;
  id=uidl.getId();
  if (client.updateComponent(this,uidl,true)) {
    return;
  }
  selectedKeys=uidl.getStringArrayVariableAsSet("selected");
  readonly=uidl.getBooleanAttribute("readonly");
  disabled=uidl.getBooleanAttribute("disabled");
  multiselect="multi".equals(uidl.getStringAttribute("selectmode"));
  immediate=uidl.getBooleanAttribute("immediate");
  nullSelectionAllowed=uidl.getBooleanAttribute("nullselect");
  nullSelectionItemAvailable=uidl.getBooleanAttribute("nullselectitem");
  if (uidl.hasAttribute("cols")) {
    cols=uidl.getIntAttribute("cols");
  }
  if (uidl.hasAttribute("rows")) {
    rows=uidl.getIntAttribute("rows");
  }
  final UIDL ops=uidl.getChildUIDL(0);
  if (getColumns() > 0) {
    container.setWidth(getColumns() + "em");
    if (container != optionsContainer) {
      optionsContainer.setWidth("100%");
    }
  }
  buildOptions(ops);
  if (uidl.getBooleanAttribute("allownewitem")) {
    if (newItemField == null) {
      newItemButton=new VButton();
      newItemButton.setText("+");
      newItemButton.addClickListener(this);
      newItemField=new VTextField();
      newItemField.addKeyboardListener(this);
    }
    newItemField.setEnabled(!disabled && !readonly);
    newItemButton.setEnabled(!disabled && !readonly);
    if (newItemField == null || newItemField.getParent() != container) {
      container.add(newItemField);
      container.add(newItemButton);
      final int w=container.getOffsetWidth() - newItemButton.getOffsetWidth();
      newItemField.setWidth(Math.max(w,0) + "px");
    }
  }
 else   if (newItemField != null) {
    container.remove(newItemField);
    container.remove(newItemButton);
  }
  setTabIndex(uidl.hasAttribute("tabindex") ? uidl.getIntAttribute("tabindex") : 0);
}
