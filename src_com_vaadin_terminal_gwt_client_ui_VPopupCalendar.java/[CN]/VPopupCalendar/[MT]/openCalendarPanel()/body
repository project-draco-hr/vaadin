{
  if (!open && !readonly) {
    open=true;
    final Date start=new Date();
    if (getCurrentDate() != null) {
      calendar.setDate((Date)getCurrentDate().clone());
    }
 else {
      calendar.setDate(new Date());
    }
    popup.setWidth("");
    popup.setHeight("");
    popup.setPopupPositionAndShow(new PositionCallback(){
      public void setPosition(      int offsetWidth,      int offsetHeight){
        final int w=offsetWidth;
        final int h=offsetHeight;
        final int browserWindowWidth=Window.getClientWidth() + Window.getScrollLeft();
        final int browserWindowHeight=Window.getClientHeight() + Window.getScrollTop();
        int t=calendarToggle.getAbsoluteTop();
        int l=calendarToggle.getAbsoluteLeft();
        int extraSpace=30;
        boolean overflowRight=false;
        if (l + +w + extraSpace > browserWindowWidth) {
          overflowRight=true;
          l=browserWindowWidth - w - extraSpace;
        }
        if (t + h + calendarToggle.getOffsetHeight()+ 30 > browserWindowHeight) {
          t=browserWindowHeight - h - calendarToggle.getOffsetHeight()- 30;
          if (!overflowRight) {
            l+=calendarToggle.getOffsetWidth();
          }
        }
        popup.setWidth(w + "px");
        popup.setHeight(h + "px");
        popup.setPopupPosition(l,t + calendarToggle.getOffsetHeight() + 2);
        Date end=new Date();
        ApplicationConnection.getConsole().log("Rendering VCalendar took " + (end.getTime() - start.getTime() + "ms"));
        Timer focusTimer=new Timer(){
          @Override public void run(){
            setFocus(true);
          }
        }
;
        focusTimer.schedule(100);
      }
    }
);
  }
 else {
    ApplicationConnection.getConsole().error("Cannot reopen popup, it is already open!");
  }
}
