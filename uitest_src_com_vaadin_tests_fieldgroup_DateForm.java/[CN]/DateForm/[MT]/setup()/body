{
  addComponent(log);
  final FieldGroup fieldGroup=new BeanFieldGroup<DateObject>(DateObject.class);
  fieldGroup.setBuffered(true);
  fieldGroup.buildAndBindMemberFields(this);
  textField.setWidth("20em");
  addComponent(dateField);
  addComponent(popupDateField);
  addComponent(inlineDateField);
  addComponent(textField);
  Button commitButton=new Button("Commit",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      String msg="Commit succesful";
      try {
        fieldGroup.commit();
      }
 catch (      CommitException e) {
        msg="Commit failed: " + e.getMessage();
      }
      Notification.show(msg);
      log.log(msg);
    }
  }
);
  Button discardButton=new Button("Discard",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      fieldGroup.discard();
      log.log("Discarded changes");
    }
  }
);
  Button showBean=new Button("Show bean values",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      log.log(getPerson(fieldGroup).toString());
    }
  }
);
  addComponent(commitButton);
  addComponent(discardButton);
  addComponent(showBean);
  DateObject d=new DateObject(new Date(443457289789L),new Date(443457289789L),new Date(443457289789L),new Date(443457289789L));
  fieldGroup.setItemDataSource(new BeanItem<DateObject>(d));
}
