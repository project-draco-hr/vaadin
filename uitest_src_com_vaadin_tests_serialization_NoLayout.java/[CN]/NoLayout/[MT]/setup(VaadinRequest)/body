{
  addComponent(layoutDetector);
  CheckBox uiPolling=new CheckBox("UI polling enabled");
  uiPolling.addValueChangeListener(new ValueChangeListener(){
    @Override public void valueChange(    ValueChangeEvent event){
      if (event.getProperty().getValue() == Boolean.TRUE) {
        setPollInterval(100);
      }
 else {
        setPollInterval(-1);
      }
    }
  }
);
  addComponent(uiPolling);
  addComponent(new Button("Change regular state",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      event.getButton().setCaption(String.valueOf(System.currentTimeMillis()));
    }
  }
));
  addComponent(new Button("Change @NoLayout state",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      event.getButton().setDescription(String.valueOf(System.currentTimeMillis()));
    }
  }
));
  addComponent(new Button("Do regular RPC",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      JavaScript.eval("");
    }
  }
));
  addComponent(new Button("Do @NoLayout RPC",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      layoutDetector.doNoLayoutRpc();
    }
  }
));
  addComponent(new Button("Update LegacyComponent",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      markAsDirty();
    }
  }
));
}
