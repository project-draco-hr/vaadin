{
  while (transformersInUse >= maxConcurrentTransformers) {
    try {
      this.wait();
    }
 catch (    InterruptedException e) {
      return null;
    }
  }
  TransformerList list=(TransformerList)this.transformerSpool.get(type);
  long now=System.currentTimeMillis();
  if (now - CACHE_CHECK_INTERVAL_MILLIS > this.lastModificationCheckTime) {
    this.lastModificationCheckTime=now;
    long lastmod=this.themeSource.getModificationTime();
    if (list != null && this.themeSourceModificationTime < lastmod) {
      if (webAdapterServlet.isDebugMode(null)) {
        Log.info("Theme source modified since " + new Date(this.themeSourceModificationTime).toString() + ". Reloading...");
      }
      this.transformerSpool.clear();
      list=null;
      this.transformerCount=0;
      this.themeSourceModificationTime=lastmod;
    }
  }
  UIDLTransformer t=null;
  if (list != null && !list.isEmpty()) {
    t=(UIDLTransformer)list.removeFirst();
    if (webAdapterServlet.isDebugMode(null)) {
      Log.info("Reserved existing transformer: " + type);
    }
  }
 else {
    t=new UIDLTransformer(type,themeSource,webAdapterServlet);
    transformerCount++;
    if (webAdapterServlet.isDebugMode(null)) {
      Log.info("Created new transformer (" + transformerCount + "):"+ type);
    }
    if (list == null) {
      list=new TransformerList();
      this.transformerSpool.put(type,list);
      if (webAdapterServlet.isDebugMode(null)) {
        Log.info("Created new type: " + type);
      }
    }
  }
  transformersInUse++;
  return t;
}
