{
  clear();
  hours=createListBox();
  if (getDateTimeService().isTwelveHourClock()) {
    hours.addItem("12");
    for (int i=1; i < 12; i++) {
      hours.addItem((i < 10) ? "0" + i : "" + i);
    }
  }
 else {
    for (int i=0; i < 24; i++) {
      hours.addItem((i < 10) ? "0" + i : "" + i);
    }
  }
  hours.addChangeHandler(this);
  if (getDateTimeService().isTwelveHourClock()) {
    ampm=createListBox();
    final String[] ampmText=getDateTimeService().getAmPmStrings();
    ampm.addItem(ampmText[0]);
    ampm.addItem(ampmText[1]);
    ampm.addChangeHandler(this);
  }
  if (getResolution().getCalendarField() >= Resolution.MINUTE.getCalendarField()) {
    mins=createListBox();
    for (int i=0; i < 60; i++) {
      mins.addItem((i < 10) ? "0" + i : "" + i);
    }
    mins.addChangeHandler(this);
  }
  if (getResolution().getCalendarField() >= Resolution.SECOND.getCalendarField()) {
    sec=createListBox();
    for (int i=0; i < 60; i++) {
      sec.addItem((i < 10) ? "0" + i : "" + i);
    }
    sec.addChangeHandler(this);
  }
  final String delimiter=getDateTimeService().getClockDelimeter();
  if (isReadonly()) {
    int h=0;
    if (value != null) {
      h=value.getHours();
    }
    if (getDateTimeService().isTwelveHourClock()) {
      h-=h < 12 ? 0 : 12;
    }
    add(new VLabel(h < 10 ? "0" + h : "" + h));
  }
 else {
    add(hours);
  }
  if (getResolution().getCalendarField() >= Resolution.MINUTE.getCalendarField()) {
    add(new VLabel(delimiter));
    if (isReadonly()) {
      final int m=mins.getSelectedIndex();
      add(new VLabel(m < 10 ? "0" + m : "" + m));
    }
 else {
      add(mins);
    }
  }
  if (getResolution().getCalendarField() >= Resolution.SECOND.getCalendarField()) {
    add(new VLabel(delimiter));
    if (isReadonly()) {
      final int s=sec.getSelectedIndex();
      add(new VLabel(s < 10 ? "0" + s : "" + s));
    }
 else {
      add(sec);
    }
  }
  if (getResolution() == Resolution.HOUR) {
    add(new VLabel(delimiter + "00"));
  }
  if (getDateTimeService().isTwelveHourClock()) {
    add(new VLabel("&nbsp;"));
    if (isReadonly()) {
      int i=0;
      if (value != null) {
        i=(value.getHours() < 12) ? 0 : 1;
      }
      add(new VLabel(ampm.getItemText(i)));
    }
 else {
      add(ampm);
    }
  }
  if (isReadonly()) {
    return;
  }
  updateTimes();
  ListBox lastDropDown=getLastDropDown();
  lastDropDown.addKeyDownHandler(new KeyDownHandler(){
    @Override public void onKeyDown(    KeyDownEvent event){
      boolean shiftKey=event.getNativeEvent().getShiftKey();
      if (shiftKey) {
        return;
      }
 else {
        int nativeKeyCode=event.getNativeKeyCode();
        if (nativeKeyCode == KeyCodes.KEY_TAB) {
          onTabOut(event);
        }
      }
    }
  }
);
}
