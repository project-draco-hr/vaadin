{
  if (client.updateComponent(this,uidl,true))   return;
  this.enabled=!uidl.hasAttribute("disabled");
  this.client=client;
  this.paintableId=uidl.getStringAttribute("id");
  this.immediate=uidl.getBooleanAttribute("immediate");
  int newTotalRows=uidl.getIntAttribute("totalrows");
  if (newTotalRows != totalRows) {
    this.totalRows=newTotalRows;
    if (initializedAndAttached)     tBody.setContainerHeight();
  }
  this.pageLength=uidl.getIntAttribute("pagelength");
  if (pageLength == 0)   pageLength=totalRows;
  this.firstvisible=uidl.hasVariable("firstvisible") ? uidl.getIntVariable("firstvisible") : 0;
  if (uidl.hasAttribute("rowheaders"))   rowHeaders=true;
  if (uidl.hasAttribute("width")) {
    width=uidl.getStringAttribute("width");
  }
  if (uidl.hasAttribute("height"))   height=uidl.getStringAttribute("height");
  if (uidl.hasVariable("sortascending")) {
    this.sortAscending=uidl.getBooleanVariable("sortascending");
    this.sortColumn=uidl.getStringVariable("sortcolumn");
  }
  if (uidl.hasVariable("selected")) {
    Set selectedKeys=uidl.getStringArrayVariableAsSet("selected");
    selectedRowKeys.clear();
    for (Iterator it=selectedKeys.iterator(); it.hasNext(); )     selectedRowKeys.add((String)it.next());
  }
  if (uidl.hasAttribute("selectmode")) {
    if (uidl.getStringAttribute("selectmode").equals("multi"))     selectMode=Table.SELECT_MODE_MULTI;
 else     selectMode=Table.SELECT_MODE_SINGLE;
  }
  if (uidl.hasVariable("columnorder")) {
    this.columnReordering=true;
    this.columnOrder=uidl.getStringArrayVariable("columnorder");
  }
  if (uidl.hasVariable("collapsedcolumns")) {
    tHead.setColumnCollapsingAllowed(true);
    this.collapsedColumns=uidl.getStringArrayVariableAsSet("collapsedcolumns");
  }
 else {
    tHead.setColumnCollapsingAllowed(false);
  }
  UIDL rowData=null;
  for (Iterator it=uidl.getChildIterator(); it.hasNext(); ) {
    UIDL c=(UIDL)it.next();
    if (c.getTag().equals("rows"))     rowData=c;
 else     if (c.getTag().equals("actions"))     updateActionMap(c);
 else     if (c.getTag().equals("visiblecolumns"))     updateVisibleColumns(c);
  }
  updateHeader(uidl.getStringArrayAttribute("vcolorder"));
  if (initializedAndAttached) {
    updateBody(rowData,uidl.getIntAttribute("firstrow"),uidl.getIntAttribute("rows"));
  }
 else {
    tBody=new IScrollTableBody();
    tBody.renderInitialRows(rowData,uidl.getIntAttribute("firstrow"),uidl.getIntAttribute("rows"));
    bodyContainer.add(tBody);
    initialContentReceived=true;
    if (isAttached()) {
      sizeInit();
    }
  }
  hideScrollPositionAnnotation();
}
