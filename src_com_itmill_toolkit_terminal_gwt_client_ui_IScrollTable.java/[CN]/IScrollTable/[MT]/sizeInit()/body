{
  Iterator headCells=tHead.iterator();
  int i=0;
  while (headCells.hasNext()) {
    Element hCell=((HeaderCell)headCells.next()).getElement();
    int hw=DOM.getIntAttribute(hCell,"offsetWidth");
    int cw=tBody.getColWidth(i);
    int w=(hw > cw ? hw : cw) + IScrollTableBody.CELL_EXTRA_WIDTH;
    setColWidth(i,w);
    i++;
  }
  if (height < 0) {
    bodyContainer.setHeight((tBody.getRowHeight() * pageLength) + "px");
  }
 else {
    bodyContainer.setHeight(height + "px");
  }
  if (width < 0) {
    bodyContainer.setWidth((tBody.getOffsetWidth() + getScrollBarWidth()) + "px");
    tHead.setWidth(bodyContainer.getOffsetWidth());
  }
 else {
    bodyContainer.setWidth(width + "px");
    tHead.setWidth(width);
  }
  tHead.disableBrowserIntelligence();
  if (firstvisible > 0)   bodyContainer.setScrollPosition(firstvisible * tBody.getRowHeight());
  DeferredCommand.add(new Command(){
    public void execute(){
      if (totalRows - 1 > tBody.getLastRendered()) {
        rowRequestHandler.setReqFirstRow(tBody.getLastRendered() + 1);
        rowRequestHandler.setReqRows((int)(pageLength * CACHE_RATE));
        rowRequestHandler.deferRowFetch();
      }
    }
  }
);
  initializedAndAttached=true;
}
