{
  if (((active0&=old0) | (active1&=old1)) == 0L)   return jjStartNfa_0(4,old0,old1);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(5,active0,active1);
    return 6;
  }
switch (curChar) {
case 68:
case 100:
    if ((active0 & 0x8000000000000000L) != 0L)     return jjStartNfaWithStates_0(6,63,444);
  return jjMoveStringLiteralDfa7_0(active0,0x20000000000000L,active1,0x1L);
case 69:
case 101:
return jjMoveStringLiteralDfa7_0(active0,0L,active1,0x80000000L);
case 70:
case 102:
return jjMoveStringLiteralDfa7_0(active0,0L,active1,0x200000000L);
case 72:
case 104:
if ((active0 & 0x4000000000000L) != 0L) return jjStartNfaWithStates_0(6,50,441);
break;
case 73:
case 105:
return jjMoveStringLiteralDfa7_0(active0,0x40000000000000L,active1,0L);
case 78:
case 110:
if ((active0 & 0x80000000000000L) != 0L) return jjStartNfaWithStates_0(6,55,444);
break;
case 82:
case 114:
return jjMoveStringLiteralDfa7_0(active0,0L,active1,0x2L);
case 84:
case 116:
if ((active1 & 0x20000000L) != 0L) return jjStartNfaWithStates_0(6,93,444);
break;
default :
break;
}
return jjStartNfa_0(5,active0,active1);
}
