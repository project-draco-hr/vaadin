{
  if (((active0&=old0) | (active1&=old1)) == 0L)   return jjStartNfa_0(0,old0,old1);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(1,active0,active1);
    return 2;
  }
switch (curChar) {
case 45:
    return jjMoveStringLiteralDfa3_0(active0,0x400L,active1,0L);
case 62:
  if ((active0 & 0x800L) != 0L)   return jjStopAtPos(2,11);
break;
case 65:
case 97:
return jjMoveStringLiteralDfa3_0(active0,0xa000000000000L,active1,0x400000L);
case 69:
case 101:
return jjMoveStringLiteralDfa3_0(active0,0x1800000000000L,active1,0x100000L);
case 70:
case 102:
if ((active0 & 0x20000000000000L) != 0L) return jjStartNfaWithStates_0(2,53,402);
break;
case 72:
case 104:
return jjMoveStringLiteralDfa3_0(active0,0x10000000000000L,active1,0x200000L);
case 73:
case 105:
return jjMoveStringLiteralDfa3_0(active0,0x100000000000L,active1,0L);
case 76:
case 108:
return jjMoveStringLiteralDfa3_0(active0,0x40000000000000L,active1,0L);
case 77:
case 109:
return jjMoveStringLiteralDfa3_0(active0,0x100000000000000L,active1,0x80000L);
case 78:
case 110:
return jjMoveStringLiteralDfa3_0(active0,0x200000000000L,active1,0L);
case 79:
case 111:
return jjMoveStringLiteralDfa3_0(active0,0x4000000000000L,active1,0x800000L);
case 82:
case 114:
return jjMoveStringLiteralDfa3_0(active0,0x40000000000L,active1,0L);
case 85:
case 117:
return jjMoveStringLiteralDfa3_0(active0,0x200400000000000L,active1,0L);
case 88:
case 120:
return jjMoveStringLiteralDfa3_0(active0,0x80000000000000L,active1,0L);
default :
break;
}
return jjStartNfa_0(1,active0,active1);
}
