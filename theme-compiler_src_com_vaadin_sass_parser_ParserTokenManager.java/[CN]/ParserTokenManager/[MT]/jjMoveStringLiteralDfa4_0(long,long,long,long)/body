{
  if (((active0&=old0) | (active1&=old1)) == 0L)   return jjStartNfa_0(2,old0,old1);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(3,active0,active1);
    return 4;
  }
switch (curChar) {
case 67:
case 99:
    return jjMoveStringLiteralDfa5_0(active0,0x400000000000L,active1,0L);
case 69:
case 101:
  if ((active0 & 0x40000000000000L) != 0L)   return jjStartNfaWithStates_0(4,54,402);
 else   if ((active1 & 0x400000L) != 0L)   return jjStartNfaWithStates_0(4,86,402);
return jjMoveStringLiteralDfa5_0(active0,0x80000000000000L,active1,0L);
case 72:
case 104:
if ((active0 & 0x8000000000000L) != 0L) return jjStartNfaWithStates_0(4,51,402);
break;
case 73:
case 105:
return jjMoveStringLiteralDfa5_0(active0,0x100000000000L,active1,0x100000L);
case 76:
case 108:
return jjMoveStringLiteralDfa5_0(active0,0x10200000000000L,active1,0L);
case 78:
case 110:
if ((active0 & 0x2000000000000L) != 0L) return jjStartNfaWithStates_0(4,49,402);
break;
case 79:
case 111:
return jjMoveStringLiteralDfa5_0(active0,0L,active1,0x80000L);
case 80:
case 112:
return jjMoveStringLiteralDfa5_0(active0,0x200000000000000L,active1,0L);
case 82:
case 114:
return jjMoveStringLiteralDfa5_0(active0,0L,active1,0x200000L);
case 84:
case 116:
return jjMoveStringLiteralDfa5_0(active0,0L,active1,0x800000L);
case 85:
case 117:
return jjMoveStringLiteralDfa5_0(active0,0x1840000000000L,active1,0L);
case 90:
case 122:
return jjMoveStringLiteralDfa5_0(active0,0x100000000000000L,active1,0L);
default :
break;
}
return jjStartNfa_0(3,active0,active1);
}
