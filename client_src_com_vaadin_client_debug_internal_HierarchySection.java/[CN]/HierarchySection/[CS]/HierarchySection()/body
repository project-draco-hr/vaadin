{
  controls.add(showHierarchy);
  showHierarchy.setStylePrimaryName(VDebugWindow.STYLENAME_BUTTON);
  showHierarchy.addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent event){
      showHierarchy();
    }
  }
);
  controls.add(find);
  find.setStylePrimaryName(VDebugWindow.STYLENAME_BUTTON);
  find.addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent event){
      toggleFind(inspectComponent);
    }
  }
);
  controls.add(analyze);
  analyze.setStylePrimaryName(VDebugWindow.STYLENAME_BUTTON);
  analyze.addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent event){
      stopFind();
      analyzeLayouts();
    }
  }
);
  controls.add(generateWS);
  generateWS.setStylePrimaryName(VDebugWindow.STYLENAME_BUTTON);
  generateWS.addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent event){
      generateWidgetset();
    }
  }
);
  controls.add(generateDesign);
  generateDesign.setStylePrimaryName(VDebugWindow.STYLENAME_BUTTON);
  generateDesign.addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent event){
      content.setWidget(new HTML("Select a layout or component to generate the declarative design"));
      toggleFind(showComponentDesign);
    }
  }
);
  hierarchyPanel.addListener(new SelectConnectorListener(){
    @Override public void select(    ServerConnector connector,    Element element){
      printState(connector,true);
    }
  }
);
  analyzeLayoutsPanel.addListener(new SelectConnectorListener(){
    @Override public void select(    ServerConnector connector,    Element element){
      printState(connector,true);
    }
  }
);
  content.setStylePrimaryName(VDebugWindow.STYLENAME + "-hierarchy");
  initializeHelpPanel();
  content.setWidget(helpPanel);
}
