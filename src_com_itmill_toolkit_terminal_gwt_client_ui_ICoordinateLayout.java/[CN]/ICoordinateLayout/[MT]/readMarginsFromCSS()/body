{
  int[] margins=new int[4];
  String style=CLASSNAME + "-" + CSSID;
  String[] cssProperties=new String[]{"margin-top","margin-right","margin-bottom","margin-left"};
  String cssValue="";
  String[] cssValues=new String[cssProperties.length];
  Element e=DOM.createDiv();
  DOM.appendChild(this.getElement(),e);
  DOM.setStyleAttribute(e,"position","absolute");
  DOM.setStyleAttribute(e,"height","100px");
  DOM.setStyleAttribute(e,"width","100px");
  DOM.setElementProperty(e,"className",style);
  DOM.setInnerHTML(e,".");
  try {
    if (BrowserInfo.get().isIE()) {
      cssValue=getIEMargin(e);
      cssValues=cssValue.split("\\s");
switch (cssValues.length) {
case 4:
        for (int i=0; i < 4; i++) {
          margins[i]=parsePixel(cssValues[i]);
        }
      break;
case 3:
    margins[0]=parsePixel(cssValues[0]);
  margins[1]=margins[3]=parsePixel(cssValues[1]);
margins[2]=parsePixel(cssValues[2]);
break;
case 2:
margins[0]=margins[2]=parsePixel(cssValues[0]);
margins[1]=margins[3]=parsePixel(cssValues[1]);
break;
case 1:
int intValue=parsePixel(cssValues[0]);
for (int i=0; i < margins.length; i++) {
margins[i]=intValue;
}
}
}
 else {
for (int i=0; i < cssValues.length; i++) {
cssValues[i]=getMargin(e,cssProperties[i]);
margins[i]=parsePixel(cssValues[i]);
}
}
}
 catch (Exception exc) {
GWT.log("Error reading CSS",exc);
for (int i=0; i < margins.length; i++) {
margins[i]=0;
}
}
DOM.removeChild(this.getElement(),e);
return margins;
}
