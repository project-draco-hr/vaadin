{
  if (!containsId(itemId)) {
    return false;
  }
  for (  RowItem item : addedItems) {
    if (item.getId().equals(itemId)) {
      addedItems.remove(item);
      fireContentsChange();
      return true;
    }
  }
  if (autoCommit) {
    Item i=getItem(itemId);
    if (i == null) {
      return false;
    }
    try {
      delegate.beginTransaction();
      boolean success=delegate.removeRow((RowItem)i);
      delegate.commit();
      refresh();
      if (notificationsEnabled) {
        CacheFlushNotifier.notifyOfCacheFlush(this);
      }
      if (success) {
        logger.log(Level.INFO,"Row removed from DB...");
      }
      return success;
    }
 catch (    SQLException e) {
      logger.log(Level.WARNING,"Failed to remove row, rolling back",e);
      try {
        delegate.rollback();
      }
 catch (      SQLException ee) {
        logger.log(Level.SEVERE,"Failed to rollback row removal",ee);
      }
      return false;
    }
  }
 else {
    removedItems.put((RowId)itemId,(RowItem)getItem(itemId));
    cachedItems.remove(itemId);
    refresh();
    return true;
  }
}
