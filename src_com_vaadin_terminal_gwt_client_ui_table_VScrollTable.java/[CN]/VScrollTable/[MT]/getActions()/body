{
  Object[] cols;
  if (columnReordering && columnOrder != null) {
    cols=columnOrder;
  }
 else {
    cols=visibleColOrder;
    cols=new Object[visibleColOrder.length + collapsedColumns.size()];
    int i;
    for (i=0; i < visibleColOrder.length; i++) {
      cols[i]=visibleColOrder[i];
    }
    for (final Iterator<String> it=collapsedColumns.iterator(); it.hasNext(); ) {
      cols[i++]=it.next();
    }
  }
  final Action[] actions=new Action[cols.length];
  for (int i=0; i < cols.length; i++) {
    final String cid=(String)cols[i];
    final HeaderCell c=getHeaderCell(cid);
    final VisibleColumnAction a=new VisibleColumnAction(c.getColKey());
    a.setCaption(c.getCaption());
    if (!c.isEnabled()) {
      a.setCollapsed(true);
    }
    if (noncollapsibleColumns.contains(cid)) {
      a.setNoncollapsible(true);
    }
    actions[i]=a;
  }
  return actions;
}
