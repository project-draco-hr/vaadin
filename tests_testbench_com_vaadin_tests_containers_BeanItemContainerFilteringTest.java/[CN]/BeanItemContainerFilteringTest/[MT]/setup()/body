{
  table=new Table();
  try {
    container=new BeanItemContainer<TestBean>(TestBean.class);
    table.setContainerDataSource(container);
    table.setWidth(300,Sizeable.UNITS_PIXELS);
    table.setSelectable(true);
    table.setMultiSelect(false);
    table.setEditable(true);
    table.setImmediate(true);
    for (int i=0; i < 25; ++i) {
      container.addItem(new TestBean("Item " + i,"Value for " + i));
    }
    VerticalLayout vl=new VerticalLayout();
    filterString=new TextField("Filter string:","1");
    vl.addComponent(filterString);
    final CheckBox cb=new CheckBox("Filter on value");
    cb.addListener(new ValueChangeListener(){
      @Override public void valueChange(      ValueChangeEvent event){
        container.removeAllContainerFilters();
        if ((Boolean)((CheckBox)event.getProperty()).getValue()) {
          container.addContainerFilter("value",filterString.getValue().toString(),false,false);
        }
      }
    }
);
    cb.setImmediate(true);
    vl.addComponent(cb);
    nextLabel=new Label();
    nextLabel.setCaption("Next id: " + nextToAdd);
    vl.addComponent(nextLabel);
    final Button addItemButton=new Button("addItem()",new Button.ClickListener(){
      public void buttonClick(      ClickEvent event){
        container.addItem(new TestBean("addItem() " + nextToAdd,"value " + nextToAdd));
        nextToAdd++;
        nextLabel.setCaption("Next id: " + nextToAdd);
      }
    }
);
    addItemButton.setImmediate(true);
    vl.addComponent(addItemButton);
    final Button addItemAfterButton=new Button("addItemAfter()",new Button.ClickListener(){
      public void buttonClick(      ClickEvent event){
        Object selection=table.getValue();
        if (selection == null) {
          return;
        }
        TestBean bean=new TestBean("addItemAfter() " + nextToAdd,"value " + nextToAdd);
        Item item=container.addItemAfter(selection,bean);
        if (item == null) {
          getMainWindow().showNotification("Adding item after " + selection + " failed");
        }
        nextToAdd++;
        nextLabel.setCaption("Next id: " + nextToAdd);
      }
    }
);
    addItemAfterButton.setImmediate(true);
    vl.addComponent(addItemAfterButton);
    position=new TextField("Position:","0");
    vl.addComponent(position);
    final Button addItemAtButton=new Button("addItemAt()",new Button.ClickListener(){
      public void buttonClick(      ClickEvent event){
        int index=Integer.parseInt(position.getValue().toString());
        TestBean bean=new TestBean("addItemAt() " + nextToAdd,"value " + nextToAdd);
        Item item=container.addItemAt(index,bean);
        if (item == null) {
          getMainWindow().showNotification("Adding item at index " + position.getValue() + " failed");
        }
        nextToAdd++;
        nextLabel.setCaption("Next id: " + nextToAdd);
      }
    }
);
    addItemAtButton.setImmediate(true);
    vl.addComponent(addItemAtButton);
    getLayout().addComponent(table);
    getLayout().addComponent(vl);
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
}
