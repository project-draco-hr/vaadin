{
  final Object[][] planets=new Object[][]{new Object[]{"Mercury"},new Object[]{"Venus"},new Object[]{"Earth","The Moon"},new Object[]{"Mars","Phobos","Deimos"},new Object[]{"Jupiter","Io","Europa","Ganymedes","Callisto"},new Object[]{"Saturn","Titan","Tethys","Dione","Rhea","Iapetus"},new Object[]{"Uranus","Miranda","Ariel","Umbriel","Titania","Oberon"},new Object[]{"Neptune","Triton","Proteus","Nereid","Larissa"}};
  final Tree tree=new Tree();
  for (int i=0; i < planets.length; i++) {
    final String planet=(String)(planets[i][0]);
    tree.addItem(planet);
    if (planets[i].length == 1) {
      tree.setChildrenAllowed(planet,false);
    }
 else {
      for (int j=1; j < planets[i].length; j++) {
        final String moon=(String)planets[i][j];
        tree.addItem(moon);
        tree.setParent(moon,planet);
        tree.setChildrenAllowed(moon,false);
      }
      tree.expandItemsRecursively(planet);
    }
  }
  final ExpandLayout horlayout=new ExpandLayout(OrderedLayout.ORIENTATION_HORIZONTAL);
  horlayout.addStyleName("treeexample");
  horlayout.setSizeFull();
  final Panel treepanel=new Panel("The Planets and Major Moons");
  treepanel.addComponent(tree);
  horlayout.addComponent(treepanel);
  final Panel detailspanel=new Panel("Details");
  horlayout.addComponent(detailspanel);
  horlayout.expand(detailspanel);
  final OrderedLayout detailslayout=new OrderedLayout();
  detailspanel.setLayout(detailslayout);
  tree.setImmediate(true);
  tree.addListener(new ValueChangeListener(){
    public void valueChange(    ValueChangeEvent event){
      String planet=(String)tree.getValue();
      detailspanel.setCaption("Details on " + planet);
      detailslayout.removeAllComponents();
      detailslayout.addComponent(new Label("Where is the cat?"));
      detailslayout.addComponent(new Label("The cat is in " + planet + "."));
    }
  }
);
  main.setLayout(horlayout);
}
