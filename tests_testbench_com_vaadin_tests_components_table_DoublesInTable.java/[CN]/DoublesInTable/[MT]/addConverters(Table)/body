{
  t.setConverter("sex",new Converter<Sex,String>(){
    public Sex convertToModel(    String value,    Locale locale) throws com.vaadin.data.util.converter.Converter.ConversionException {
      return null;
    }
    public String convertToPresentation(    Sex value,    Locale locale) throws com.vaadin.data.util.converter.Converter.ConversionException {
      if (value == null) {
        value=Sex.UNKNOWN;
      }
      return value.getStringRepresentation();
    }
    public Class<Sex> getModelType(){
      return Sex.class;
    }
    public Class<String> getPresentationType(){
      return String.class;
    }
  }
);
  t.setConverter("deceased",new Converter<Boolean,String>(){
    public Boolean convertToModel(    String value,    Locale locale){
      return null;
    }
    public String convertToPresentation(    Boolean value,    Locale locale){
      if (value == null || value) {
        return "YES, DEAD!";
      }
 else {
        return "-";
      }
    }
    public Class<Boolean> getModelType(){
      return Boolean.class;
    }
    public Class<String> getPresentationType(){
      return String.class;
    }
  }
);
  t.setConverter("age",new Converter<Integer,String>(){
    public Integer convertToModel(    String value,    Locale locale) throws com.vaadin.data.util.converter.Converter.ConversionException {
      return null;
    }
    public String convertToPresentation(    Integer value,    Locale locale) throws com.vaadin.data.util.converter.Converter.ConversionException {
      if (value == null) {
        return null;
      }
      if (value < 3) {
        return value + " (baby)";
      }
 else       if (value < 7) {
        return value + " (kid)";
      }
 else       if (value < 18) {
        return value + " (young)";
      }
 else {
        return value + "";
      }
    }
    public Class<Integer> getModelType(){
      return Integer.class;
    }
    public Class<String> getPresentationType(){
      return String.class;
    }
  }
);
  t.setConverter("address",new Converter<Address,String>(){
    public Address convertToModel(    String value,    Locale locale) throws ConversionException {
      return null;
    }
    public String convertToPresentation(    Address value,    Locale locale) throws ConversionException {
      return value.getStreetAddress() + ", " + value.getCity()+ " ("+ value.getCountry()+ ")";
    }
    public Class<Address> getModelType(){
      return Address.class;
    }
    public Class<String> getPresentationType(){
      return String.class;
    }
  }
);
  t.setConverter("rent",new NumberToStringConverter(){
    @Override protected NumberFormat getFormat(    Locale locale){
      return NumberFormat.getCurrencyInstance(locale);
    }
  }
);
}
