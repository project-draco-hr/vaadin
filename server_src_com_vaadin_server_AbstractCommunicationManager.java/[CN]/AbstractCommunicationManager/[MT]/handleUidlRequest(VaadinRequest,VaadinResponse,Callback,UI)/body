{
  checkWidgetsetVersion(request);
  requestThemeName=request.getParameter("theme");
  maxInactiveInterval=request.getWrappedSession().getMaxInactiveInterval();
  boolean repaintAll;
  final OutputStream out;
  repaintAll=(request.getParameter(ApplicationConstants.URL_PARAMETER_REPAINT_ALL) != null);
  out=response.getOutputStream();
  boolean analyzeLayouts=false;
  if (repaintAll) {
    analyzeLayouts=(request.getParameter(ApplicationConstants.PARAM_ANALYZE_LAYOUTS) != null);
    String pid=request.getParameter(ApplicationConstants.PARAM_HIGHLIGHT_CONNECTOR);
    if (pid != null) {
      highlightedConnector=uI.getConnectorTracker().getConnector(pid);
      highlightConnector(highlightedConnector);
    }
  }
  final PrintWriter outWriter=new PrintWriter(new BufferedWriter(new OutputStreamWriter(out,"UTF-8")));
  session.getLock().lock();
  try {
    if (uI == null) {
      getLogger().warning("Could not get UI for session");
      return;
    }
    session.setLastRequestTimestamp(System.currentTimeMillis());
    if (!handleVariables(request,response,callback,session,uI)) {
      SystemMessages ci=response.getService().getSystemMessages(uI.getLocale(),request);
      String msg=ci.getOutOfSyncMessage();
      String cap=ci.getOutOfSyncCaption();
      if (msg != null || cap != null) {
        callback.criticalNotification(request,response,cap,msg,null,ci.getOutOfSyncURL());
        return;
      }
      repaintAll=true;
    }
    paintAfterVariableChanges(request,response,callback,repaintAll,outWriter,uI,analyzeLayouts);
    postPaint(uI);
  }
  finally {
    session.getLock().unlock();
  }
  outWriter.close();
  requestThemeName=null;
}
