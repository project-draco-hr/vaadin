{
  renderInformation.updateSize(getElement());
  if (orientationMode == ORIENTATION_HORIZONTAL) {
    int pixels;
    if ("".equals(height)) {
      int maxHeight=0;
      Iterator iterator=getPaintables().iterator();
      while (iterator.hasNext()) {
        Widget w=(Widget)iterator.next();
        int h=w.getOffsetHeight();
        if (h > maxHeight) {
          maxHeight=h;
        }
      }
      pixels=maxHeight;
    }
 else {
      pixels=getOffsetHeight() - getTopMargin() - getBottomMargin();
      if (pixels < 0) {
        pixels=0;
      }
    }
    DOM.setStyleAttribute(marginElement,"height",pixels + "px");
    DOM.setStyleAttribute(marginElement,"overflow","hidden");
  }
  if (expandedWidget == null) {
    return;
  }
  final int availableSpace=getAvailableSpace();
  Element expandElement=expandedWidget.getElement();
  Element expandedParentElement=DOM.getParent(expandElement);
  if (orientationMode == ORIENTATION_VERTICAL) {
    renderInformation.setContentAreaWidth(expandedParentElement.getOffsetWidth());
  }
 else {
    renderInformation.setContentAreaHeight(expandedParentElement.getOffsetHeight());
  }
  final int usedSpace=getUsedSpace();
  spaceForExpandedWidget=availableSpace - usedSpace;
  if (spaceForExpandedWidget < EXPANDED_ELEMENTS_MIN_WIDTH) {
    spaceForExpandedWidget=EXPANDED_ELEMENTS_MIN_WIDTH;
  }
  final WidgetWrapper wr=getWidgetWrapperFor(expandedWidget);
  wr.setExpandedSize(spaceForExpandedWidget);
  if (orientationMode == ORIENTATION_HORIZONTAL && BrowserInfo.get().isGecko()) {
    int tries=0;
    while (tries < 30 && spaceForExpandedWidget > EXPANDED_ELEMENTS_MIN_WIDTH && isLastElementDropped()) {
      spaceForExpandedWidget--;
      wr.setExpandedSize(spaceForExpandedWidget);
    }
  }
  DOM.setStyleAttribute(expandedParentElement,"overflow","hidden");
  if (client != null) {
    client.runDescendentsLayout(this);
  }
  DOM.setStyleAttribute(expandedParentElement,"overflow","auto");
}
