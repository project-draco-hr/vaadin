{
  final GridController controller=new GridController();
  final CssLayout controls=new CssLayout();
  final VerticalLayout content=new VerticalLayout();
  content.addComponent(controller);
  content.addComponent(controls);
  setContent(content);
  final NativeSelect select=new NativeSelect("Add Column with Renderer",Arrays.asList(Renderers.values()));
  select.setItemCaptionMode(ItemCaptionMode.EXPLICIT);
  for (  Renderers renderer : Renderers.values()) {
    select.setItemCaption(renderer,renderer.toString());
  }
  select.setValue(Renderers.TEXT_RENDERER);
  select.setNullSelectionAllowed(false);
  controls.addComponent(select);
  NativeButton addColumnBtn=new NativeButton("Add");
  addColumnBtn.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      Renderers renderer=(Renderers)select.getValue();
      controller.addColumn(renderer);
    }
  }
);
  controls.addComponent(addColumnBtn);
  NativeButton detachAttachBtn=new NativeButton("DetachAttach");
  detachAttachBtn.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      controller.detachAttach();
    }
  }
);
  controls.addComponent(detachAttachBtn);
  NativeButton shuffleButton=new NativeButton("Shuffle");
  shuffleButton.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      controller.shuffle();
    }
  }
);
  controls.addComponent(shuffleButton);
  NativeButton sortButton=new NativeButton("Trigger sorting event");
  sortButton.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      controller.triggerClientSorting();
    }
  }
);
  controls.addComponent(sortButton);
  NativeButton testSortingButton=new NativeButton("Test sorting");
  testSortingButton.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      controller.triggerClientSortingTest();
    }
  }
);
  controls.addComponent(testSortingButton);
  Label console=new Label();
  console.setContentMode(ContentMode.HTML);
  console.setId("testDebugConsole");
  content.addComponent(console);
}
