{
  if (node1.getParentNode() == null || node2.getParentNode() == null) {
    return null;
  }
  if (node1.isGrandParentOf(node2) || node2.isGrandParentOf(node1)) {
    return null;
  }
  List<TreeNode> parents1=new ArrayList<TreeNode>();
  TreeNode parent1=node1.getParentNode();
  while (parent1 != null) {
    parents1.add(parent1);
    parent1=parent1.getParentNode();
  }
  List<TreeNode> parents2=new ArrayList<TreeNode>();
  TreeNode parent2=node2.getParentNode();
  while (parent2 != null) {
    parents2.add(parent2);
    parent2=parent2.getParentNode();
  }
  for (int i=0; i < parents1.size(); i++) {
    parent1=parents1.get(i);
    for (int j=0; j < parents2.size(); j++) {
      parent2=parents2.get(j);
      if (parent1 == parent2) {
        return parent1;
      }
    }
  }
  return null;
}
