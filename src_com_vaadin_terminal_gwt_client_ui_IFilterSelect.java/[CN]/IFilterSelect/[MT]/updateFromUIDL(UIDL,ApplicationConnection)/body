{
  paintableId=uidl.getId();
  this.client=client;
  boolean readonly=uidl.hasAttribute("readonly");
  boolean disabled=uidl.hasAttribute("disabled");
  if (disabled || readonly) {
    tb.setEnabled(false);
    enabled=false;
  }
 else {
    tb.setEnabled(true);
    enabled=true;
  }
  if (client.updateComponent(this,uidl,true)) {
    return;
  }
  if (uidl.hasAttribute("tabindex")) {
    tb.setTabIndex(uidl.getIntAttribute("tabindex"));
  }
  immediate=uidl.hasAttribute("immediate");
  nullSelectionAllowed=uidl.hasAttribute("nullselect");
  currentPage=uidl.getIntVariable("page");
  if (uidl.hasAttribute(ATTR_INPUTPROMPT)) {
    inputPrompt=uidl.getStringAttribute(ATTR_INPUTPROMPT);
  }
 else {
    inputPrompt="";
  }
  suggestionPopup.setPagingEnabled(true);
  suggestionPopup.updateStyleNames(uidl);
  allowNewItem=uidl.hasAttribute("allownewitem");
  lastNewItemString=null;
  currentSuggestions.clear();
  final UIDL options=uidl.getChildUIDL(0);
  totalMatches=uidl.getIntAttribute("totalMatches");
  String captions=inputPrompt;
  for (final Iterator i=options.getChildIterator(); i.hasNext(); ) {
    final UIDL optionUidl=(UIDL)i.next();
    final FilterSelectSuggestion suggestion=new FilterSelectSuggestion(optionUidl);
    currentSuggestions.add(suggestion);
    if (optionUidl.hasAttribute("selected")) {
      if (!filtering || popupOpenerClicked) {
        tb.setText(suggestion.getReplacementString());
        selectedOptionKey="" + suggestion.getOptionKey();
      }
      currentSuggestion=suggestion;
      setSelectedItemIcon(suggestion.getIconUri());
    }
    if (captions.length() > 0) {
      captions+="|";
    }
    captions+=suggestion.getReplacementString();
  }
  if ((!filtering || popupOpenerClicked) && uidl.hasVariable("selected") && uidl.getStringArrayVariable("selected").length == 0) {
    if (!filtering || !popupOpenerClicked) {
      setPromptingOn();
    }
    selectedOptionKey=null;
  }
  if (filtering && lastFilter.toLowerCase().equals(uidl.getStringVariable("filter"))) {
    suggestionPopup.showSuggestions(currentSuggestions,currentPage,totalMatches);
    filtering=false;
    if (!popupOpenerClicked && lastIndex != -1) {
      if (lastIndex == 0) {
        int lastItem=PAGELENTH - 1;
        List items=suggestionPopup.menu.getItems();
        if (lastItem >= items.size()) {
          lastItem=items.size() - 1;
        }
        suggestionPopup.menu.selectItem((MenuItem)items.get(lastItem));
      }
 else {
        suggestionPopup.menu.selectItem((MenuItem)suggestionPopup.menu.getItems().get(0));
      }
      lastIndex=-1;
    }
  }
  suggestionPopupMinWidth=minWidth(captions);
  popupOpenerClicked=false;
  updateRootWidth();
}
