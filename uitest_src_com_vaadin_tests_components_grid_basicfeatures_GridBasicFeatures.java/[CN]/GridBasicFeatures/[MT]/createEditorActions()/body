{
  createBooleanAction("Enabled","Editor",false,new Command<Grid,Boolean>(){
    @Override public void execute(    Grid c,    Boolean value,    Object data){
      c.setEditorEnabled(value);
    }
  }
);
  createBooleanAction("Buffered mode","Editor",true,new Command<Grid,Boolean>(){
    @Override public void execute(    Grid c,    Boolean value,    Object data){
      c.setEditorBuffered(value);
    }
  }
);
  createClickAction("Edit item 5","Editor",new Command<Grid,String>(){
    @Override public void execute(    Grid c,    String value,    Object data){
      c.editItem(5);
    }
  }
,null);
  createClickAction("Edit item 100","Editor",new Command<Grid,String>(){
    @Override public void execute(    Grid c,    String value,    Object data){
      c.editItem(100);
    }
  }
,null);
  createClickAction("Save","Editor",new Command<Grid,String>(){
    @Override public void execute(    Grid c,    String value,    Object data){
      try {
        c.saveEditor();
      }
 catch (      CommitException e) {
        e.printStackTrace();
      }
    }
  }
,null);
  createClickAction("Cancel edit","Editor",new Command<Grid,String>(){
    @Override public void execute(    Grid c,    String value,    Object data){
      c.cancelEditor();
    }
  }
,null);
  createClickAction("Change save caption","Editor",new Command<Grid,String>(){
    @Override public void execute(    Grid c,    String value,    Object data){
      c.setEditorSaveCaption("??????S");
    }
  }
,null);
  createClickAction("Change cancel caption","Editor",new Command<Grid,String>(){
    @Override public void execute(    Grid c,    String value,    Object data){
      c.setEditorCancelCaption("??????u?????");
    }
  }
,null);
  createClickAction("Add editor state listener","Editor",new Command<Grid,String>(){
    @Override public void execute(    Grid grid,    String value,    Object data){
      grid.addEditorListener(new EditorListener(){
        @Override public void editorOpened(        EditorOpenEvent e){
          log("Editor opened");
        }
        @Override public void editorMoved(        EditorMoveEvent e){
          log("Editor moved");
        }
        @Override public void editorClosed(        EditorCloseEvent e){
          log("Editor closed");
        }
      }
);
    }
  }
,null);
}
