{
  createClickAction("custom details generator","Details",new Command<Grid,Void>(){
    @Override public void execute(    Grid c,    Void value,    Object data){
      grid.setDetailsGenerator(new Grid.DetailsGenerator(){
        private int seq=0;
        @Override public Component getDetails(        RowReference rowReference){
          return new Label("You are watching item id " + rowReference.getItemId() + " ("+ (seq++)+ ")");
        }
      }
);
    }
  }
,null);
  createClickAction("hierarchy details generator","Details",new Command<Grid,Void>(){
    @Override public void execute(    Grid c,    Void value,    Object data){
      grid.setDetailsGenerator(new Grid.DetailsGenerator(){
        @Override public Component getDetails(        RowReference rowReference){
          detailsPanel=new Panel();
          detailsPanel.setContent(new Label("One"));
          return detailsPanel;
        }
      }
);
    }
  }
,null);
  createClickAction("change hierarchy in generator","Details",new Command<Grid,Void>(){
    @Override public void execute(    Grid c,    Void value,    Object data){
      Label label=(Label)detailsPanel.getContent();
      if (label.getValue().equals("One")) {
        detailsPanel.setContent(new Label("Two"));
      }
 else {
        detailsPanel.setContent(new Label("One"));
      }
    }
  }
,null);
  createClickAction("toggle firstItemId","Details",new Command<Grid,Void>(){
    @Override public void execute(    Grid g,    Void value,    Object data){
      Object firstItemId=g.getContainerDataSource().firstItemId();
      boolean toggle=g.isDetailsVisible(firstItemId);
      g.setDetailsVisible(firstItemId,!toggle);
      g.setDetailsVisible(firstItemId,toggle);
    }
  }
,null);
  createBooleanAction("firstItemId","Details",false,new Command<Grid,Boolean>(){
    @Override @SuppressWarnings("boxing") public void execute(    Grid g,    Boolean visible,    Object data){
      g.setDetailsVisible(g.getContainerDataSource().firstItemId(),visible);
    }
  }
);
  createBooleanAction("lastItemId-5","Details",false,new Command<Grid,Boolean>(){
    @Override @SuppressWarnings("boxing") public void execute(    Grid g,    Boolean visible,    Object data){
      Object fifthLastItemId=g.getContainerDataSource().getItemIds(ROWS - 6,1).get(0);
      g.setDetailsVisible(fifthLastItemId,visible);
    }
  }
);
}
