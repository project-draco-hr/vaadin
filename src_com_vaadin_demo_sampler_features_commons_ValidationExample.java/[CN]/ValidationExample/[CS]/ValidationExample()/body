{
  setSpacing(true);
  TextField pin=new TextField("PIN");
  pin.setWidth("50px");
  pin.setImmediate(true);
  addComponent(pin);
  pin.addValidator(new StringLengthValidator("Must be 4-6 characters",4,6,false));
  TextField username=new TextField("Username");
  username.setImmediate(true);
  addComponent(username);
  CompositeValidator usernameValidator=new CompositeValidator();
  username.addValidator(usernameValidator);
  usernameValidator.addValidator(new StringLengthValidator("Username must be at least 4 characters",4,255,false));
  usernameValidator.addValidator(new Validator(){
    public boolean isValid(    Object value){
      return !usernames.contains(value);
    }
    public void validate(    Object value) throws InvalidValueException {
      if (!isValid(value)) {
        throw new Validator.InvalidValueException("Username " + value + " already in use");
      }
    }
  }
);
  username.addListener(new ValueChangeListener(){
    public void valueChange(    ValueChangeEvent event){
      TextField tf=(TextField)event.getProperty();
      tf.validate();
      if (tf.getValue() != null) {
        usernames.add(tf.getValue().toString());
        addComponent(new Label("Added " + tf.getValue() + " to usernames"));
      }
    }
  }
);
}
