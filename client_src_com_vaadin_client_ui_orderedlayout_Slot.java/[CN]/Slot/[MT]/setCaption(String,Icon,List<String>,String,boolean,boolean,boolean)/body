{
  Widget widget=getWidget();
  final Element focusedElement=Util.getFocusedElement();
  boolean focusLost=false;
  if (captionText != null || icon != null || error != null || required) {
    if (caption == null) {
      caption=DOM.createDiv();
      captionWrap=DOM.createDiv();
      captionWrap.addClassName(StyleConstants.UI_WIDGET);
      captionWrap.addClassName("v-has-caption");
      getElement().appendChild(captionWrap);
      orphan(widget);
      captionWrap.appendChild(widget.getElement());
      adopt(widget);
      focusLost=(focusedElement == null ? false : widget.getElement().isOrHasChild(focusedElement));
    }
  }
 else   if (caption != null) {
    orphan(widget);
    getElement().appendChild(widget.getElement());
    adopt(widget);
    captionWrap.removeFromParent();
    caption=null;
    captionWrap=null;
    focusLost=(focusedElement == null ? false : widget.getElement().isOrHasChild(focusedElement));
  }
  if (captionText != null) {
    if (this.captionText == null) {
      this.captionText=DOM.createSpan();
      this.captionText.addClassName("v-captiontext");
      caption.appendChild(this.captionText);
    }
    if (captionText.trim().equals("")) {
      this.captionText.setInnerHTML("&nbsp;");
    }
 else {
      this.captionText.setInnerText(captionText);
    }
  }
 else   if (this.captionText != null) {
    this.captionText.removeFromParent();
    this.captionText=null;
  }
  if (this.icon != null) {
    icon.getElement().removeFromParent();
  }
  if (icon != null) {
    caption.insertFirst(icon.getElement());
  }
  this.icon=icon;
  if (required) {
    if (requiredIcon == null) {
      requiredIcon=DOM.createSpan();
      requiredIcon.setInnerHTML("*");
      requiredIcon.setClassName("v-required-field-indicator");
      Roles.getTextboxRole().setAriaHiddenState(requiredIcon,true);
    }
    caption.appendChild(requiredIcon);
  }
 else   if (requiredIcon != null) {
    requiredIcon.removeFromParent();
    requiredIcon=null;
  }
  if (error != null && showError) {
    if (errorIcon == null) {
      errorIcon=DOM.createSpan();
      errorIcon.setClassName("v-errorindicator");
    }
    caption.appendChild(errorIcon);
  }
 else   if (errorIcon != null) {
    errorIcon.removeFromParent();
    errorIcon=null;
  }
  if (caption != null) {
    caption.setClassName("v-caption");
    if (styles != null) {
      for (      String style : styles) {
        caption.addClassName("v-caption-" + style);
      }
    }
    if (enabled) {
      caption.removeClassName("v-disabled");
    }
 else {
      caption.addClassName("v-disabled");
    }
    if (captionText != null || icon != null) {
      setCaptionPosition(CaptionPosition.TOP);
    }
 else {
      setCaptionPosition(CaptionPosition.RIGHT);
    }
  }
  if (focusLost) {
    Element currentFocus=Util.getFocusedElement();
    if (currentFocus != null && currentFocus.equals(Document.get().getBody())) {
      focusedElement.focus();
    }
 else     if (currentFocus != focusedElement) {
      Timer focusTimer=new Timer(){
        @Override public void run(){
          if (Util.getFocusedElement() == null) {
            schedule(25);
          }
 else           if (Util.getFocusedElement().equals(Document.get().getBody())) {
            focusedElement.focus();
          }
        }
      }
;
      if (BrowserInfo.get().isIE8()) {
        focusTimer.schedule(25);
      }
 else {
        focusTimer.run();
      }
    }
  }
}
