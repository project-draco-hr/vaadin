{
  getWidget().client=client;
  getWidget().id=uidl.getId();
  super.updateFromUIDL(uidl,client);
  if (!isRealUpdate(uidl)) {
    return;
  }
  getWidget().immediate=getState().isImmediate();
  getWidget().disabled=!isEnabled();
  getWidget().readonly=isReadOnly();
  getWidget().vertical=uidl.hasAttribute("vertical");
  String style=getState().getStyle();
  if (getWidget().vertical) {
    getWidget().addStyleName(VSlider.CLASSNAME + "-vertical");
  }
 else {
    getWidget().removeStyleName(VSlider.CLASSNAME + "-vertical");
  }
  getWidget().min=uidl.getDoubleAttribute("min");
  getWidget().max=uidl.getDoubleAttribute("max");
  getWidget().resolution=uidl.getIntAttribute("resolution");
  getWidget().value=new Double(uidl.getDoubleVariable("value"));
  getWidget().setFeedbackValue(getWidget().value);
  getWidget().buildBase();
  if (!getWidget().vertical) {
    Scheduler.get().scheduleDeferred(new Command(){
      public void execute(){
        getWidget().buildHandle();
        getWidget().setValue(getWidget().value,false);
      }
    }
);
  }
 else {
    getWidget().buildHandle();
    getWidget().setValue(getWidget().value,false);
  }
}
