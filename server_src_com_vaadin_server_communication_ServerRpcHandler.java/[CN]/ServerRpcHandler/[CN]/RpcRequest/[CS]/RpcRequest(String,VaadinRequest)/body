{
  json=JsonUtil.parse(jsonString);
  JsonValue token=json.get(ApplicationConstants.CSRF_TOKEN);
  if (token == null) {
    csrfToken=ApplicationConstants.CSRF_TOKEN_DEFAULT_VALUE;
  }
 else {
    String csrfToken=token.asString();
    if (csrfToken.equals("")) {
      csrfToken=ApplicationConstants.CSRF_TOKEN_DEFAULT_VALUE;
    }
    this.csrfToken=csrfToken;
  }
  if (request.getService().getDeploymentConfiguration().isSyncIdCheckEnabled()) {
    syncId=(int)json.getNumber(ApplicationConstants.SERVER_SYNC_ID);
  }
 else {
    syncId=-1;
  }
  if (json.hasKey(ApplicationConstants.RESYNCHRONIZE_ID)) {
    resynchronize=json.getBoolean(ApplicationConstants.RESYNCHRONIZE_ID);
  }
 else {
    resynchronize=false;
  }
  if (json.hasKey(ApplicationConstants.CLIENT_TO_SERVER_ID)) {
    clientToServerMessageId=(int)json.getNumber(ApplicationConstants.CLIENT_TO_SERVER_ID);
  }
 else {
    getLogger().warning("Server message without client id received");
    clientToServerMessageId=-1;
  }
  invocations=json.getArray(ApplicationConstants.RPC_INVOCATIONS);
}
