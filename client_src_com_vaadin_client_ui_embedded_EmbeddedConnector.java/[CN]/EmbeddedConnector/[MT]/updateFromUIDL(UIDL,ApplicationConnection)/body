{
  if (!isRealUpdate(uidl)) {
    return;
  }
  getWidget().client=client;
  boolean clearBrowserElement=true;
  clickEventHandler.handleEventHandlerRegistration();
  if (uidl.hasAttribute("type")) {
    if (getWidget().type != null) {
      getWidget().removeStyleName(VEmbedded.CLASSNAME + "-" + getWidget().type);
    }
    if (getWidget().mimetype != null) {
      getWidget().removeStyleName(VEmbedded.CLASSNAME + "-" + getWidget().mimetype);
    }
    getWidget().type=uidl.getStringAttribute("type");
    if (getWidget().type.equals("image")) {
      getWidget().addStyleName(VEmbedded.CLASSNAME + "-image");
      Element el=null;
      boolean created=false;
      NodeList<Node> nodes=getWidget().getElement().getChildNodes();
      if (nodes != null && nodes.getLength() == 1) {
        Node n=nodes.getItem(0);
        if (n.getNodeType() == Node.ELEMENT_NODE) {
          Element e=(Element)n;
          if (e.getTagName().equals("IMG")) {
            el=e;
          }
        }
      }
      if (el == null) {
        getWidget().setHTML("");
        el=DOM.createImg();
        created=true;
        DOM.sinkEvents(el,Event.ONLOAD);
      }
      Style style=el.getStyle();
      style.setProperty("width",getState().width);
      style.setProperty("height",getState().height);
      DOM.setElementProperty(el,"src",getWidget().getSrc(uidl,client));
      if (uidl.hasAttribute(EmbeddedConstants.ALTERNATE_TEXT)) {
        el.setPropertyString(EmbeddedConstants.ALTERNATE_TEXT,uidl.getStringAttribute(EmbeddedConstants.ALTERNATE_TEXT));
      }
      if (created) {
        getWidget().getElement().appendChild(el);
      }
      getWidget().sinkEvents(VTooltip.TOOLTIP_EVENTS);
    }
 else     if (getWidget().type.equals("browser")) {
      getWidget().addStyleName(VEmbedded.CLASSNAME + "-browser");
      if (getWidget().browserElement == null) {
        getWidget().setHTML("<iframe width=\"100%\" height=\"100%\" frameborder=\"0\"" + " allowTransparency=\"true\" src=\"\"" + " name=\"" + uidl.getId() + "\"></iframe>");
        getWidget().browserElement=DOM.getFirstChild(getWidget().getElement());
      }
      DOM.setElementAttribute(getWidget().browserElement,"src",getWidget().getSrc(uidl,client));
      clearBrowserElement=false;
    }
 else {
      VConsole.log("Unknown Embedded type '" + getWidget().type + "'");
    }
  }
 else   if (uidl.hasAttribute("mimetype")) {
    if (getWidget().type != null) {
      getWidget().removeStyleName(VEmbedded.CLASSNAME + "-" + getWidget().type);
    }
    if (getWidget().mimetype != null) {
      getWidget().removeStyleName(VEmbedded.CLASSNAME + "-" + getWidget().mimetype);
    }
    final String mime=uidl.getStringAttribute("mimetype");
    if (mime.equals("application/x-shockwave-flash")) {
      getWidget().mimetype="flash";
      getWidget().addStyleName(VEmbedded.CLASSNAME + "-flash");
      getWidget().setHTML(getWidget().createFlashEmbed(uidl));
    }
 else     if (mime.equals("image/svg+xml")) {
      getWidget().mimetype="svg";
      getWidget().addStyleName(VEmbedded.CLASSNAME + "-svg");
      String data;
      Map<String,String> parameters=VEmbedded.getParameters(uidl);
      if (parameters.get("data") == null) {
        data=getWidget().getSrc(uidl,client);
      }
 else {
        data="data:image/svg+xml," + parameters.get("data");
      }
      getWidget().setHTML("");
      ObjectElement obj=Document.get().createObjectElement();
      obj.setType(mime);
      obj.setData(data);
      if (!isUndefinedWidth()) {
        obj.getStyle().setProperty("width","100%");
      }
      if (!isUndefinedHeight()) {
        obj.getStyle().setProperty("height","100%");
      }
      if (uidl.hasAttribute("classid")) {
        obj.setAttribute("classid",uidl.getStringAttribute("classid"));
      }
      if (uidl.hasAttribute("codebase")) {
        obj.setAttribute("codebase",uidl.getStringAttribute("codebase"));
      }
      if (uidl.hasAttribute("codetype")) {
        obj.setAttribute("codetype",uidl.getStringAttribute("codetype"));
      }
      if (uidl.hasAttribute("archive")) {
        obj.setAttribute("archive",uidl.getStringAttribute("archive"));
      }
      if (uidl.hasAttribute("standby")) {
        obj.setAttribute("standby",uidl.getStringAttribute("standby"));
      }
      getWidget().getElement().appendChild(obj);
      if (uidl.hasAttribute(EmbeddedConstants.ALTERNATE_TEXT)) {
        obj.setInnerText(uidl.getStringAttribute(EmbeddedConstants.ALTERNATE_TEXT));
      }
    }
 else {
      VConsole.log("Unknown Embedded mimetype '" + mime + "'");
    }
  }
 else {
    VConsole.log("Unknown Embedded; no type or mimetype attribute");
  }
  if (clearBrowserElement) {
    getWidget().browserElement=null;
  }
}
