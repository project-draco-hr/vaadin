{
  HorizontalLayout demoLayout=new HorizontalLayout();
  demoLayout.setSpacing(true);
  demoLayout.setMargin(true);
  Tree t=new Tree("Hardware Inventory",ExampleUtil.getHardwareContainer());
  t.setItemCaptionPropertyId(ExampleUtil.hw_PROPERTY_NAME);
  t.setItemCaptionMode(AbstractSelect.ITEM_CAPTION_MODE_PROPERTY);
  t.setSizeFull();
  int itemId=t.getContainerDataSource().size();
  for (int i=0; i < itemId; i++) {
    t.expandItemsRecursively(i);
  }
  final TabSheet ts=new TabSheet();
  final Label l1=new Label("This window shows an example of a so called" + " Application-style layout. You probably notice that the layout" + " is quite similar to other examples present in the Sampler."+ " These examples include e.g. SplitPanel and Expanding Components."+ " Please select one of the other tabs to find out more about"+ " application-style layouting!");
  l1.setSizeFull();
  final Label l2=new Label("Typical design principles for an Application-style layout" + " follow the design of traditional applications, e.g." + " you should fill the whole window with your UI elements."+ " You should also make it dynamic, so it handles resizing events"+ " reasonably. In Toolkit, this is generally"+ " achieved by calling setSizeFull() for a Component."+ " In this example you may notice that sizes of all the components"+ " and layouts are set to full. Additionally, an expand ratio is set"+ " to achieve reasonable component sizes.");
  l2.setSizeFull();
  final Label l3=new Label("In some cases it is reasonable to set some of the" + " sizes by hand, or at least set some limits to the sizes." + " For example here an expand ratio of 1:4 has been set for the Tree"+ " Component and the layout containing the TabSheet component.");
  l3.setSizeFull();
  ts.addTab(l1);
  ts.setTabCaption(l1,"Example of an Application-style layout");
  ts.addTab(l2);
  ts.setTabCaption(l2,"Principles");
  ts.addTab(l3);
  ts.setTabCaption(l3,"Exceptions");
  ts.setSizeFull();
  Label commentArea=new Label("Comment area: no comments");
  VerticalLayout tabsAndComments=new VerticalLayout();
  tabsAndComments.setSizeFull();
  tabsAndComments.addComponent(ts);
  tabsAndComments.addComponent(commentArea);
  demoLayout.addComponent(t);
  demoLayout.addComponent(tabsAndComments);
  demoLayout.setExpandRatio(t,1);
  demoLayout.setExpandRatio(tabsAndComments,3);
  return demoLayout;
}
