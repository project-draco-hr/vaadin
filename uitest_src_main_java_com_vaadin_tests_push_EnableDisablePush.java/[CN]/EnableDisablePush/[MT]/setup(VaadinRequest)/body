{
  getPushConfiguration().setPushMode(PushMode.AUTOMATIC);
  log.log("Push enabled");
  addComponent(new Button("Disable push",new Button.ClickListener(){
    @Override public void buttonClick(    Button.ClickEvent event){
      log.log("Disabling push");
      getPushConfiguration().setPushMode(PushMode.DISABLED);
      log.log("Push disabled");
    }
  }
));
  addComponent(new Button("Enable push",new Button.ClickListener(){
    @Override public void buttonClick(    Button.ClickEvent event){
      log.log("Enabling push");
      getPushConfiguration().setPushMode(PushMode.AUTOMATIC);
      log.log("Push enabled");
    }
  }
));
  addComponent(new Button("Disable polling",new Button.ClickListener(){
    @Override public void buttonClick(    Button.ClickEvent event){
      log.log("Disabling poll");
      setPollInterval(-1);
      log.log("Poll disabled");
    }
  }
));
  addComponent(new Button("Enable polling",new Button.ClickListener(){
    @Override public void buttonClick(    Button.ClickEvent event){
      log.log("Enabling poll");
      setPollInterval(1000);
      log.log("Poll enabled");
    }
  }
));
  addComponent(new Button("Disable push, re-enable from background thread",new Button.ClickListener(){
    @Override public void buttonClick(    Button.ClickEvent event){
      log.log("Disabling push, enabling polling");
      getPushConfiguration().setPushMode(PushMode.DISABLED);
      setPollInterval(1000);
      timer.schedule(new CounterTask(),new Date());
      log.log("Push disabled, polling enabled");
    }
  }
));
  addComponent(log);
}
