{
  service.addServiceDestroyListener(new ServiceDestroyListener(){
    @Override public void serviceDestroy(    ServiceDestroyEvent event){
      destroy();
    }
  }
);
  final ServletConfig vaadinServletConfig=service.getServlet().getServletConfig();
  pushHandler=new PushHandler(service);
  atmosphere=getPreInitializedAtmosphere(vaadinServletConfig);
  if (atmosphere == null) {
    getLogger().fine("Initializing Atmosphere for servlet " + vaadinServletConfig.getServletName());
    try {
      atmosphere=initAtmosphere(vaadinServletConfig);
    }
 catch (    Exception e) {
      getLogger().log(Level.WARNING,"Failed to initialize Atmosphere for " + service.getServlet().getServletName() + ". Push will not work.",e);
      return;
    }
  }
 else {
    getLogger().fine("Using pre-initialized Atmosphere for servlet " + vaadinServletConfig.getServletName());
  }
  for (  AtmosphereHandlerWrapper handlerWrapper : atmosphere.getAtmosphereHandlers().values()) {
    AtmosphereHandler handler=handlerWrapper.atmosphereHandler;
    if (handler instanceof PushAtmosphereHandler) {
      ((PushAtmosphereHandler)handler).setPushHandler(pushHandler);
    }
  }
}
