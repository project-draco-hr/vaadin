{
  getWidget().client=client;
  getWidget().paintableId=uidl.getId();
  if (!isRealUpdate(uidl)) {
    return;
  }
  getWidget().setReadOnly(isReadOnly());
  getWidget().setInputPrompt(getState().inputPrompt);
  getWidget().setMaxLength(getState().maxLength);
  getWidget().setImmediate(getState().immediate);
  getWidget().listenTextChangeEvents=hasEventListener("ie");
  if (getWidget().listenTextChangeEvents) {
    getWidget().textChangeEventMode=uidl.getStringAttribute(TextFieldConstants.ATTR_TEXTCHANGE_EVENTMODE);
    if (getWidget().textChangeEventMode.equals(TextFieldConstants.TEXTCHANGE_MODE_EAGER)) {
      getWidget().textChangeEventTimeout=1;
    }
 else {
      getWidget().textChangeEventTimeout=uidl.getIntAttribute(TextFieldConstants.ATTR_TEXTCHANGE_TIMEOUT);
      if (getWidget().textChangeEventTimeout < 1) {
        getWidget().textChangeEventTimeout=1;
      }
    }
    getWidget().sinkEvents(VTextField.TEXTCHANGE_EVENTS);
    getWidget().attachCutEventListener(getWidget().getElement());
  }
  getWidget().setColumns(getState().columns);
  final String text=getState().text;
  if (!(uidl.getBooleanAttribute(TextFieldConstants.ATTR_NO_VALUE_CHANGE_BETWEEN_PAINTS) && getWidget().valueBeforeEdit != null && text.equals(getWidget().valueBeforeEdit))) {
    getWidget().updateFieldContent(text);
  }
  if (uidl.hasAttribute("selpos")) {
    final int pos=uidl.getIntAttribute("selpos");
    final int length=uidl.getIntAttribute("sellen");
    Scheduler.get().scheduleDeferred(new Command(){
      @Override public void execute(){
        getWidget().setSelectionRange(pos,length);
      }
    }
);
  }
}
