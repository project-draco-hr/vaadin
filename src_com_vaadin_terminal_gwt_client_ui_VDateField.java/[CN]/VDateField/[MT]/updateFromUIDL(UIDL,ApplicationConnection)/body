{
  if (client.updateComponent(this,uidl,true)) {
    return;
  }
  this.client=client;
  id=uidl.getId();
  immediate=uidl.getBooleanAttribute("immediate");
  readonly=uidl.getBooleanAttribute("readonly");
  enabled=!uidl.getBooleanAttribute("disabled");
  if (uidl.hasAttribute("locale")) {
    final String locale=uidl.getStringAttribute("locale");
    try {
      dts.setLocale(locale);
      currentLocale=locale;
    }
 catch (    final LocaleNotLoadedException e) {
      currentLocale=dts.getLocale();
      ClientExceptionHandler.displayError("Tried to use an unloaded locale \"" + locale + "\". Using default locale ("+ currentLocale+ ").",e);
    }
  }
  int newResolution;
  if (uidl.hasVariable("msec")) {
    newResolution=RESOLUTION_MSEC;
  }
 else   if (uidl.hasVariable("sec")) {
    newResolution=RESOLUTION_SEC;
  }
 else   if (uidl.hasVariable("min")) {
    newResolution=RESOLUTION_MIN;
  }
 else   if (uidl.hasVariable("hour")) {
    newResolution=RESOLUTION_HOUR;
  }
 else   if (uidl.hasVariable("day")) {
    newResolution=RESOLUTION_DAY;
  }
 else   if (uidl.hasVariable("month")) {
    newResolution=RESOLUTION_MONTH;
  }
 else {
    newResolution=RESOLUTION_YEAR;
  }
  currentResolution=newResolution;
  setStyleName(CLASSNAME + " " + CLASSNAME+ "-"+ resolutionToString(currentResolution));
  final int year=uidl.getIntVariable("year");
  final int month=(currentResolution >= RESOLUTION_MONTH) ? uidl.getIntVariable("month") : -1;
  final int day=(currentResolution >= RESOLUTION_DAY) ? uidl.getIntVariable("day") : -1;
  final int hour=(currentResolution >= RESOLUTION_HOUR) ? uidl.getIntVariable("hour") : 0;
  final int min=(currentResolution >= RESOLUTION_MIN) ? uidl.getIntVariable("min") : 0;
  final int sec=(currentResolution >= RESOLUTION_SEC) ? uidl.getIntVariable("sec") : 0;
  final int msec=(currentResolution >= RESOLUTION_MSEC) ? uidl.getIntVariable("msec") : 0;
  if (year > -1) {
    date=new Date((long)getTime(year,month,day,hour,min,sec,msec));
    showingDate.setTime(date.getTime());
  }
 else {
    date=null;
    showingDate=new Date();
  }
}
