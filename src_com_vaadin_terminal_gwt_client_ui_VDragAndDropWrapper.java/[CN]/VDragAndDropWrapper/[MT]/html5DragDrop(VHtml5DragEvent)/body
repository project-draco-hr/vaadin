{
  if (dropHandler == null) {
    return true;
  }
  ApplicationConnection.getConsole().log("HTML 5 Drag Drop");
  VTransferable transferable=vaadinDragEvent.getTransferable();
  JsArrayString types=event.getTypes();
  for (int i=0; i < types.length(); i++) {
    String type=types.get(i);
    ApplicationConnection.getConsole().log("Type: " + type);
    if ("text/plain".equals(type)) {
      String data=event.getDataAsText(type);
      ApplicationConnection.getConsole().log(type + " : " + data);
      transferable.setData("text/plain",data);
    }
  }
  int fileCount=event.getFileCount();
  if (fileCount > 0) {
    transferable.setData("filecount",fileCount);
    for (int i=0; i < fileCount; i++) {
      final int fileId=filecounter++;
      final VHtml5File file=event.getFile(fileCount);
      transferable.setData("fn" + fileId,file.getName());
      transferable.setData("ft" + fileId,file.getType());
      transferable.setData("fs" + fileId,file.getSize());
      DeferredCommand.addCommand(new Command(){
        public void execute(){
          file.readAsDataUrl(new Callback(){
            public void handleFile(            JavaScriptObject object){
              client.updateVariable(client.getPid(VDragAndDropWrapper.this),"file" + fileId,object.toString(),true);
            }
          }
);
        }
      }
);
    }
  }
  String fileAsString=event.getFileAsString(0);
  if (fileAsString != null) {
    ApplicationConnection.getConsole().log(fileAsString);
    transferable.setData("fileContents",fileAsString);
  }
  VDragAndDropManager.get().endDrag();
  vaadinDragEvent=null;
  event.preventDefault();
  event.stopPropagation();
  return false;
}
