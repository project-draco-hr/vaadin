{
  final boolean thc=datefield.getDateTimeService().isTwelveHourClock();
  if (redraw) {
    clear();
    final int numHours=thc ? 12 : 24;
    hours=new ListBox();
    hours.setStyleName(VNativeSelect.CLASSNAME);
    for (int i=0; i < numHours; i++) {
      hours.addItem((i < 10) ? "0" + i : "" + i);
    }
    hours.addChangeHandler(this);
    if (thc) {
      ampm=new ListBox();
      ampm.setStyleName(VNativeSelect.CLASSNAME);
      final String[] ampmText=datefield.getDateTimeService().getAmPmStrings();
      ampm.addItem(ampmText[0]);
      ampm.addItem(ampmText[1]);
      ampm.addChangeHandler(this);
    }
    if (datefield.getCurrentResolution() >= VDateField.RESOLUTION_MIN) {
      mins=new ListBox();
      mins.setStyleName(VNativeSelect.CLASSNAME);
      for (int i=0; i < 60; i++) {
        mins.addItem((i < 10) ? "0" + i : "" + i);
      }
      mins.addChangeHandler(this);
    }
    if (datefield.getCurrentResolution() >= VDateField.RESOLUTION_SEC) {
      sec=new ListBox();
      sec.setStyleName(VNativeSelect.CLASSNAME);
      for (int i=0; i < 60; i++) {
        sec.addItem((i < 10) ? "0" + i : "" + i);
      }
      sec.addChangeHandler(this);
    }
    if (datefield.getCurrentResolution() == VDateField.RESOLUTION_MSEC) {
      msec=new ListBox();
      msec.setStyleName(VNativeSelect.CLASSNAME);
      for (int i=0; i < 1000; i++) {
        if (i < 10) {
          msec.addItem("00" + i);
        }
 else         if (i < 100) {
          msec.addItem("0" + i);
        }
 else {
          msec.addItem("" + i);
        }
      }
      msec.addChangeHandler(this);
    }
    final String delimiter=datefield.getDateTimeService().getClockDelimeter();
    final boolean ro=datefield.isReadonly();
    if (ro) {
      int h=0;
      if (datefield.getCurrentDate() != null) {
        h=datefield.getCurrentDate().getHours();
      }
      if (thc) {
        h-=h < 12 ? 0 : 12;
      }
      add(new VLabel(h < 10 ? "0" + h : "" + h));
    }
 else {
      add(hours);
    }
    if (datefield.getCurrentResolution() >= VDateField.RESOLUTION_MIN) {
      add(new VLabel(delimiter));
      if (ro) {
        final int m=mins.getSelectedIndex();
        add(new VLabel(m < 10 ? "0" + m : "" + m));
      }
 else {
        add(mins);
      }
    }
    if (datefield.getCurrentResolution() >= VDateField.RESOLUTION_SEC) {
      add(new VLabel(delimiter));
      if (ro) {
        final int s=sec.getSelectedIndex();
        add(new VLabel(s < 10 ? "0" + s : "" + s));
      }
 else {
        add(sec);
      }
    }
    if (datefield.getCurrentResolution() == VDateField.RESOLUTION_MSEC) {
      add(new VLabel("."));
      if (ro) {
        final int m=datefield.getMilliseconds();
        final String ms=m < 100 ? "0" + m : "" + m;
        add(new VLabel(m < 10 ? "0" + ms : ms));
      }
 else {
        add(msec);
      }
    }
    if (datefield.getCurrentResolution() == VDateField.RESOLUTION_HOUR) {
      add(new VLabel(delimiter + "00"));
    }
    if (thc) {
      add(new VLabel("&nbsp;"));
      if (ro) {
        add(new VLabel(ampm.getItemText(datefield.getCurrentDate().getHours() < 12 ? 0 : 1)));
      }
 else {
        add(ampm);
      }
    }
    if (ro) {
      return;
    }
  }
  Date cdate=datefield.getCurrentDate();
  boolean selected=true;
  if (cdate == null) {
    cdate=new Date();
    selected=false;
  }
  if (thc) {
    int h=cdate.getHours();
    ampm.setSelectedIndex(h < 12 ? 0 : 1);
    h-=ampm.getSelectedIndex() * 12;
    hours.setSelectedIndex(h);
  }
 else {
    hours.setSelectedIndex(cdate.getHours());
  }
  if (datefield.getCurrentResolution() >= VDateField.RESOLUTION_MIN) {
    mins.setSelectedIndex(cdate.getMinutes());
  }
  if (datefield.getCurrentResolution() >= VDateField.RESOLUTION_SEC) {
    sec.setSelectedIndex(cdate.getSeconds());
  }
  if (datefield.getCurrentResolution() == VDateField.RESOLUTION_MSEC) {
    if (selected) {
      msec.setSelectedIndex(datefield.getMilliseconds());
    }
 else {
      msec.setSelectedIndex(0);
    }
  }
  if (thc) {
    ampm.setSelectedIndex(cdate.getHours() < 12 ? 0 : 1);
  }
  if (datefield.isReadonly() && !redraw) {
    clear();
    final String delimiter=datefield.getDateTimeService().getClockDelimeter();
    int h=cdate.getHours();
    if (thc) {
      h-=h < 12 ? 0 : 12;
    }
    add(new VLabel(h < 10 ? "0" + h : "" + h));
    if (datefield.getCurrentResolution() >= VDateField.RESOLUTION_MIN) {
      add(new VLabel(delimiter));
      final int m=mins.getSelectedIndex();
      add(new VLabel(m < 10 ? "0" + m : "" + m));
    }
    if (datefield.getCurrentResolution() >= VDateField.RESOLUTION_SEC) {
      add(new VLabel(delimiter));
      final int s=sec.getSelectedIndex();
      add(new VLabel(s < 10 ? "0" + s : "" + s));
    }
    if (datefield.getCurrentResolution() == VDateField.RESOLUTION_MSEC) {
      add(new VLabel("."));
      final int m=datefield.getMilliseconds();
      final String ms=m < 100 ? "0" + m : "" + m;
      add(new VLabel(m < 10 ? "0" + ms : ms));
    }
    if (datefield.getCurrentResolution() == VDateField.RESOLUTION_HOUR) {
      add(new VLabel(delimiter + "00"));
    }
    if (thc) {
      add(new VLabel("&nbsp;"));
      add(new VLabel(ampm.getItemText(cdate.getHours() < 12 ? 0 : 1)));
    }
  }
  final boolean enabled=datefield.isEnabled();
  hours.setEnabled(enabled);
  if (mins != null) {
    mins.setEnabled(enabled);
  }
  if (sec != null) {
    sec.setEnabled(enabled);
  }
  if (msec != null) {
    msec.setEnabled(enabled);
  }
  if (ampm != null) {
    ampm.setEnabled(enabled);
  }
}
