{
  final String pid=error.get("id").isString().stringValue();
  final Paintable paintable=ac.getPaintable(pid);
  TreeItem errorNode=new TreeItem();
  VerticalPanel errorDetails=new VerticalPanel();
  errorDetails.add(new Label("Error in " + Util.getSimpleName(paintable) + " id: "+ pid));
  if (error.containsKey("heightMsg")) {
    errorDetails.add(new Label("Height error: " + error.get("heightMsg")));
  }
  if (error.containsKey("widthMsg")) {
    errorDetails.add(new Label("Width error: " + error.get("widthMsg")));
  }
  final CheckBox emphasisInUi=new CheckBox("Emphasis component in UI");
  emphasisInUi.addClickListener(new ClickListener(){
    public void onClick(    Widget sender){
      if (paintable != null) {
        Element element2=((Widget)paintable).getElement();
        Widget.setStyleName(element2,"invalidlayout",emphasisInUi.isChecked());
      }
    }
  }
);
  errorDetails.add(emphasisInUi);
  errorNode.setWidget(errorDetails);
  if (error.containsKey("subErrors")) {
    HTML l=new HTML("<em>Expand this tree node to show errors that may be dependent about this error</em>");
    errorDetails.add(l);
    JSONArray array=error.get("subErrors").isArray();
    for (int i=0; i < array.size(); i++) {
      JSONValue value=array.get(i);
      if (value != null && value.isObject() != null) {
        printLayoutError(value.isObject(),errorNode,ac);
      }
 else {
        System.out.print(value);
      }
    }
  }
  parent.addItem(errorNode);
}
