{
  if (request.getParameter(SERVER_COMMAND_PARAM) == null)   return false;
  Application application;
  try {
    application=getApplication(request);
  }
 catch (  MalformedURLException e) {
    return false;
  }
  if (application == null)   return false;
  try {
    PrintWriter w=new PrintWriter(response.getOutputStream());
    w.println("<html><head></head><body>");
    for (int i=0; i < SERVER_COMMAND_HEADER_PADDING; i++)     w.print(' ');
    Object lock=new Object();
synchronized (applicationToServerCommandStreamLock) {
      Object oldlock=applicationToServerCommandStreamLock.get(application);
      if (oldlock != null) synchronized (oldlock) {
        oldlock.notifyAll();
      }
      applicationToServerCommandStreamLock.put(application,lock);
    }
    while (applicationToServerCommandStreamLock.get(application) == lock && application.isRunning()) {
synchronized (application) {
        Date lastRequest=(Date)applicationToLastRequestDate.get(application);
        if (lastRequest != null && lastRequest.getTime() + request.getSession().getMaxInactiveInterval() * 1000 < System.currentTimeMillis()) {
          application.close();
        }
 else {
          Map dws=getDirtyWindows(application);
          if (dws != null && !dws.isEmpty()) {
            Window win=(Window)dws.keySet().iterator().next();
            w.println("<script>\n" + ThemeFunctionLibrary.getWindowRefreshScript(application,win,WebBrowserProbe.getTerminalType(request.getSession())) + "</script>");
            removeDirtyWindow(application,win);
            if (win.getApplication() == null || !win.isVisible())             win.requestRepaintRequests();
          }
        }
      }
      w.println(" ");
      w.flush();
      response.flushBuffer();
synchronized (lock) {
        try {
          lock.wait(SERVER_COMMAND_STREAM_MAINTAIN_PERIOD);
        }
 catch (        InterruptedException ignored) {
        }
      }
    }
  }
 catch (  IOException ignore) {
synchronized (applicationToServerCommandStreamLock) {
      if (applicationToServerCommandStreamLock.get(application) == application)       applicationToServerCommandStreamLock.remove(application);
    }
  }
  return true;
}
