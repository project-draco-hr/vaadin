{
  if (propertyId.contains(".")) {
    String[] parts=propertyId.split("\\.",2);
    java.lang.reflect.Field field1=getField(cls,parts[0]);
    return getField(field1.getType(),parts[1]);
  }
 else {
    try {
      java.lang.reflect.Field field1=cls.getDeclaredField(propertyId);
      return field1;
    }
 catch (    NoSuchFieldError e) {
      Class<?> superClass=cls.getSuperclass();
      if (superClass != null && superClass != Object.class) {
        return getField(superClass,propertyId);
      }
 else {
        throw e;
      }
    }
  }
}
