{
  super.onBrowserEvent(e);
  if (DOM.eventGetType(e) == Event.ONLOAD) {
    requestLayout();
    return;
  }
  Element targetElement=DOM.eventGetTarget(e);
  CustomMenuItem targetItem=null;
  for (int i=0; i < items.size(); i++) {
    CustomMenuItem item=items.get(i);
    if (DOM.isOrHasChild(item.getElement(),targetElement)) {
      targetItem=item;
    }
  }
  if (targetItem == null && client != null) {
    client.handleTooltipEvent(e,this);
  }
 else {
    targetItem.onBrowserEvent(e);
  }
  if (targetItem != null) {
switch (DOM.eventGetType(e)) {
case Event.ONCLICK:
      if (isEnabled() && targetItem.isEnabled()) {
        itemClick(targetItem);
      }
    if (subMenu) {
      VMenuBar parent=parentMenu;
      while (parent.getParentMenu() != null) {
        parent=parent.getParentMenu();
      }
      parent.setFocus(true);
    }
  break;
case Event.ONMOUSEOVER:
if (isEnabled() && targetItem.isEnabled()) {
  itemOver(targetItem);
}
break;
case Event.ONMOUSEOUT:
itemOut(targetItem);
break;
}
}
 else if (subMenu && DOM.eventGetType(e) == Event.ONCLICK && subMenu) {
VMenuBar parent=parentMenu;
while (parent.getParentMenu() != null) {
parent=parent.getParentMenu();
}
parent.setFocus(true);
}
}
