{
  rendering=true;
  if (client.updateComponent(this,uidl,true)) {
    rendering=false;
    return;
  }
  this.client=client;
  final UIDL child=uidl.getChildUIDL(0);
  if (child != null) {
    final VPaintableWidget paintable=client.getPaintable(child);
    Widget widget=paintable.getWidgetForPaintable();
    if (widget != getWidget()) {
      if (getWidget() != null) {
        client.unregisterPaintable(VPaintableMap.get(client).getPaintable(getWidget()));
        clear();
      }
      setWidget(widget);
    }
    paintable.updateFromUIDL(child,client);
  }
  boolean updateDynamicSize=updateDynamicSize();
  if (updateDynamicSize) {
    Scheduler.get().scheduleDeferred(new Command(){
      public void execute(){
        client.handleComponentRelativeSize(VCustomComponent.this);
      }
    }
);
  }
  renderSpace.setWidth(getElement().getOffsetWidth());
  renderSpace.setHeight(getElement().getOffsetHeight());
  client.runDescendentsLayout(this);
  rendering=false;
}
