{
  Map<String,Object> headers=new LinkedHashMap<String,Object>();
  BootstrapContext context=createContext(request,response,application,rootId,headers);
  DeploymentConfiguration deploymentConfiguration=request.getDeploymentConfiguration();
  boolean standalone=deploymentConfiguration.isStandalone(request);
  if (standalone) {
    setBootstrapPageHeaders(context);
    setBasicHtml(context);
    setBootstrapPageHtmlHeader(context);
    setBodyTag(context);
  }
  setBootstrapPageHtmlVaadinScripts(context);
  setMainDiv(context);
  request.getDeploymentConfiguration().getVaadinContext().fireModifyBootstrapEvent(context.getBootstrapResponse());
  response.setContentType("text/html");
  BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(response.getOutputStream(),"UTF-8"));
  if (standalone) {
    Set<Entry<String,Object>> entrySet=headers.entrySet();
    for (    Entry<String,Object> header : entrySet) {
      Object value=header.getValue();
      if (value instanceof String) {
        response.setHeader(header.getKey(),(String)value);
      }
 else       if (value instanceof Long) {
        response.setDateHeader(header.getKey(),((Long)value).longValue());
      }
 else {
        throw new RuntimeException("Unsupported header value: " + value);
      }
    }
    writer.append(context.getBootstrapResponse().getDocument().outerHtml());
  }
 else {
    writer.append(context.getBootstrapResponse().getApplicationTag().outerHtml());
  }
  writer.close();
}
