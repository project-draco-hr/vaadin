{
  final ServletContext sc=getServletContext();
  URL resourceUrl=findResourceURL(filename,sc);
  if (resourceUrl == null) {
    if (serveOnTheFlyCompiledScss(filename,request,response,sc)) {
      return;
    }
 else {
      getLogger().info("Requested resource [" + filename + "] not found from filesystem or through class loader."+ " Add widgetset and/or theme JAR to your classpath or add files to WebContent/VAADIN folder.");
      response.setStatus(HttpServletResponse.SC_NOT_FOUND);
    }
    return;
  }
  if (!isAllowedVAADINResourceUrl(request,resourceUrl)) {
    getLogger().info("Requested resource [" + filename + "] not accessible in the VAADIN directory or access to it is forbidden.");
    response.setStatus(HttpServletResponse.SC_FORBIDDEN);
    return;
  }
  long lastModifiedTime=0;
  URLConnection connection=null;
  try {
    connection=resourceUrl.openConnection();
    lastModifiedTime=connection.getLastModified();
    lastModifiedTime=lastModifiedTime - lastModifiedTime % 1000;
    if (browserHasNewestVersion(request,lastModifiedTime)) {
      response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
      return;
    }
  }
 catch (  Exception e) {
    getLogger().log(Level.FINEST,"Failed to find out last modified timestamp. Continuing without it.",e);
  }
 finally {
    if (connection instanceof URLConnection) {
      try {
        InputStream is=connection.getInputStream();
        if (is != null) {
          is.close();
        }
      }
 catch (      IOException e) {
        getLogger().log(Level.INFO,"Error closing URLConnection input stream",e);
      }
    }
  }
  final String mimetype=sc.getMimeType(filename);
  if (mimetype != null) {
    response.setContentType(mimetype);
  }
  if (lastModifiedTime > 0) {
    response.setDateHeader("Last-Modified",lastModifiedTime);
    int resourceCacheTime=getService().getDeploymentConfiguration().getResourceCacheTime();
    String cacheControl="max-age=" + String.valueOf(resourceCacheTime);
    if (filename.contains("nocache")) {
      cacheControl="public, max-age=0, must-revalidate";
    }
    response.setHeader("Cache-Control",cacheControl);
  }
  writeStaticResourceResponse(request,response,resourceUrl);
}
