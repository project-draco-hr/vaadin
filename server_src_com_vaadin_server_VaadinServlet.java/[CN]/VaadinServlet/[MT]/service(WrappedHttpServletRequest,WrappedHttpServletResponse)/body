{
  RequestTimer requestTimer=new RequestTimer();
  requestTimer.start();
  getVaadinService().setCurrentInstances(request,response);
  AbstractApplicationServletWrapper servletWrapper=new AbstractApplicationServletWrapper(this);
  RequestType requestType=getRequestType(request);
  if (!ensureCookiesEnabled(requestType,request,response)) {
    return;
  }
  if (requestType == RequestType.STATIC_FILE) {
    serveStaticResources(request,response);
    return;
  }
  VaadinSession application=null;
  boolean applicationRunning=false;
  try {
    if (requestType == RequestType.UIDL && request.getParameterMap().containsKey(ApplicationConstants.PARAM_UNLOADBURST) && request.getContentLength() < 1 && getVaadinService().getExistingSession(request,false) == null) {
      redirectToApplication(request,response);
      return;
    }
    application=getVaadinService().findVaadinSession(request);
    if (application == null) {
      return;
    }
    request.setAttribute(VaadinSession.class.getName(),application);
    VaadinSession.setCurrent(application);
    VaadinServletSession webApplicationContext=(VaadinServletSession)application;
    CommunicationManager applicationManager=(CommunicationManager)webApplicationContext.getApplicationManager();
    if (requestType == RequestType.CONNECTOR_RESOURCE) {
      applicationManager.serveConnectorResource(request,response);
      return;
    }
 else     if (requestType == RequestType.HEARTBEAT) {
      applicationManager.handleHeartbeatRequest(request,response,application);
      return;
    }
    webApplicationContext.getBrowser().updateRequestDetails(request);
    applicationRunning=true;
    if (requestType == RequestType.FILE_UPLOAD) {
      applicationManager.handleFileUpload(application,request,response);
      return;
    }
 else     if (requestType == RequestType.UIDL) {
      UI uI=application.getUIForRequest(request);
      if (uI == null) {
        throw new ServletException(ERROR_NO_UI_FOUND);
      }
      applicationManager.handleUidlRequest(request,response,servletWrapper,uI);
      return;
    }
 else     if (requestType == RequestType.BROWSER_DETAILS) {
      applicationManager.handleBrowserDetailsRequest(request,response,application);
      return;
    }
    if (applicationManager.handleApplicationRequest(request,response)) {
      return;
    }
  }
 catch (  final SessionExpiredException e) {
    handleServiceSessionExpired(request,response);
  }
catch (  final GeneralSecurityException e) {
    handleServiceSecurityException(request,response);
  }
catch (  final Throwable e) {
    handleServiceException(request,response,application,e);
  }
 finally {
    if (applicationRunning) {
      application.cleanupInactiveUIs();
    }
    CurrentInstance.clearAll();
    if (application != null) {
      requestTimer.stop(application);
    }
  }
}
