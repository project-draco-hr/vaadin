{
  getService().requestStart(request,response);
  VaadinSession vaadinSession=null;
  try {
    AbstractApplicationServletWrapper servletWrapper=new AbstractApplicationServletWrapper(this);
    RequestType requestType=getRequestType(request);
    if (!ensureCookiesEnabled(requestType,request,response)) {
      return;
    }
    if (requestType == RequestType.STATIC_FILE) {
      serveStaticResources(request,response);
      return;
    }
    try {
      vaadinSession=getService().findVaadinSession(request);
      if (vaadinSession == null) {
        return;
      }
      if (requestType == RequestType.PUBLISHED_FILE) {
        new PublishedFileHandler().handleRequest(vaadinSession,request,response);
        return;
      }
 else       if (requestType == RequestType.HEARTBEAT) {
        new HeartbeatHandler().handleRequest(vaadinSession,request,response);
        return;
      }
 else       if (requestType == RequestType.FILE_UPLOAD) {
        new FileUploadHandler().handleRequest(vaadinSession,request,response);
        return;
      }
 else       if (requestType == RequestType.UIDL) {
        new UidlRequestHandler(servletWrapper).handleRequest(vaadinSession,request,response);
        return;
      }
 else       if (requestType == RequestType.BROWSER_DETAILS) {
        new UIInitHandler().handleRequest(vaadinSession,request,response);
        return;
      }
 else       if (new SessionRequestHandler().handleRequest(vaadinSession,request,response)) {
        return;
      }
      response.sendError(HttpServletResponse.SC_NOT_FOUND);
    }
 catch (    final SessionExpiredException e) {
      handleServiceSessionExpired(request,response);
    }
catch (    final Throwable e) {
      handleServiceException(request,response,vaadinSession,e);
    }
  }
  finally {
    getService().requestEnd(request,response,vaadinSession);
  }
}
