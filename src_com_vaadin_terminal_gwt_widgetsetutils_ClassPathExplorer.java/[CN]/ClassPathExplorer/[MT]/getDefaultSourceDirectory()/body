{
  if (logger.isLoggable(Level.FINE)) {
    logger.fine("classpathLocations values:");
    ArrayList<String> locations=new ArrayList<String>(classpathLocations.keySet());
    for (    String location : locations) {
      logger.fine(String.valueOf(classpathLocations.get(location)));
    }
  }
  Iterator<String> it=rawClasspathEntries.iterator();
  while (it.hasNext()) {
    String entry=it.next();
    File directory=new File(entry);
    if (directory.exists() && !directory.isHidden() && directory.isDirectory()) {
      try {
        return new URL("file://" + directory.getCanonicalPath());
      }
 catch (      MalformedURLException e) {
        logger.log(Level.FINEST,"Ignoring exception",e);
      }
catch (      IOException e) {
        logger.log(Level.FINEST,"Ignoring exception",e);
      }
    }
  }
  return null;
}
