{
  Layout baseLayout=getBaseLayout();
  VerticalLayout vlo=getTestLaytout();
  AbstractComponent[] components=new AbstractComponent[4];
  components[0]=new Label("LABEL");
  components[0].setSizeUndefined();
  components[1]=new Button("BUTTON");
  components[2]=getTestTable();
  components[3]=getTestTabsheet();
  components[3].setIcon(new ThemeResource(LOCK_16_PNG));
  AbstractField[] fields=new AbstractField[6];
  fields[0]=new TextField();
  fields[0].setRequired(true);
  fields[0].setValidationVisible(true);
  fields[0].setRequiredError("required error");
  fields[1]=new TextField();
  fields[1].setValue("TEXTFIELD2");
  fields[1].setComponentError(new UserError("component error, user error"));
  fields[2]=new Select();
  fields[2].setComponentError(new SystemError("component error, system error"));
  fields[3]=new DateField();
  fields[3].setComponentError(new SystemError("component error, system error"));
  fields[4]=new CheckBox();
  fields[4].setComponentError(new UserError("component error, user error"));
  fields[5]=new NativeSelect();
  fields[5].setRequired(true);
  fields[5].setValidationVisible(true);
  fields[5].setRequiredError("required error");
  fields[5].setComponentError(new UserError("component error, user error"));
  fields[5].setIcon(new ThemeResource(CALENDAR_32_PNG));
  for (int i=0; i < components.length; i++) {
    components[i].setComponentError(new UserError("component error, user error"));
    vlo.addComponent(components[i]);
  }
  baseLayout.addComponent(vlo);
  final VerticalLayout vlo2=getTestLaytout();
  for (int i=0; i < fields.length; i++) {
    vlo2.addComponent(fields[i]);
  }
  baseLayout.addComponent(vlo2);
  return baseLayout;
}
