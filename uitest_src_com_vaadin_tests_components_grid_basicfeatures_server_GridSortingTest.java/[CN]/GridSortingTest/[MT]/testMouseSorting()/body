{
  setDebug(true);
  openTestURL();
  GridElement grid=getGridElement();
  selectMenuPath("Component","Columns","Column 9","Column 9 Width","Auto");
  GridCellElement header=grid.getHeaderCell(0,9);
  header.click();
  assertLastSortIsUserOriginated(true);
  assertColumnsAreSortedAs(_(9,1,SortDirection.ASCENDING));
  grid.getHeaderCell(0,9).click();
  assertColumnsAreSortedAs(_(9,1,SortDirection.DESCENDING));
  String row="";
  for (int i=0; i < 3; ++i) {
    row+="9";
    String expected="(" + row + ", 0)";
    String actual=grid.getCell(i,0).getText();
    assertEquals("Grid is not sorted by Column 9" + " using descending direction.",expected,actual);
  }
  selectMenuPath("Component","Columns","Column 10","Column 10 Width","Auto");
  grid.getHeaderCell(0,10).click();
  assertColumnsAreSortedAs(_(10,1,SortDirection.ASCENDING));
  for (int i=0; i < 5; ++i) {
    Integer firstRow=Integer.valueOf(grid.getCell(i + 1,10).getText());
    Integer secondRow=Integer.valueOf(grid.getCell(i,10).getText());
    assertGreater("Grid is not sorted by Column 10 using ascending direction",firstRow,secondRow);
  }
  selectMenuPath("Component","Columns","Column 7","Column 7 Width","Auto");
  grid.getHeaderCell(0,7).click();
  assertColumnsAreSortedAs(_(7,1,SortDirection.ASCENDING));
  grid.getHeaderCell(0,7).click();
  assertColumnsAreSortedAs(_(7,1,SortDirection.DESCENDING));
  for (int i=0; i < 3; ++i) {
    assertEquals("Grid is not sorted by Column 7 using descending direction","(" + i + ", 0)",grid.getCell(GridBasicFeatures.ROWS - (i + 1),0).getText());
  }
}
