{
  String parts[]=path.split(PARENTCHILD_SEPARATOR);
  Element element=baseElement;
  for (int i=0, l=parts.length; i < l; ++i) {
    String part=parts[i];
    if (part.startsWith("domChild[")) {
      String childIndexString=part.substring("domChild[".length(),part.length() - 1);
      if (Util.findWidget(baseElement,null) instanceof VAbstractOrderedLayout) {
        if (element.hasChildNodes()) {
          Element e=element.getFirstChildElement().cast();
          String cn=e.getClassName();
          if (cn != null && (cn.equals("v-expand") || cn.contains("v-has-caption"))) {
            element=e;
          }
        }
      }
      try {
        int childIndex=Integer.parseInt(childIndexString);
        element=DOM.getChild(element,childIndex);
      }
 catch (      Exception e) {
        return null;
      }
      if (element == null) {
        return null;
      }
    }
 else {
      path=parts[i];
      for (int j=i + 1; j < l; ++j) {
        path+=PARENTCHILD_SEPARATOR + parts[j];
      }
      return getElementByPathStartingAt(path,element);
    }
  }
  return element;
}
