{
  setMargin(true);
  setSpacing(true);
  Label h1=new Label("Dragging Components");
  h1.addStyleName(ValoTheme.LABEL_H1);
  addComponent(h1);
  MenuBar options=new MenuBar();
  options.setCaption("Drop Hints");
  addComponent(options);
  MenuItem opt=options.addItem("Vertical",new MenuBar.Command(){
    @Override public void menuSelected(    MenuItem selectedItem){
      if (selectedItem.isChecked()) {
        sample.removeStyleName(ValoTheme.DRAG_AND_DROP_WRAPPER_NO_VERTICAL_DRAG_HINTS);
      }
 else {
        sample.addStyleName(ValoTheme.DRAG_AND_DROP_WRAPPER_NO_VERTICAL_DRAG_HINTS);
      }
    }
  }
);
  opt.setCheckable(true);
  opt.setChecked(true);
  opt=options.addItem("Horizontal",new MenuBar.Command(){
    @Override public void menuSelected(    MenuItem selectedItem){
      if (selectedItem.isChecked()) {
        sample.removeStyleName(ValoTheme.DRAG_AND_DROP_WRAPPER_NO_HORIZONTAL_DRAG_HINTS);
      }
 else {
        sample.addStyleName(ValoTheme.DRAG_AND_DROP_WRAPPER_NO_HORIZONTAL_DRAG_HINTS);
      }
    }
  }
);
  opt.setCheckable(true);
  opt.setChecked(true);
  opt=options.addItem("Box",new MenuBar.Command(){
    @Override public void menuSelected(    MenuItem selectedItem){
      if (selectedItem.isChecked()) {
        sample.removeStyleName(ValoTheme.DRAG_AND_DROP_WRAPPER_NO_BOX_DRAG_HINTS);
      }
 else {
        sample.addStyleName(ValoTheme.DRAG_AND_DROP_WRAPPER_NO_BOX_DRAG_HINTS);
      }
    }
  }
);
  opt.setCheckable(true);
  opt.setChecked(true);
  sample=new SortableLayout();
  sample.setSizeUndefined();
  sample.setHeight("100px");
  for (  final Component component : createComponents()) {
    sample.addComponent(component);
  }
  addComponent(sample);
}
