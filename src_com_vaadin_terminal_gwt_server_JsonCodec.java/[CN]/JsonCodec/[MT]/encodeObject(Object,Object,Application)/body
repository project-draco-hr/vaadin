{
  JSONObject jsonMap=new JSONObject();
  try {
    for (    PropertyDescriptor pd : Introspector.getBeanInfo(value.getClass()).getPropertyDescriptors()) {
      String fieldName=getTransportFieldName(pd);
      if (fieldName == null) {
        continue;
      }
      Method getterMethod=pd.getReadMethod();
      Type fieldType=getterMethod.getGenericReturnType();
      Object fieldValue=getterMethod.invoke(value,(Object[])null);
      boolean equals=false;
      Object referenceFieldValue=null;
      if (referenceValue != null) {
        referenceFieldValue=getterMethod.invoke(referenceValue,(Object[])null);
        equals=equals(fieldValue,referenceFieldValue);
      }
      if (!equals) {
        if (jsonMap.has(fieldName)) {
          throw new RuntimeException("Can't encode " + value.getClass().getName() + " as it has multiple fields with the name "+ fieldName.toLowerCase()+ ". This can happen if only casing distinguishes one property name from another.");
        }
        jsonMap.put(fieldName,encode(fieldValue,referenceFieldValue,fieldType,application));
      }
    }
  }
 catch (  Exception e) {
    throw new JSONException(e);
  }
  return jsonMap;
}
