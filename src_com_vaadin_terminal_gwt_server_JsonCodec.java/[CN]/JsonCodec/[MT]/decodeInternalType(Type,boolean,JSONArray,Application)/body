{
  if (!isInternalType(targetType)) {
    throw new JSONException("Cannot decode internal type. Type " + targetType + " is not supported.");
  }
  String transportType=getInternalTransportType(targetType);
  String encodedTransportType=valueAndType.getString(0);
  if (!encodedTransportType.equals(transportType)) {
    throw new JSONException("Expected a value of type " + transportType + ", received "+ encodedTransportType);
  }
  Object encodedJsonValue=valueAndType.get(1);
  if (JsonEncoder.VTYPE_LIST.equals(transportType)) {
    return (T)decodeList(targetType,restrictToInternalTypes,(JSONArray)encodedJsonValue,application);
  }
 else   if (JsonEncoder.VTYPE_SET.equals(transportType)) {
    return (T)decodeSet(targetType,restrictToInternalTypes,(JSONArray)encodedJsonValue,application);
  }
 else   if (JsonEncoder.VTYPE_MAP_CONNECTOR.equals(transportType)) {
    return (T)decodeConnectorToObjectMap(targetType,restrictToInternalTypes,(JSONObject)encodedJsonValue,application);
  }
 else   if (JsonEncoder.VTYPE_MAP.equals(transportType)) {
    return (T)decodeStringToObjectMap(targetType,restrictToInternalTypes,(JSONObject)encodedJsonValue,application);
  }
  if (JsonEncoder.VTYPE_ARRAY.equals(transportType)) {
    return (T)decodeObjectArray(targetType,(JSONArray)encodedJsonValue,application);
  }
 else   if (JsonEncoder.VTYPE_STRINGARRAY.equals(transportType)) {
    return (T)decodeStringArray((JSONArray)encodedJsonValue);
  }
  String stringValue=String.valueOf(encodedJsonValue);
  if (JsonEncoder.VTYPE_CONNECTOR.equals(transportType)) {
    return (T)application.getConnector(stringValue);
  }
  if (JsonEncoder.VTYPE_STRING.equals(transportType)) {
    return (T)stringValue;
  }
 else   if (JsonEncoder.VTYPE_INTEGER.equals(transportType)) {
    return (T)Integer.valueOf(stringValue);
  }
 else   if (JsonEncoder.VTYPE_LONG.equals(transportType)) {
    return (T)Long.valueOf(stringValue);
  }
 else   if (JsonEncoder.VTYPE_FLOAT.equals(transportType)) {
    return (T)Float.valueOf(stringValue);
  }
 else   if (JsonEncoder.VTYPE_DOUBLE.equals(transportType)) {
    return (T)Double.valueOf(stringValue);
  }
 else   if (JsonEncoder.VTYPE_BOOLEAN.equals(transportType)) {
    return (T)Boolean.valueOf(stringValue);
  }
 else   if (JsonEncoder.VTYPE_NULL.equals(transportType)) {
    return null;
  }
  throw new JSONException("Unknown type " + transportType);
}
