{
  final String name=getName();
  target.addAttribute("name",name == null ? "" : name);
  final String theme=getTheme();
  target.addAttribute("theme",theme == null ? "" : theme);
  if (modal) {
    target.addAttribute("modal",true);
  }
  if (getApplication() != null && this == getApplication().getMainWindow()) {
    target.addAttribute("main",true);
  }
synchronized (openList) {
    if (!openList.isEmpty()) {
      for (final Iterator i=openList.iterator(); i.hasNext(); ) {
        ((OpenResource)i.next()).paintContent(target);
      }
      openList.clear();
    }
  }
  super.paintContent(target);
  target.addVariable(this,"positionx",getPositionX());
  target.addVariable(this,"positiony",getPositionY());
  target.addVariable(this,"scrolltop",getScrollTop());
  target.addVariable(this,"scrollleft",getScrollLeft());
  target.addVariable(this,"close",false);
  for (final Iterator i=subwindows.iterator(); i.hasNext(); ) {
    final Window w=(Window)i.next();
    w.paint(target);
  }
  if (notifications != null) {
    target.startTag("notifications");
    for (final Iterator it=notifications.iterator(); it.hasNext(); ) {
      final Notification n=(Notification)it.next();
      target.startTag("notification");
      if (n.getCaption() != null) {
        target.addAttribute("caption",n.getCaption());
      }
      if (n.getMessage() != null) {
        target.addAttribute("message",n.getMessage());
      }
      target.addAttribute("position",n.getPosition());
      target.addAttribute("delay",n.getDelayMsec());
      if (n.getStyleName() != null) {
        target.addAttribute("style",n.getStyleName());
      }
      target.endTag("notification");
    }
    target.endTag("notifications");
    notifications=null;
  }
}
