{
  Filter equalNull2=new Equal(PROPERTY1,null);
  Filter equalNullProperty2=new Equal(PROPERTY2,null);
  Filter equalEmpty=new Equal(PROPERTY1,"");
  Filter equalEmpty2=new Equal(PROPERTY1,"");
  Filter equalEmptyProperty2=new Equal(PROPERTY2,"");
  Filter equalA=new Equal(PROPERTY1,"a");
  Filter equalB2=new Equal(PROPERTY1,"b");
  Filter equalBProperty2=new Equal(PROPERTY2,"b");
  Filter greaterEmpty=new Greater(PROPERTY1,"");
  Assert.assertEquals(equalNull,equalNull);
  Assert.assertEquals(equalNull,equalNull2);
  Assert.assertFalse(equalNull.equals(equalNullProperty2));
  Assert.assertFalse(equalNull.equals(equalEmpty));
  Assert.assertFalse(equalNull.equals(equalB));
  Assert.assertEquals(equalEmpty,equalEmpty);
  Assert.assertFalse(equalEmpty.equals(equalNull));
  Assert.assertEquals(equalEmpty,equalEmpty2);
  Assert.assertFalse(equalEmpty.equals(equalEmptyProperty2));
  Assert.assertFalse(equalEmpty.equals(equalB));
  Assert.assertEquals(equalB,equalB);
  Assert.assertFalse(equalB.equals(equalNull));
  Assert.assertFalse(equalB.equals(equalEmpty));
  Assert.assertEquals(equalB,equalB2);
  Assert.assertFalse(equalB.equals(equalBProperty2));
  Assert.assertFalse(equalB.equals(equalA));
  Assert.assertEquals(greaterB,greaterB);
  Assert.assertFalse(greaterB.equals(lessB));
  Assert.assertFalse(greaterB.equals(greaterEqualB));
  Assert.assertFalse(greaterB.equals(lessEqualB));
  Assert.assertFalse(greaterNull.equals(greaterEmpty));
  Assert.assertFalse(greaterNull.equals(greaterB));
  Assert.assertFalse(greaterEmpty.equals(greaterNull));
  Assert.assertFalse(greaterEmpty.equals(greaterB));
  Assert.assertFalse(greaterB.equals(greaterNull));
  Assert.assertFalse(greaterB.equals(greaterEmpty));
  Assert.assertEquals(equalNull.hashCode(),equalNull2.hashCode());
  Assert.assertEquals(equalEmpty.hashCode(),equalEmpty2.hashCode());
  Assert.assertEquals(equalB.hashCode(),equalB2.hashCode());
}
