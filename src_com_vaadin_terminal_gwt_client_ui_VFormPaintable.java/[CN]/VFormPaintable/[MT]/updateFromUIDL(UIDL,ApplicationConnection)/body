{
  getWidget().client=client;
  getWidget().id=uidl.getId();
  super.updateFromUIDL(uidl,client);
  if (!isRealUpdate(uidl)) {
    return;
  }
  boolean legendEmpty=true;
  if (getState().getCaption() != null) {
    getWidget().caption.setInnerText(getState().getCaption());
    legendEmpty=false;
  }
 else {
    getWidget().caption.setInnerText("");
  }
  if (uidl.hasAttribute(ATTRIBUTE_ICON)) {
    if (getWidget().icon == null) {
      getWidget().icon=new Icon(client);
      getWidget().legend.insertFirst(getWidget().icon.getElement());
    }
    getWidget().icon.setUri(uidl.getStringAttribute(ATTRIBUTE_ICON));
    legendEmpty=false;
  }
 else {
    if (getWidget().icon != null) {
      getWidget().legend.removeChild(getWidget().icon.getElement());
    }
  }
  if (legendEmpty) {
    getWidget().addStyleDependentName("nocaption");
  }
 else {
    getWidget().removeStyleDependentName("nocaption");
  }
  if (uidl.hasAttribute("error")) {
    final UIDL errorUidl=uidl.getErrors();
    getWidget().errorMessage.updateFromUIDL(errorUidl);
    getWidget().errorMessage.setVisible(true);
  }
 else {
    getWidget().errorMessage.setVisible(false);
  }
  if (getState().hasDescription()) {
    getWidget().desc.setInnerHTML(getState().getDescription());
    if (getWidget().desc.getParentElement() == null) {
      getWidget().fieldSet.insertAfter(getWidget().desc,getWidget().legend);
    }
  }
 else {
    getWidget().desc.setInnerHTML("");
    if (getWidget().desc.getParentElement() != null) {
      getWidget().fieldSet.removeChild(getWidget().desc);
    }
  }
  if (uidl.getChildCount() > 1 && !uidl.getChildUIDL(1).getTag().equals("actions")) {
    ComponentConnector newFooter=client.getPaintable(uidl.getChildUIDL(1));
    Widget newFooterWidget=newFooter.getWidget();
    if (getWidget().footer == null) {
      getWidget().add(newFooter.getWidget(),getWidget().footerContainer);
      getWidget().footer=newFooterWidget;
    }
 else     if (newFooter != getWidget().footer) {
      getWidget().remove(getWidget().footer);
      client.unregisterPaintable(ConnectorMap.get(getConnection()).getConnector(getWidget().footer));
      getWidget().add(newFooter.getWidget(),getWidget().footerContainer);
    }
    getWidget().footer=newFooterWidget;
    newFooter.updateFromUIDL(uidl.getChildUIDL(1),client);
  }
 else {
    if (getWidget().footer != null) {
      getWidget().remove(getWidget().footer);
      client.unregisterPaintable(ConnectorMap.get(getConnection()).getConnector(getWidget().footer));
    }
  }
  final UIDL layoutUidl=uidl.getChildUIDL(0);
  ComponentConnector newLayout=client.getPaintable(layoutUidl);
  Widget newLayoutWidget=newLayout.getWidget();
  if (getWidget().lo == null) {
    getWidget().lo=newLayoutWidget;
    getWidget().add(newLayoutWidget,getWidget().fieldContainer);
  }
 else   if (getWidget().lo != newLayoutWidget) {
    client.unregisterPaintable(ConnectorMap.get(getConnection()).getConnector(getWidget().lo));
    getWidget().remove(getWidget().lo);
    getWidget().lo=newLayoutWidget;
    getWidget().add(newLayoutWidget,getWidget().fieldContainer);
  }
  newLayout.updateFromUIDL(layoutUidl,client);
  client.runDescendentsLayout(getWidget());
  if (uidl.getChildCount() > 1) {
    UIDL childUidl=uidl.getChildByTagName("actions");
    if (childUidl != null) {
      if (getWidget().shortcutHandler == null) {
        getWidget().shortcutHandler=new ShortcutActionHandler(getId(),client);
        getWidget().keyDownRegistration=getWidget().addDomHandler(getWidget(),KeyDownEvent.getType());
      }
      getWidget().shortcutHandler.updateActionMap(childUidl);
    }
  }
 else   if (getWidget().shortcutHandler != null) {
    getWidget().keyDownRegistration.removeHandler();
    getWidget().shortcutHandler=null;
    getWidget().keyDownRegistration=null;
  }
}
