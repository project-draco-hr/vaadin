{
  getWidget().client=client;
  if (isRealUpdate(uidl) && !uidl.hasAttribute("hidden")) {
    UIDL acceptCrit=uidl.getChildByTagName("-ac");
    if (acceptCrit == null) {
      getWidget().dropHandler=null;
    }
 else {
      if (getWidget().dropHandler == null) {
        getWidget().dropHandler=getWidget().new CustomDropHandler();
      }
      getWidget().dropHandler.updateAcceptRules(acceptCrit);
    }
    Set<String> variableNames=uidl.getVariableNames();
    for (    String fileId : variableNames) {
      if (fileId.startsWith("rec-")) {
        String receiverUrl=uidl.getStringVariable(fileId);
        fileId=fileId.substring(4);
        if (getWidget().fileIdToReceiver == null) {
          getWidget().fileIdToReceiver=new HashMap<String,String>();
        }
        if ("".equals(receiverUrl)) {
          Integer id=Integer.parseInt(fileId);
          int indexOf=getWidget().fileIds.indexOf(id);
          if (indexOf != -1) {
            getWidget().files.remove(indexOf);
            getWidget().fileIds.remove(indexOf);
          }
        }
 else {
          if (getWidget().fileIdToReceiver.containsKey(fileId) && receiverUrl != null && !receiverUrl.equals(getWidget().fileIdToReceiver.get(fileId))) {
            VConsole.error("Overwriting file receiver mapping for fileId " + fileId + " . Old receiver URL: "+ getWidget().fileIdToReceiver.get(fileId)+ " New receiver URL: "+ receiverUrl);
          }
          getWidget().fileIdToReceiver.put(fileId,receiverUrl);
        }
      }
    }
    getWidget().startNextUpload();
    getWidget().dragStartMode=uidl.getIntAttribute(DragAndDropWrapperConstants.DRAG_START_MODE);
    getWidget().initDragStartMode();
    getWidget().html5DataFlavors=uidl.getMapAttribute(DragAndDropWrapperConstants.HTML5_DATA_FLAVORS);
    getWidget().hasTooltip=getState().description != null;
  }
}
