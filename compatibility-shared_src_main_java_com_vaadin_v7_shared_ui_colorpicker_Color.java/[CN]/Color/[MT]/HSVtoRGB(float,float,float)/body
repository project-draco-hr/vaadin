{
  int red=0;
  int green=0;
  int blue=0;
  if (saturation == 0) {
    red=green=blue=(int)(value * 255.0f + 0.5f);
  }
 else {
    float h=(hue - (float)Math.floor(hue)) * 6.0f;
    float f=h - (float)java.lang.Math.floor(h);
    float p=value * (1.0f - saturation);
    float q=value * (1.0f - saturation * f);
    float t=value * (1.0f - (saturation * (1.0f - f)));
switch ((int)h) {
case 0:
      red=(int)(value * 255.0f + 0.5f);
    green=(int)(t * 255.0f + 0.5f);
  blue=(int)(p * 255.0f + 0.5f);
break;
case 1:
red=(int)(q * 255.0f + 0.5f);
green=(int)(value * 255.0f + 0.5f);
blue=(int)(p * 255.0f + 0.5f);
break;
case 2:
red=(int)(p * 255.0f + 0.5f);
green=(int)(value * 255.0f + 0.5f);
blue=(int)(t * 255.0f + 0.5f);
break;
case 3:
red=(int)(p * 255.0f + 0.5f);
green=(int)(q * 255.0f + 0.5f);
blue=(int)(value * 255.0f + 0.5f);
break;
case 4:
red=(int)(t * 255.0f + 0.5f);
green=(int)(p * 255.0f + 0.5f);
blue=(int)(value * 255.0f + 0.5f);
break;
case 5:
red=(int)(value * 255.0f + 0.5f);
green=(int)(p * 255.0f + 0.5f);
blue=(int)(q * 255.0f + 0.5f);
break;
}
}
return 0xff000000 | (red << 16) | (green << 8)| (blue << 0);
}
