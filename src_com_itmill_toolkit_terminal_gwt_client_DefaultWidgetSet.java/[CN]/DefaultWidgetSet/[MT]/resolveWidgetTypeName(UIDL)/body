{
  final String tag=uidl.getTag();
  if ("button".equals(tag)) {
    if ("switch".equals(uidl.getStringAttribute("type"))) {
      return "com.itmill.toolkit.terminal.gwt.client.ui.ICheckBox";
    }
 else {
      return "com.itmill.toolkit.terminal.gwt.client.ui.IButton";
    }
  }
 else   if ("window".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.IWindow";
  }
 else   if ("orderedlayout".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.IOrderedLayout";
  }
 else   if ("label".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.ILabel";
  }
 else   if ("link".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.ILink";
  }
 else   if ("gridlayout".equals(tag)) {
    if (uidl.hasAttribute("height")) {
      return "com.itmill.toolkit.terminal.gwt.client.ui.absolutegrid.ISizeableGridLayout";
    }
 else {
      return "com.itmill.toolkit.terminal.gwt.client.ui.IGridLayout";
    }
  }
 else   if ("tree".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.ITree";
  }
 else   if ("select".equals(tag)) {
    if (uidl.hasAttribute("type")) {
      final String type=uidl.getStringAttribute("type");
      if (type.equals("twincol")) {
        return "com.itmill.toolkit.terminal.gwt.client.ui.ITwinColSelect";
      }
      if (type.equals("optiongroup")) {
        return "com.itmill.toolkit.terminal.gwt.client.ui.IOptionGroup";
      }
      if (type.equals("native")) {
        return "com.itmill.toolkit.terminal.gwt.client.ui.INativeSelect";
      }
      if (type.equals("list")) {
        return "com.itmill.toolkit.terminal.gwt.client.ui.IListSelect";
      }
    }
 else {
      if (uidl.hasAttribute("selectmode") && uidl.getStringAttribute("selectmode").equals("multi")) {
        return "com.itmill.toolkit.terminal.gwt.client.ui.IListSelect";
      }
 else {
        return "com.itmill.toolkit.terminal.gwt.client.ui.IFilterSelect";
      }
    }
  }
 else   if ("panel".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.IPanel";
  }
 else   if ("tabsheet".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.ITabsheet";
  }
 else   if ("accordion".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.IAccordion";
  }
 else   if ("embedded".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.IEmbedded";
  }
 else   if ("customlayout".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.ICustomLayout";
  }
 else   if ("customcomponent".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.ICustomComponent";
  }
 else   if ("textfield".equals(tag)) {
    if (uidl.getBooleanAttribute("richtext")) {
      return "com.itmill.toolkit.terminal.gwt.client.ui.richtextarea.IRichTextArea";
    }
 else     if (uidl.hasAttribute("multiline")) {
      return "com.itmill.toolkit.terminal.gwt.client.ui.ITextArea";
    }
 else     if (uidl.getBooleanAttribute("secret")) {
      return "com.itmill.toolkit.terminal.gwt.client.ui.IPasswordField";
    }
 else {
      return "com.itmill.toolkit.terminal.gwt.client.ui.ITextField";
    }
  }
 else   if ("table".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.IScrollTable";
  }
 else   if ("pagingtable".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.ITablePaging";
  }
 else   if ("datefield".equals(tag)) {
    if (uidl.hasAttribute("type")) {
      if ("inline".equals(uidl.getStringAttribute("type"))) {
        return "com.itmill.toolkit.terminal.gwt.client.ui.IDateFieldCalendar";
      }
 else       if ("popup".equals(uidl.getStringAttribute("type"))) {
        return "com.itmill.toolkit.terminal.gwt.client.ui.IPopupCalendar";
      }
    }
    return "com.itmill.toolkit.terminal.gwt.client.ui.IPopupCalendar";
  }
 else   if ("slider".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.ISlider";
  }
 else   if ("form".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.IForm";
  }
 else   if ("formlayout".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.IFormLayout";
  }
 else   if ("upload".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.IUpload";
  }
 else   if ("hsplitpanel".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.ISplitPanelHorizontal";
  }
 else   if ("vsplitpanel".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.ISplitPanelVertical";
  }
 else   if ("progressindicator".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.IProgressIndicator";
  }
 else   if ("expandlayout".equals(tag)) {
    if ("horizontal".equals(uidl.getStringAttribute("orientation"))) {
      return "com.itmill.toolkit.terminal.gwt.client.ui.IHorizontalExpandLayout";
    }
 else {
      return "com.itmill.toolkit.terminal.gwt.client.ui.IExpandLayout";
    }
  }
 else   if ("menubar".equals(tag)) {
    return "com.itmill.toolkit.terminal.gwt.client.ui.IMenuBar";
  }
  return "com.itmill.toolkit.terminal.gwt.client.ui.IUnknownComponent";
}
