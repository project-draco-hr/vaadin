{
switch (DOM.eventGetType(event)) {
case Event.ONMOUSEDOWN:
    dragging=true;
  moved=false;
colIndex=getColIndexByKey(cid);
DOM.setCapture(getElement());
System.out.println("Started column reordering");
this.headerX=tHead.getAbsoluteLeft();
DOM.eventPreventDefault(event);
break;
case Event.ONMOUSEUP:
dragging=false;
if (!moved) {
break;
}
System.out.println("Stopped column reordering");
tHead.removeSlotFocus();
if (closestSlot != colIndex && closestSlot != (colIndex + 1)) {
if (closestSlot > colIndex) reOrderColumn(cid,closestSlot - 1);
 else reOrderColumn(cid,closestSlot);
}
DOM.releaseCapture(getElement());
break;
case Event.ONMOUSEMOVE:
if (dragging) {
moved=true;
System.out.print("Dragging column, optimal index...");
int x=DOM.eventGetClientX(event);
int slotX=headerX;
closestSlot=colIndex;
int closestDistance=-1;
int start=0;
if (rowHeaders) {
start++;
}
for (int i=start; i <= columnWidths.size(); i++) {
if (i > 0) {
String colKey=getColKeyByIndex(i - 1);
slotX+=getColWidth(colKey);
}
int dist=Math.abs(x - slotX);
if (closestDistance == -1 || dist < closestDistance) {
closestDistance=dist;
closestSlot=i;
}
}
tHead.focusSlot(closestSlot);
System.out.println(closestSlot);
}
break;
default :
break;
}
}
