{
  lab=new Label("Label inside the component container");
  lab.setWidth(null);
  ComboBox componentContainerSelect=new ComboBox("Container"){
{
      pageLength=0;
    }
  }
;
  componentContainerSelect.setDebugId("componentContainerSelect");
  componentContainerSelect.setWidth("300px");
  componentContainerSelect.setImmediate(true);
  componentContainerSelect.setNullSelectionAllowed(false);
  for (  Class<? extends ComponentContainer> cls : VaadinClasses.getComponentContainers()) {
    if (cls == LoginForm.class || cls == CustomLayout.class || CustomComponent.class.isAssignableFrom(cls) || cls == PopupView.class || cls == Window.class || cls == UI.class) {
      continue;
    }
    componentContainerSelect.addItem(cls);
  }
  componentContainerSelect.addListener(new ValueChangeListener(){
    @Override @SuppressWarnings("unchecked") public void valueChange(    ValueChangeEvent event){
      ComponentContainer oldCC=cc;
      cc=createComponentContainer((Class<? extends ComponentContainer>)event.getProperty().getValue());
      cc.addComponent(lab);
      replaceComponent(oldCC,cc);
    }
  }
);
  componentContainerSelect.setValue(componentContainerSelect.getItemIds().iterator().next());
  Button but1=new Button("Move in and out of component container",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      cc.setVisible(!cc.isVisible());
      if (!cc.isVisible()) {
        getLayout().addComponent(lab);
        lab.setValue(((String)lab.getValue()).replace("inside","outside"));
      }
 else {
        cc.addComponent(lab);
        lab.setValue(((String)lab.getValue()).replace("outside","inside"));
      }
    }
  }
);
  addComponent(componentContainerSelect);
  addComponent(cc);
  addComponent(but1);
}
