{
  setMargin(true);
  final Panel panel=new Panel("Panel");
  panel.setStyleName("floatedpanel");
  panel.setWidth("30%");
  panel.setHeight("370px");
  panel.addComponent(new Label("This panel is 30% wide " + "and 370px high (defined on the server side) " + "and floated right (with custom css). "+ "Try resizing the browser window to see "+ "how the black boxes (floated left) "+ "behave. Every third of them has colored text "+ "to demonstrate the dynamic css injection."));
  final Label bottomCenter=new Label("I'm a 3 inches wide footer at the bottom of the layout");
  bottomCenter.setSizeUndefined();
  bottomCenter.setStyleName("footer");
  CssLayout cssLayout=new CssLayout(){
    int brickCounter=0;
    @Override protected String getCss(    Component c){
      if (c instanceof Brick) {
        brickCounter++;
        if (brickCounter % 3 == 0) {
          return "color: #ff6611; font-style: italic;";
        }
      }
      return null;
    }
  }
;
  cssLayout.setWidth("100%");
  cssLayout.addComponent(panel);
  for (int i=0; i < 15; i++) {
    cssLayout.addComponent(new Brick());
  }
  cssLayout.addComponent(bottomCenter);
  addComponent(cssLayout);
}
