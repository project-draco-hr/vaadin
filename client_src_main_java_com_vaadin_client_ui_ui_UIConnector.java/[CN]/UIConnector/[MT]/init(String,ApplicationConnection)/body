{
  Widget shortcutContextWidget=getWidget();
  if (applicationConnection.getConfiguration().isStandalone()) {
    shortcutContextWidget=RootPanel.get();
  }
  shortcutContextWidget.addDomHandler(new KeyDownHandler(){
    @Override public void onKeyDown(    KeyDownEvent event){
      if (getWidget().actionHandler != null) {
        Element target=Element.as(event.getNativeEvent().getEventTarget());
        if (target == Document.get().getBody() || getWidget().getElement().isOrHasChild(target)) {
          getWidget().actionHandler.handleKeyboardEvent((Event)event.getNativeEvent().cast());
        }
      }
    }
  }
,KeyDownEvent.getType());
  DOM.sinkEvents(getWidget().getElement(),Event.ONSCROLL);
  RootPanel root=RootPanel.get(rootPanelId);
  root.getElement().setInnerHTML("");
  activeTheme=applicationConnection.getConfiguration().getThemeName();
  root.addStyleName(activeTheme);
  root.add(getWidget());
  getWidget().setTabIndex(1);
  if (applicationConnection.getConfiguration().isStandalone()) {
    getWidget().getElement().focus();
  }
  applicationConnection.addHandler(ApplicationConnection.ApplicationStoppedEvent.TYPE,new ApplicationConnection.ApplicationStoppedHandler(){
    @Override public void onApplicationStopped(    ApplicationStoppedEvent event){
      if (pollTimer != null) {
        pollTimer.cancel();
        pollTimer=null;
      }
    }
  }
);
}
