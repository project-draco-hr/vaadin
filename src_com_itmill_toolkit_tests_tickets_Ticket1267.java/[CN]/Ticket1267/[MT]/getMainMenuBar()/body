{
  MenuBar menu=new MenuBar();
  MenuItem add=menu.addItem("Add component",null);
  MenuItem remove=menu.addItem("Remove component",null);
  MenuItem modify=menu.addItem("Modify component",null);
  MenuItem cPanel=menu.addItem("Show / hide control panel",null);
  cPanel.setCommand(new Command(){
    public void menuSelected(    MenuItem selectedItem){
      if (main.getChildWindows().contains(controlPanel)) {
        main.removeWindow(controlPanel);
      }
 else {
        main.addWindow(controlPanel);
      }
    }
  }
);
  final MenuItem margins=menu.addItem("Toggle margins",null);
  margins.setCommand(new Command(){
    boolean marginsEnabled=defaultmargins;
    public void menuSelected(    MenuItem selectedItem){
      if (marginsEnabled) {
        margins.setIcon(null);
        marginsEnabled=false;
        coordinateLayout.setMargin(false);
      }
 else {
        margins.setIcon(new ThemeResource("icons/16/ok.png"));
        marginsEnabled=true;
        coordinateLayout.setMargin(true);
      }
    }
  }
);
  try {
    add.addItem("Table",new AddCommand(hostClass.getMethod("getNewTable"),remove,modify));
    add.addItem("Panel",new AddCommand(hostClass.getMethod("getNewPanel"),remove,modify));
    add.addItem("TextField",new AddCommand(hostClass.getMethod("getNewTextField"),remove,modify));
    add.addItem("Tree",new AddCommand(hostClass.getMethod("getNewTree"),remove,modify));
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  return menu;
}
