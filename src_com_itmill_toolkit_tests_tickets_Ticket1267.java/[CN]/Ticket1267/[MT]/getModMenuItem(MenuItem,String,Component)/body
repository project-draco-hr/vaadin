{
  MenuBar.MenuItem item=null;
  if (c instanceof Table) {
    final Table table=(Table)c;
    item=parent.addItem(id,null);
    MenuBar.Command addContent=new MenuBar.Command(){
      public void menuSelected(      MenuItem selectedItem){
        table.addContainerProperty("First Name",String.class,null);
        table.addContainerProperty("Last Name",String.class,null);
        table.addContainerProperty("Year",Integer.class,null);
        table.addItem(new Object[]{"Nicolaus","Copernicus",new Integer(1473)},Integer.valueOf(1));
        table.addItem(new Object[]{"Tycho","Brahe",new Integer(1546)},Integer.valueOf(2));
        table.addItem(new Object[]{"Giordano","Bruno",new Integer(1548)},Integer.valueOf(3));
        table.addItem(new Object[]{"Galileo","Galilei",new Integer(1564)},Integer.valueOf(4));
        table.addItem(new Object[]{"Johannes","Kepler",new Integer(1571)},Integer.valueOf(5));
        table.addItem(new Object[]{"Isaac","Newton",new Integer(1643)},Integer.valueOf(6));
      }
    }
;
    MenuBar.Command removeContent=new MenuBar.Command(){
      public void menuSelected(      MenuItem selectedItem){
        table.setContainerDataSource(emptyContainer);
      }
    }
;
    item.addItem("Add content",addContent);
    item.addItem("Remove content",removeContent);
  }
 else   if (c instanceof Tree) {
    final Tree tree=(Tree)c;
    item=parent.addItem(id,null);
    MenuBar.Command addContent=new MenuBar.Command(){
      public void menuSelected(      MenuBar.MenuItem selectedItem){
        final Object[][] planets=new Object[][]{new Object[]{"Mercury"},new Object[]{"Venus"},new Object[]{"Earth","The Moon"},new Object[]{"Mars","Phobos","Deimos"},new Object[]{"Jupiter","Io","Europa","Ganymedes","Callisto"},new Object[]{"Saturn","Titan","Tethys","Dione","Rhea","Iapetus"},new Object[]{"Uranus","Miranda","Ariel","Umbriel","Titania","Oberon"},new Object[]{"Neptune","Triton","Proteus","Nereid","Larissa"}};
        for (int i=0; i < planets.length; i++) {
          String planet=(String)(planets[i][0]);
          tree.addItem(planet);
          if (planets[i].length == 1) {
            tree.setChildrenAllowed(planet,false);
          }
 else {
            for (int j=1; j < planets[i].length; j++) {
              String moon=(String)planets[i][j];
              tree.addItem(moon);
              tree.setParent(moon,planet);
              tree.setChildrenAllowed(moon,false);
            }
            tree.expandItemsRecursively(planet);
          }
        }
      }
    }
;
    MenuBar.Command removeContent=new MenuBar.Command(){
      public void menuSelected(      MenuBar.MenuItem selectedItem){
        tree.setContainerDataSource(emptyHierarchy);
      }
    }
;
    item.addItem("Add content",addContent);
    item.addItem("Remove content",removeContent);
  }
  return item;
}
