{
  return new BootstrapHandler(){
    @Override public boolean handleRequest(    VaadinSession session,    VaadinRequest request,    VaadinResponse response) throws IOException {
      PortletRequest portletRequest=VaadinPortletRequest.cast(request).getPortletRequest();
      if (portletRequest instanceof RenderRequest) {
        return super.handleRequest(session,request,response);
      }
 else {
        return false;
      }
    }
    @Override protected String getApplicationId(    BootstrapContext context){
      PortletRequest portletRequest=VaadinPortletRequest.cast(context.getRequest()).getPortletRequest();
      return "v-" + portletRequest.getWindowID();
    }
    @Override protected String getAppUri(    BootstrapContext context){
      return getRenderResponse(context).createActionURL().toString();
    }
    private RenderResponse getRenderResponse(    BootstrapContext context){
      PortletResponse response=((VaadinPortletResponse)context.getResponse()).getPortletResponse();
      RenderResponse renderResponse=(RenderResponse)response;
      return renderResponse;
    }
    @Override protected JSONObject getDefaultParameters(    BootstrapContext context) throws JSONException {
      JSONObject defaults=super.getDefaultParameters(context);
      defaults.put("pathInfo","");
      return defaults;
    }
    @Override protected void appendMainScriptTagContents(    BootstrapContext context,    StringBuilder builder) throws JSONException, IOException {
      String portalTheme=VaadinPortletRequest.cast(context.getRequest()).getPortalProperty(VaadinPortlet.PORTAL_PARAMETER_VAADIN_THEME);
      if (portalTheme != null && !portalTheme.equals(context.getThemeName())) {
        String portalThemeUri=getThemeUri(context,portalTheme);
        builder.append("vaadin.loadTheme('" + portalThemeUri + "');");
      }
      super.appendMainScriptTagContents(context,builder);
    }
    @Override protected String getMainDivStyle(    BootstrapContext context){
      VaadinService vaadinService=context.getRequest().getService();
      return vaadinService.getDeploymentConfiguration().getApplicationOrSystemProperty(VaadinPortlet.PORTLET_PARAMETER_STYLE,null);
    }
    @Override protected JSONObject getApplicationParameters(    BootstrapContext context) throws JSONException, PaintException {
      JSONObject parameters=super.getApplicationParameters(context);
      VaadinPortletResponse response=(VaadinPortletResponse)context.getResponse();
      MimeResponse portletResponse=(MimeResponse)response.getPortletResponse();
      ResourceURL resourceURL=portletResponse.createResourceURL();
      resourceURL.setResourceID("browserDetails");
      parameters.put("browserDetailsUrl",resourceURL.toString());
      ResourceURL portletResourceUrl=getRenderResponse(context).createResourceURL();
      portletResourceUrl.setResourceID(VaadinPortlet.RESOURCE_URL_ID);
      parameters.put(ApplicationConstants.PORTLET_RESOUCE_URL_BASE,portletResourceUrl.toString());
      return parameters;
    }
  }
;
}
