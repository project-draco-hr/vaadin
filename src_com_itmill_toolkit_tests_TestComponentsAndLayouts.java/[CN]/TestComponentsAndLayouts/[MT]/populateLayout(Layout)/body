{
  final Button button=new Button("Button " + count++);
  test(layout,button);
  final DateField df=new DateField("DateField " + count++);
  test(layout,df);
  final CheckBox cb=new CheckBox("Checkbox " + count++);
  test(layout,cb);
  final ClassResource flashResource=new ClassResource("itmill_spin.swf",this);
  final Embedded emb=new Embedded("Embedded " + count++,flashResource);
  emb.setType(Embedded.TYPE_OBJECT);
  emb.setMimeType("application/x-shockwave-flash");
  emb.setWidth(250);
  emb.setHeight(100);
  test(layout,emb);
  final Panel panel=new Panel("Panel " + count++);
  test(layout,panel);
  final Label label=new Label("Label " + count++);
  test(layout,label);
  final Link link=new Link("Link " + count++,new ExternalResource("www.itmill.com"));
  test(layout,link);
  final NativeSelect nativeSelect=new NativeSelect("NativeSelect " + count++);
  nativeSelect.setContainerDataSource(getContainer());
  test(layout,nativeSelect);
  final OptionGroup optionGroup=new OptionGroup("OptionGroup " + count++);
  optionGroup.setContainerDataSource(getSmallContainer());
  optionGroup.setItemCaptionPropertyId("UNIT");
  test(layout,optionGroup);
  final RichTextArea rta=new RichTextArea();
  test(layout,rta);
  final Select select=new Select("Select " + count++);
  select.setContainerDataSource(getSmallContainer());
  select.setItemCaptionPropertyId("UNIT");
  test(layout,select);
  final Slider slider=new Slider("Slider " + count++);
  test(layout,slider);
  final Table table=new Table("Table " + count++);
  table.setPageLength(10);
  table.setSelectable(true);
  table.setRowHeaderMode(Table.ROW_HEADER_MODE_INDEX);
  table.setColumnCollapsingAllowed(true);
  table.setColumnReorderingAllowed(true);
  table.setSelectable(true);
  table.addActionHandler(this);
  table.setContainerDataSource(getContainer());
  table.setVisibleColumns(new Object[]{"FIRSTNAME","LASTNAME","TITLE","UNIT"});
  table.setItemCaptionPropertyId("ID");
  test(layout,table);
  final TabSheet tabsheet=new TabSheet();
  final OrderedLayout tab1=new OrderedLayout();
  tab1.addComponent(new Label("tab1 " + count++));
  final OrderedLayout tab2=new OrderedLayout();
  tab2.addComponent(new Label("tab2 " + count++));
  tabsheet.addTab(tab1,"Default (not configured) TabSheet tab1",new ClassResource("m.gif",this));
  tabsheet.addTab(tab2,"Configured TabSheet tab2",new ClassResource("m.gif",this));
  test(layout,tabsheet);
  final Accordion accordion=new Accordion();
  final OrderedLayout acc1=new OrderedLayout();
  acc1.addComponent(new Label("acc1 " + count++));
  final OrderedLayout acc2=new OrderedLayout();
  acc2.addComponent(new Label("acc2 " + count++));
  accordion.addTab(acc1,"Default (not configured) Accordion acc1",new ClassResource("m.gif",this));
  accordion.addTab(acc2,"Configured Accordion acc2",new ClassResource("m.gif",this));
  test(layout,accordion);
  final TextField tf=new TextField("Textfield " + count++);
  test(layout,tf);
  test(acc2);
  final Tree tree=new Tree("Tree " + count++);
  final File sampleDir=SampleDirectory.getDirectory(this);
  final FilesystemContainer fsc=new FilesystemContainer(sampleDir,true);
  tree.setContainerDataSource(fsc);
  test(layout,tree);
  final TwinColSelect twinColSelect=new TwinColSelect("TwinColSelect " + count++);
  twinColSelect.setContainerDataSource(getSmallContainer());
  twinColSelect.setItemCaptionPropertyId("UNIT");
  test(layout,twinColSelect);
  final Upload upload=new Upload("Upload (non-functional)",null);
  test(layout,upload);
  layout.addComponent(new Label("<B>Below are few custom components</B>",Label.CONTENT_XHTML));
  final TestForUpload tfu=new TestForUpload();
  layout.addComponent(tfu);
  layout.addComponent(new Label("<br/><b>----------<br/></p>",Label.CONTENT_XHTML));
  test(tfu);
}
