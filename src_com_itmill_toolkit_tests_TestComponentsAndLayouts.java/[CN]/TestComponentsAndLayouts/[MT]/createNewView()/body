{
  final Window main=new Window("Main window");
  setMainWindow(main);
  Layout target=main.getLayout();
  main.addComponent(new Label("Each Layout and their contained components should " + "have icon, caption, description, user error defined. " + "Eeach layout should contain similar components. "+ "All components are in immmediate mode. See source how to tweak this test."));
  main.addComponent(eventListenerFeedback);
  if (true) {
    window=new Window("Components inside Window (TEST: Window)");
    if (false) {
      target=window.getLayout();
    }
 else {
      populateLayout(window.getLayout());
    }
    getMainWindow().addWindow(window);
  }
  if (true) {
    target.addComponent(new Label("<hr /><h1>Components inside horizontal OrderedLayout</h3>",Label.CONTENT_XHTML));
    final OrderedLayout ol=new OrderedLayout(OrderedLayout.ORIENTATION_HORIZONTAL);
    populateLayout(ol);
    target.addComponent(ol);
  }
  if (true) {
    target.addComponent(new Label("<br/><br/><br/><hr /><h1>Components inside vertical OrderedLayout</h3>",Label.CONTENT_XHTML));
    final OrderedLayout ol2=new OrderedLayout(OrderedLayout.ORIENTATION_VERTICAL);
    populateLayout(ol2);
    target.addComponent(ol2);
  }
  if (true) {
    target.addComponent(new Label("<hr /><h1>Components inside TabSheet</h3>",Label.CONTENT_XHTML));
    final TabSheet tabsheet=new TabSheet();
    final OrderedLayout tab1=new OrderedLayout();
    tab1.addComponent(new Label("try tab2"));
    final OrderedLayout tab2=new OrderedLayout();
    populateLayout(tab2);
    tabsheet.addTab(tab1,"TabSheet tab1",new ClassResource("m.gif",this));
    tabsheet.addTab(tab2,"TabSheet tab2",new ClassResource("m.gif",this));
    target.addComponent(tabsheet);
  }
  if (true) {
    target.addComponent(new Label("<hr /><h1>Components inside GridLayout</h3>",Label.CONTENT_XHTML));
    final GridLayout gridLayout=new GridLayout(4,100);
    populateLayout(gridLayout);
    target.addComponent(gridLayout);
  }
  if (true) {
    target.addComponent(new Label("<hr /><h1>Components inside ExpandLayout (height 250px)</h3>",Label.CONTENT_XHTML));
    final ExpandLayout el=new ExpandLayout();
    el.setHeight(250,Component.UNITS_PIXELS);
    el.expand(new Label("This label will expand on expand layout"));
    populateLayout(el);
    target.addComponent(el);
  }
  if (true) {
    target.addComponent(new Label("<hr /><h1>Components inside Panel</h3>",Label.CONTENT_XHTML));
    final Panel panel=new Panel("Panel");
    populateLayout(panel.getLayout());
    target.addComponent(panel);
  }
  if (true) {
    target.addComponent(new Label("<hr /><h1>Components inside vertical SplitPanel (splitpanel is under 250height ExpandLayout)</h3>",Label.CONTENT_XHTML));
    final ExpandLayout sp1l=new ExpandLayout();
    sp1l.setHeight(250,ExpandLayout.UNITS_PIXELS);
    final SplitPanel sp1=new SplitPanel(SplitPanel.ORIENTATION_VERTICAL);
    sp1l.addComponent(sp1);
    final OrderedLayout sp1first=new OrderedLayout();
    final OrderedLayout sp1second=new OrderedLayout();
    sp1.setFirstComponent(sp1first);
    populateLayout(sp1first);
    populateLayout(sp1second);
    sp1.setSecondComponent(sp1second);
    target.addComponent(sp1l);
  }
  if (true) {
    target.addComponent(new Label("<hr /><h1>Components inside horizontal SplitPanel (splitpanel is under 250px height ExpandLayout)</h3>",Label.CONTENT_XHTML));
    final ExpandLayout sp2l=new ExpandLayout();
    sp2l.setHeight(250,SplitPanel.UNITS_PIXELS);
    final SplitPanel sp2=new SplitPanel(SplitPanel.ORIENTATION_HORIZONTAL);
    sp2l.addComponent(sp2);
    final OrderedLayout sp2first=new OrderedLayout();
    final OrderedLayout sp2second=new OrderedLayout();
    sp2.setFirstComponent(sp2first);
    populateLayout(sp2first);
    populateLayout(sp2second);
    sp2.setSecondComponent(sp2second);
    target.addComponent(sp2l);
  }
}
