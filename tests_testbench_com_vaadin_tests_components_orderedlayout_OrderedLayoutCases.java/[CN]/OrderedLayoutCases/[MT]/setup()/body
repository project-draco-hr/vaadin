{
  TestUtils.injectCSS(getMainWindow(),".sampleChild, .theLayout {border: 1px solid black;}" + ".theLayout > div > div:first-child {background: aqua;}" + ".theLayout > div > div:first-child + div {background: yellow;}"+ ".theLayout > div > div:first-child + div + div {background: lightgrey;}");
  currentLayout=new HorizontalLayout();
  for (int i=0; i < 3; i++) {
    currentLayout.addComponent(new SampleChild());
  }
  sizeBar=new HorizontalLayout();
  sizeBar.setSpacing(true);
  sizeBar.addComponent(createSimpleSelector("Layout width",new ValueChangeListener(){
    public void valueChange(    ValueChangeEvent event){
      currentLayout.setWidth(event.getProperty().getValue().toString());
    }
  }
,dimensionValues));
  sizeBar.addComponent(createSimpleSelector("Layout height",new ValueChangeListener(){
    public void valueChange(    ValueChangeEvent event){
      currentLayout.setHeight(event.getProperty().getValue().toString());
    }
  }
,dimensionValues));
  sizeBar.addComponent(createSimpleSelector("Spacing",new ValueChangeListener(){
    public void valueChange(    ValueChangeEvent event){
      currentLayout.setSpacing(Boolean.parseBoolean(event.getProperty().getValue().toString()));
    }
  }
,"false","true"));
  sizeBar.addComponent(createSimpleSelector("Margin",new ValueChangeListener(){
    public void valueChange(    ValueChangeEvent event){
      currentLayout.setMargin(Boolean.parseBoolean(event.getProperty().getValue().toString()));
    }
  }
,"false","true"));
  sizeBar.addComponent(createSimpleSelector("Direction",new ValueChangeListener(){
    public void valueChange(    ValueChangeEvent event){
      Object value=event.getProperty().getValue();
      AbstractOrderedLayout newLayout;
      if (value.equals("Horizontal")) {
        newLayout=new HorizontalLayout();
      }
 else {
        newLayout=new VerticalLayout();
      }
      while (currentLayout.getComponentCount() > 0) {
        newLayout.addComponent(currentLayout.getComponent(0));
      }
      newLayout.setStyleName("theLayout");
      newLayout.setHeight(currentLayout.getHeight(),currentLayout.getHeightUnits());
      newLayout.setWidth(currentLayout.getWidth(),currentLayout.getWidthUnits());
      newLayout.setMargin(currentLayout.getMargin());
      newLayout.setSpacing(currentLayout.isSpacing());
      getLayout().replaceComponent(currentLayout,newLayout);
      getLayout().setExpandRatio(newLayout,1);
      currentLayout=newLayout;
    }
  }
,"Horizontal","Vertical"));
  HorizontalLayout caseBar=new HorizontalLayout();
  caseBar.addComponent(new Button("Undefined without relative",new ClickListener(){
    public void buttonClick(    ClickEvent event){
      resetState();
      setChildState(1,0,2);
    }
  }
));
  caseBar.addComponent(new Button("Undefined with relative",new ClickListener(){
    public void buttonClick(    ClickEvent event){
      resetState();
      setChildState(1,0,4);
    }
  }
));
  caseBar.addComponent(new Button("Fixed with overflow",new ClickListener(){
    public void buttonClick(    ClickEvent event){
      resetState();
      setState(sizeBar,0,2);
      setState(sizeBar,3,1);
    }
  }
));
  caseBar.addComponent(new Button("Fixed with extra space",new ClickListener(){
    public void buttonClick(    ClickEvent event){
      resetState();
      setState(sizeBar,0,3);
      setState(sizeBar,3,1);
      setChildState(1,0,2);
    }
  }
));
  caseBar.addComponent(new Button("Expand with alignment",new ClickListener(){
    public void buttonClick(    ClickEvent event){
      resetState();
      setState(sizeBar,0,3);
      setState(sizeBar,1,2);
      setChildState(1,3,1);
      setChildState(1,4,6);
    }
  }
));
  caseBar.addComponent(new Button("Multiple expands",new ClickListener(){
    public void buttonClick(    ClickEvent event){
      resetState();
      setState(sizeBar,0,3);
      setState(sizeBar,1,2);
      setChildState(1,0,2);
      for (int i=0; i < 2; i++) {
        setChildState(i,3,1);
        setChildState(i,4,5);
      }
    }
  }
));
  caseBar.addComponent(new Button("Fixed + relative height",new ClickListener(){
    public void buttonClick(    ClickEvent event){
      resetState();
      setState(sizeBar,1,4);
      setChildState(0,1,2);
      setChildState(1,1,4);
      setChildState(2,4,7);
    }
  }
));
  caseBar.addComponent(new Button("Undefined + relative height",new ClickListener(){
    public void buttonClick(    ClickEvent event){
      resetState();
      setChildState(0,1,2);
      setChildState(1,1,4);
      setChildState(2,4,7);
    }
  }
));
  caseBar.setSpacing(true);
  addComponent(caseBar);
  addComponent(sizeBar);
  addComponent(currentLayout);
  getLayout().setSpacing(true);
  getLayout().getParent().setSizeFull();
  getLayout().setSizeFull();
  getLayout().setExpandRatio(currentLayout,1);
}
