{
  getWidgetForPaintable().client=client;
  getWidgetForPaintable().id=uidl.getId();
  if (client.updateComponent(this,uidl,true)) {
    return;
  }
  getWidgetForPaintable().immediate=uidl.getBooleanAttribute("immediate");
  getWidgetForPaintable().disabled=uidl.getBooleanAttribute("disabled");
  getWidgetForPaintable().readonly=uidl.getBooleanAttribute("readonly");
  getWidgetForPaintable().vertical=uidl.hasAttribute("vertical");
  String style="";
  if (uidl.hasAttribute("style")) {
    style=uidl.getStringAttribute("style");
  }
  if (getWidgetForPaintable().vertical) {
    getWidgetForPaintable().addStyleName(VSlider.CLASSNAME + "-vertical");
  }
 else {
    getWidgetForPaintable().removeStyleName(VSlider.CLASSNAME + "-vertical");
  }
  getWidgetForPaintable().min=uidl.getDoubleAttribute("min");
  getWidgetForPaintable().max=uidl.getDoubleAttribute("max");
  getWidgetForPaintable().resolution=uidl.getIntAttribute("resolution");
  getWidgetForPaintable().value=new Double(uidl.getDoubleVariable("value"));
  getWidgetForPaintable().setFeedbackValue(getWidgetForPaintable().value);
  getWidgetForPaintable().buildBase();
  if (!getWidgetForPaintable().vertical) {
    Scheduler.get().scheduleDeferred(new Command(){
      public void execute(){
        getWidgetForPaintable().buildHandle();
        getWidgetForPaintable().setValue(getWidgetForPaintable().value,false);
      }
    }
);
  }
 else {
    getWidgetForPaintable().buildHandle();
    getWidgetForPaintable().setValue(getWidgetForPaintable().value,false);
  }
}
