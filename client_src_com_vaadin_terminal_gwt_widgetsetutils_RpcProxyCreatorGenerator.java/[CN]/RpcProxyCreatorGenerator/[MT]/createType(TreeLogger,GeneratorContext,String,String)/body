{
  ClassSourceFileComposerFactory composer=new ClassSourceFileComposerFactory(packageName,className);
  PrintWriter printWriter=context.tryCreate(logger,composer.getCreatedPackage(),composer.getCreatedClassShortName());
  if (printWriter == null) {
    return;
  }
  Date date=new Date();
  TypeOracle typeOracle=context.getTypeOracle();
  composer.addImport(GWT.class.getCanonicalName());
  composer.addImport(ServerRpc.class.getCanonicalName());
  composer.addImport(ServerConnector.class.getCanonicalName());
  composer.addImport(InitializableServerRpc.class.getCanonicalName());
  composer.addImport(IllegalArgumentException.class.getCanonicalName());
  composer.addImplementedInterface(RpcProxyCreator.class.getCanonicalName());
  SourceWriter sourceWriter=composer.createSourceWriter(context,printWriter);
  sourceWriter.indent();
  sourceWriter.println("public <T extends ServerRpc> T create(Class<T> rpcInterface, ServerConnector connector) {");
  sourceWriter.indent();
  sourceWriter.println("if (rpcInterface == null || connector == null) {");
  sourceWriter.indent();
  sourceWriter.println("throw new IllegalArgumentException(\"RpcInterface and/or connector cannot be null\");");
  sourceWriter.outdent();
  JClassType initializableInterface=typeOracle.findType(ServerRpc.class.getCanonicalName());
  for (  JClassType rpcType : initializableInterface.getSubtypes()) {
    String rpcClassName=rpcType.getQualifiedSourceName();
    if (InitializableServerRpc.class.getCanonicalName().equals(rpcClassName)) {
      continue;
    }
    sourceWriter.println("} else if (rpcInterface == " + rpcClassName + ".class) {");
    sourceWriter.indent();
    sourceWriter.println(rpcClassName + " rpc = GWT.create(" + rpcClassName+ ".class);");
    sourceWriter.println("((" + InitializableServerRpc.class.getName() + ") rpc).initRpc(connector);");
    sourceWriter.println("return (T) rpc;");
    sourceWriter.outdent();
  }
  sourceWriter.println("} else {");
  sourceWriter.indent();
  sourceWriter.println("throw new IllegalArgumentException(\"No RpcInterface of type \"+ rpcInterface.getName() + \" was found.\");");
  sourceWriter.outdent();
  sourceWriter.println("}");
  sourceWriter.println("}");
  sourceWriter.outdent();
  sourceWriter.println("}");
  context.commit(logger,printWriter);
  logger.log(Type.INFO,composer.getCreatedClassName() + " created in " + (new Date().getTime() - date.getTime()) / 1000 + "seconds");
}
