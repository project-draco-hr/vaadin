{
  setStyleName(CLASSNAME);
  topTabStop=DOM.createDiv();
  DOM.setElementAttribute(topTabStop,"tabindex","0");
  header=DOM.createDiv();
  DOM.setElementProperty(header,"className",CLASSNAME + "-outerheader");
  headerText=DOM.createDiv();
  DOM.setElementProperty(headerText,"className",CLASSNAME + "-header");
  contents=DOM.createDiv();
  DOM.setElementProperty(contents,"className",CLASSNAME + "-contents");
  footer=DOM.createDiv();
  DOM.setElementProperty(footer,"className",CLASSNAME + "-footer");
  resizeBox=DOM.createDiv();
  DOM.setElementProperty(resizeBox,"className",CLASSNAME + "-resizebox");
  closeBox=DOM.createDiv();
  maximizeRestoreBox=DOM.createDiv();
  DOM.setElementProperty(maximizeRestoreBox,"className",CLASSNAME + "-maximizebox");
  DOM.setElementAttribute(maximizeRestoreBox,"tabindex","0");
  DOM.setElementProperty(closeBox,"className",CLASSNAME + "-closebox");
  DOM.setElementAttribute(closeBox,"tabindex","0");
  DOM.appendChild(footer,resizeBox);
  bottomTabStop=DOM.createDiv();
  DOM.setElementAttribute(bottomTabStop,"tabindex","0");
  wrapper=DOM.createDiv();
  DOM.setElementProperty(wrapper,"className",CLASSNAME + "-wrap");
  DOM.appendChild(wrapper,topTabStop);
  DOM.appendChild(wrapper,header);
  DOM.appendChild(wrapper,maximizeRestoreBox);
  DOM.appendChild(wrapper,closeBox);
  DOM.appendChild(header,headerText);
  DOM.appendChild(wrapper,contents);
  DOM.appendChild(wrapper,footer);
  DOM.appendChild(wrapper,bottomTabStop);
  DOM.appendChild(super.getContainerElement(),wrapper);
  sinkEvents(Event.ONDBLCLICK | Event.MOUSEEVENTS | Event.TOUCHEVENTS| Event.ONCLICK| Event.ONLOSECAPTURE);
  setWidget(contentPanel);
  Roles.getButtonRole().set(closeBox);
  Roles.getButtonRole().setAriaLabelProperty(closeBox,"close button");
  Roles.getButtonRole().set(maximizeRestoreBox);
  Roles.getButtonRole().setAriaLabelProperty(maximizeRestoreBox,"maximize button");
  AriaHelper.ensureHasId(headerText);
  Roles.getDialogRole().setAriaLabelledbyProperty(getElement(),Id.of(headerText));
  topEventBlocker=new NativePreviewHandler(){
    @Override public void onPreviewNativeEvent(    NativePreviewEvent event){
      NativeEvent nativeEvent=event.getNativeEvent();
      if (nativeEvent.getEventTarget().cast() == topTabStop && nativeEvent.getKeyCode() == KeyCodes.KEY_TAB && nativeEvent.getShiftKey()) {
        nativeEvent.preventDefault();
      }
      if (nativeEvent.getEventTarget().cast() == topTabStop && nativeEvent.getKeyCode() == KeyCodes.KEY_BACKSPACE) {
        nativeEvent.preventDefault();
      }
    }
  }
;
  bottomEventBlocker=new NativePreviewHandler(){
    @Override public void onPreviewNativeEvent(    NativePreviewEvent event){
      NativeEvent nativeEvent=event.getNativeEvent();
      if (nativeEvent.getEventTarget().cast() == bottomTabStop && nativeEvent.getKeyCode() == KeyCodes.KEY_TAB && !nativeEvent.getShiftKey()) {
        nativeEvent.preventDefault();
      }
      if (nativeEvent.getEventTarget().cast() == bottomTabStop && nativeEvent.getKeyCode() == KeyCodes.KEY_BACKSPACE) {
        nativeEvent.preventDefault();
      }
    }
  }
;
}
