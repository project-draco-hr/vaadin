{
  if (!enabled) {
    throw new IllegalStateException("Cannot edit row: editor is not enabled");
  }
  if (state != State.INACTIVE) {
    if (isBuffered() && this.rowIndex != rowIndex) {
      throw new IllegalStateException("Cannot edit row: editor already in edit mode");
    }
  }
  if (columnIndex >= grid.getVisibleColumns().size()) {
    throw new IllegalArgumentException("Edited column index " + columnIndex + " was bigger than visible column count.");
  }
  if (this.rowIndex == rowIndex && focusedColumnIndex == columnIndex) {
    return;
  }
  if (focusedColumnIndex != columnIndex && columnIndex >= grid.getFrozenColumnCount()) {
    grid.getEscalator().scrollToColumn(columnIndex,ScrollDestination.ANY,0);
  }
  this.focusedColumnIndex=columnIndex;
  if (this.rowIndex == rowIndex) {
    updateHorizontalScrollPosition();
    focusColumn(focusedColumnIndex);
    return;
  }
  this.rowIndex=rowIndex;
  state=State.ACTIVATING;
  final Escalator escalator=grid.getEscalator();
  if (escalator.getVisibleRowRange().contains(rowIndex)) {
    show(rowIndex);
  }
 else {
    vScrollHandler=grid.addScrollHandler(new ScrollHandler(){
      @Override public void onScroll(      ScrollEvent event){
        if (escalator.getVisibleRowRange().contains(rowIndex)) {
          show(rowIndex);
          vScrollHandler.removeHandler();
        }
      }
    }
);
    grid.scrollToRow(rowIndex,isBuffered() ? ScrollDestination.MIDDLE : ScrollDestination.ANY);
  }
}
