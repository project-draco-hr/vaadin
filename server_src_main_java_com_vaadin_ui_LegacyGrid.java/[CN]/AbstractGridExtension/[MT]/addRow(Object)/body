{
  if (values == null) {
    throw new IllegalArgumentException("Values cannot be null");
  }
  Indexed dataSource=getContainerDataSource();
  List<String> columnOrder=getState(false).columnOrder;
  if (values.length != columnOrder.size()) {
    throw new IllegalArgumentException("There are " + columnOrder.size() + " visible columns, but "+ values.length+ " cell values were provided.");
  }
  for (int i=0; i < columnOrder.size(); i++) {
    Object propertyId=getPropertyIdByColumnId(columnOrder.get(i));
    Class<?> propertyType=dataSource.getType(propertyId);
    if (values[i] != null && !propertyType.isInstance(values[i])) {
      throw new IllegalArgumentException("Parameter " + i + "("+ values[i]+ ") is not an instance of "+ propertyType.getCanonicalName());
    }
  }
  Object itemId=dataSource.addItem();
  try {
    Item item=dataSource.getItem(itemId);
    for (int i=0; i < columnOrder.size(); i++) {
      Object propertyId=getPropertyIdByColumnId(columnOrder.get(i));
      Property<Object> property=item.getItemProperty(propertyId);
      property.setValue(values[i]);
    }
  }
 catch (  RuntimeException e) {
    try {
      dataSource.removeItem(itemId);
    }
 catch (    Exception e2) {
      getLogger().log(Level.SEVERE,"Error recovering from exception in addRow",e);
    }
    throw e;
  }
  return itemId;
}
