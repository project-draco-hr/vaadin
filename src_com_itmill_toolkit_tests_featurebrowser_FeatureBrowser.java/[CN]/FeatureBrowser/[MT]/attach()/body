{
  if (initialized) {
    return;
  }
  initialized=true;
  features=new Tree();
  features.addContainerProperty("name",String.class,"");
  features.addContainerProperty("feature",Feature.class,null);
  features.setItemCaptionPropertyId("name");
  features.addListener(this);
  features.setImmediate(true);
  features.setStyle("menu");
  mainlayout=new CustomLayout("featurebrowser-mainlayout");
  setCompositionRoot(mainlayout);
  mainlayout.addComponent(features,"tree");
  mainlayout.addComponent(themeSelector,"themes");
  themeSelector.addItem("tests-featurebrowser");
  themeSelector.addListener(this);
  themeSelector.select("tests-featurebrowser");
  themeSelector.setImmediate(true);
  final Button close=new Button("restart",getApplication(),"close");
  close.setStyle("link");
  mainlayout.addComponent(close,"restart");
  registerFeature("/Welcome",new IntroWelcome());
  registerFeature("/UI Components",new IntroComponents());
  registerFeature("/UI Components/Basic",new IntroBasic());
  registerFeature("/UI Components/Basic/Text Field",new FeatureTextField());
  registerFeature("/UI Components/Basic/Date Field",new FeatureDateField());
  registerFeature("/UI Components/Basic/Button",new FeatureButton());
  registerFeature("/UI Components/Basic/Form",new FeatureForm());
  registerFeature("/UI Components/Basic/Label",new FeatureLabel());
  registerFeature("/UI Components/Basic/Link",new FeatureLink());
  registerFeature("/UI Components/Item Containers",new IntroItemContainers());
  registerFeature("/UI Components/Item Containers/Select",new FeatureSelect());
  registerFeature("/UI Components/Item Containers/Table",new FeatureTable());
  registerFeature("/UI Components/Item Containers/Tree",new FeatureTree());
  registerFeature("/UI Components/Layouts",new IntroLayouts());
  registerFeature("/UI Components/Layouts/Ordered Layout",new FeatureOrderedLayout());
  registerFeature("/UI Components/Layouts/Grid Layout",new FeatureGridLayout());
  registerFeature("/UI Components/Layouts/Custom Layout",new FeatureCustomLayout());
  registerFeature("/UI Components/Layouts/Panel",new FeaturePanel());
  registerFeature("/UI Components/Layouts/Tab Sheet",new FeatureTabSheet());
  registerFeature("/UI Components/Layouts/Window",new FeatureWindow());
  registerFeature("/UI Components/Data handling",new IntroDataHandling());
  registerFeature("/UI Components/Data handling/Embedded Objects",new FeatureEmbedded());
  registerFeature("/UI Components/Data handling/Upload",new FeatureUpload());
  registerFeature("/Data Model",new IntroDataModel());
  registerFeature("/Data Model/Properties",new FeatureProperties());
  registerFeature("/Data Model/Items",new FeatureItems());
  registerFeature("/Data Model/Containers",new FeatureContainers());
  registerFeature("/Data Model/Validators",new FeatureValidators());
  registerFeature("/Data Model/Buffering",new FeatureBuffering());
  for (final Iterator i=features.getItemIds().iterator(); i.hasNext(); ) {
    features.expandItem(i.next());
  }
  currentFeature=new IntroWelcome();
  mainlayout.addComponent(currentFeature,"demo");
  mainlayout.addComponent(currentFeature.getTabSheet(),"tabsheet");
  properties=currentFeature.getPropertyPanel();
  mainlayout.addComponent(properties,"properties");
}
