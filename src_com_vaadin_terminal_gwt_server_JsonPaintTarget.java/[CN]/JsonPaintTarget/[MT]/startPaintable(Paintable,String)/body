{
  startTag(tagName,true);
  final boolean isPreviouslyPainted=manager.hasPaintableId(paintable) && (identifiersCreatedDueRefPaint == null || !identifiersCreatedDueRefPaint.contains(paintable)) && !deferredPaintables.contains(paintable);
  final String id=manager.getPaintableId(paintable);
  paintable.addListener(manager);
  addAttribute("id",id);
  boolean topLevelPaintableTag=openPaintables.isEmpty();
  openPaintables.push(paintable);
  openPaintableTags.push(tagName);
  if (cacheEnabled && isPreviouslyPainted) {
    paintedComponents.add(paintable);
    deferredPaintables.remove(paintable);
    return PaintStatus.CACHED;
  }
 else   if (!topLevelPaintableTag) {
    manager.queuePaintable(paintable);
    deferredPaintables.add(paintable);
    return PaintStatus.DEFER;
  }
 else {
    paintedComponents.add(paintable);
    deferredPaintables.remove(paintable);
    if (paintable instanceof CustomLayout) {
      customLayoutArgumentsOpen=true;
    }
    return PaintStatus.PAINTING;
  }
}
