{
  HttpSession session=request.getSession();
  String id=AC_BASE + session.getId();
  byte[] serializedAC=(byte[])memcache.get(id);
  if (serializedAC == null) {
    DatastoreService ds=DatastoreServiceFactory.getDatastoreService();
    Key key=KeyFactory.createKey(AC_BASE,id);
    Entity entity=null;
    try {
      entity=ds.get(key);
    }
 catch (    EntityNotFoundException e) {
    }
    if (entity != null) {
      Blob blob=(Blob)entity.getProperty(PROPERTY_DATA);
      serializedAC=blob.getBytes();
      memcache.put(AC_BASE + session.getId(),serializedAC,Expiration.byDeltaSeconds(session.getMaxInactiveInterval()),MemcacheService.SetPolicy.ADD_ONLY_IF_NOT_PRESENT);
    }
  }
  if (serializedAC != null) {
    ByteArrayInputStream bais=new ByteArrayInputStream(serializedAC);
    ObjectInputStream ois;
    try {
      ois=new ObjectInputStream(bais);
      ApplicationContext applicationContext=(ApplicationContext)ois.readObject();
      session.setAttribute(WebApplicationContext.class.getName(),applicationContext);
    }
 catch (    IOException e) {
      System.err.println("Could not de-serialize ApplicationContext for " + session.getId() + " A new one will be created.");
      e.printStackTrace();
    }
catch (    ClassNotFoundException e) {
      System.err.println("Could not de-serialize ApplicationContext for " + session.getId() + " A new one will be created.");
      e.printStackTrace();
    }
  }
  return WebApplicationContext.getApplicationContext(session);
}
