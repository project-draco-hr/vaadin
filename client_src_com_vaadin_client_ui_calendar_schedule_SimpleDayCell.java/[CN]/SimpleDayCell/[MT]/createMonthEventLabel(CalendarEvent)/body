{
  long rangeInMillis=e.getRangeInMilliseconds();
  boolean timeEvent=rangeInMillis <= DateConstants.DAYINMILLIS && !e.isAllDay();
  Date fromDatetime=e.getStartTime();
  MonthEventLabel eventDiv=new MonthEventLabel();
  eventDiv.addStyleDependentName("month");
  eventDiv.addMouseDownHandler(this);
  eventDiv.addMouseUpHandler(this);
  eventDiv.setCalendar(calendar);
  eventDiv.setEventIndex(e.getIndex());
  if (timeEvent) {
    eventDiv.setTimeSpecificEvent(true);
    if (e.getStyleName() != null) {
      eventDiv.addStyleDependentName(e.getStyleName());
    }
    eventDiv.setCaption(e.getCaption());
    eventDiv.setTime(fromDatetime);
  }
 else {
    eventDiv.setTimeSpecificEvent(false);
    Date from=e.getStart();
    Date to=e.getEnd();
    if (e.getStyleName().length() > 0) {
      eventDiv.addStyleName("month-event " + e.getStyleName());
    }
 else {
      eventDiv.addStyleName("month-event");
    }
    int fromCompareToDate=from.compareTo(date);
    int toCompareToDate=to.compareTo(date);
    eventDiv.addStyleDependentName("all-day");
    if (fromCompareToDate == 0) {
      eventDiv.addStyleDependentName("start");
      eventDiv.setCaption(e.getCaption());
    }
 else     if (fromCompareToDate < 0 && cell == 0) {
      eventDiv.addStyleDependentName("continued-from");
      eventDiv.setCaption(e.getCaption());
    }
    if (toCompareToDate == 0) {
      eventDiv.addStyleDependentName("end");
    }
 else     if (toCompareToDate > 0 && (cell + 1) == getMonthGrid().getCellCount(row)) {
      eventDiv.addStyleDependentName("continued-to");
    }
    if (e.getStyleName() != null) {
      eventDiv.addStyleDependentName(e.getStyleName() + "-all-day");
    }
  }
  return eventDiv;
}
