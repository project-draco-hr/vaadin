{
  return new AjaxPageHandler(){
    @Override public boolean handleRequest(    Application application,    WrappedRequest request,    WrappedResponse response) throws IOException {
      PortletRequest portletRequest=WrappedPortletRequest.cast(request).getPortletRequest();
      if (portletRequest instanceof RenderRequest) {
        return super.handleRequest(application,request,response);
      }
 else {
        return false;
      }
    }
    @Override protected String getApplicationId(    AjaxPageContext context){
      PortletRequest portletRequest=WrappedPortletRequest.cast(context.getRequest()).getPortletRequest();
      return "v-" + portletRequest.getWindowID();
    }
    @Override protected String getAppUri(    AjaxPageContext context){
      return getRenderResponse(context).createActionURL().toString();
    }
    private RenderResponse getRenderResponse(    AjaxPageContext context){
      PortletResponse response=((WrappedPortletResponse)context.getResponse()).getPortletResponse();
      RenderResponse renderResponse=(RenderResponse)response;
      return renderResponse;
    }
    @Override protected JSONObject getDefaultParameters(    AjaxPageContext context) throws JSONException {
      JSONObject defaults=super.getDefaultParameters(context);
      defaults.put("usePortletURLs",true);
      ResourceURL uidlUrlBase=getRenderResponse(context).createResourceURL();
      uidlUrlBase.setResourceID("UIDL");
      defaults.put("portletUidlURLBase",uidlUrlBase.toString());
      defaults.put("pathInfo","");
      return defaults;
    }
    @Override protected void writeMainScriptTagContents(    AjaxPageContext context) throws JSONException, IOException {
      String portalTheme=WrappedPortletRequest.cast(context.getRequest()).getPortalProperty(AbstractApplicationPortlet.PORTAL_PARAMETER_VAADIN_THEME);
      if (portalTheme != null && !portalTheme.equals(context.getThemeName())) {
        String portalThemeUri=getThemeUri(context,portalTheme);
        context.getWriter().write("vaadin.loadTheme('" + portalThemeUri + "')");
      }
      super.writeMainScriptTagContents(context);
    }
    @Override protected String getMainDivStyle(    AjaxPageContext context){
      DeploymentConfiguration deploymentConfiguration=context.getRequest().getDeploymentConfiguration();
      return deploymentConfiguration.getApplicationOrSystemProperty(AbstractApplicationPortlet.PORTLET_PARAMETER_STYLE,null);
    }
    @Override protected String getInitialUIDL(    WrappedRequest request,    Root root) throws PaintException {
      return PortletCommunicationManager.this.getInitialUIDL(request,root);
    }
  }
;
}
