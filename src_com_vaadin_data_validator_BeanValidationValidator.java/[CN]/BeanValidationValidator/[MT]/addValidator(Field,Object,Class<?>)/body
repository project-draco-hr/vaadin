{
  if (objectPropertyId == null || !(objectPropertyId instanceof String)) {
    throw new IllegalArgumentException("Property id must be a non-null String");
  }
  String propertyId=(String)objectPropertyId;
  BeanValidationValidator validator=new BeanValidationValidator(beanClass,propertyId);
  PropertyDescriptor constraintsForProperty=validator.getJavaxBeanValidator().getConstraintsForClass(beanClass).getConstraintsForProperty(propertyId);
  if (constraintsForProperty != null) {
    int nonNotNullValidators=constraintsForProperty.getConstraintDescriptors().size();
    if (validator.isRequired()) {
      field.setRequired(true);
      field.setRequiredError(validator.getRequiredMessage());
      nonNotNullValidators--;
    }
    if (nonNotNullValidators > 0) {
      field.addValidator(validator);
    }
  }
  return validator;
}
