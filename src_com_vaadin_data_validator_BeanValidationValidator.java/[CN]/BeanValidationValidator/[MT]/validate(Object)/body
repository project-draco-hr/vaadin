{
  Object convertedValue=value;
  try {
    convertedValue=convertValue(value);
  }
 catch (  Exception e) {
    String msg=getErrorMessage(value);
    if (msg != null) {
      throw new InvalidValueException(msg);
    }
 else {
      throw new InvalidValueException("Conversion exception");
    }
  }
  Set<?> violations=validator.validateValue(beanClass,propertyName,convertedValue);
  if (violations.size() > 0) {
    List<String> exceptions=new ArrayList<String>();
    for (    Object v : violations) {
      final ConstraintViolation<?> violation=(ConstraintViolation<?>)v;
      String msg=factory.getMessageInterpolator().interpolate(violation.getMessageTemplate(),new SimpleContext(convertedValue,violation.getConstraintDescriptor()),locale);
      exceptions.add(msg);
    }
    StringBuilder b=new StringBuilder();
    for (int i=0; i < exceptions.size(); i++) {
      if (i != 0) {
        b.append("<br/>");
      }
      b.append(exceptions.get(i));
    }
    throw new InvalidValueException(b.toString());
  }
}
