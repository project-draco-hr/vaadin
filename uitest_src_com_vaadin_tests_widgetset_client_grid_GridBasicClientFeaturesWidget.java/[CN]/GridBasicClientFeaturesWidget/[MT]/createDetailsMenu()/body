{
  String[] menupath=new String[]{"Component","Row details"};
  addMenuCommand("Set generator",new ScheduledCommand(){
    @Override public void execute(){
      grid.setDetailsGenerator(new DetailsGenerator(){
        @Override public Widget getDetails(        int rowIndex){
          FlowPanel panel=new FlowPanel();
          final Label label=new Label("Row: " + rowIndex + ".");
          Button button=new Button("Button",new ClickHandler(){
            @Override public void onClick(            ClickEvent event){
              label.setText("clicked");
            }
          }
);
          panel.add(label);
          panel.add(button);
          return panel;
        }
      }
);
    }
  }
,menupath);
  addMenuCommand("Set faulty generator",new ScheduledCommand(){
    @Override public void execute(){
      grid.setDetailsGenerator(new DetailsGenerator(){
        @Override public Widget getDetails(        int rowIndex){
          throw new RuntimeException("This is by design.");
        }
      }
);
    }
  }
,menupath);
  addMenuCommand("Set empty generator",new ScheduledCommand(){
    @Override public void execute(){
      grid.setDetailsGenerator(new DetailsGenerator(){
        @Override public Widget getDetails(        int rowIndex){
          return null;
        }
      }
);
    }
  }
,menupath);
  String[] togglemenupath=new String[]{menupath[0],menupath[1],"Toggle details for..."};
  for (  int i : new int[]{0,1,100,200,300,400,500,600,700,800,900,999}) {
    final int rowIndex=i;
    addMenuCommand("Row " + rowIndex,new ScheduledCommand(){
      boolean visible=false;
      @Override public void execute(){
        visible=!visible;
        grid.setDetailsVisible(rowIndex,visible);
      }
    }
,togglemenupath);
  }
}
