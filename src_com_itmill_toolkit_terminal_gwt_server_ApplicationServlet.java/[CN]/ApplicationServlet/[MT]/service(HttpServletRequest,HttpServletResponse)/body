{
  if ((request.getPathInfo() != null) && (request.getPathInfo().length() > 10)) {
    if ((request.getContextPath() != null) && (request.getRequestURI().startsWith("/ITMILL/"))) {
      serveStaticResourcesInITMILL(request.getRequestURI(),response);
      return;
    }
 else     if (request.getRequestURI().startsWith(request.getContextPath() + "/ITMILL/")) {
      serveStaticResourcesInITMILL(request.getRequestURI().substring(request.getContextPath().length()),response);
      return;
    }
  }
  Application application=null;
  boolean UIDLrequest=false;
  try {
    if (ServletFileUpload.isMultipartContent(request)) {
      application=getExistingApplication(request,response);
      if (application == null) {
        throw new SessionExpired();
      }
      ((WebApplicationContext)application.getContext()).startTransaction(application,request);
      getApplicationManager(application).handleFileUpload(request,response);
      return;
    }
    final WebBrowser browser=WebApplicationContext.getApplicationContext(request.getSession()).getBrowser();
    browser.updateBrowserProperties(request);
    if (request.getPathInfo() != null) {
      String compare=AJAX_UIDL_URI;
      if (applicationRunnerMode) {
        final String[] URIparts=getApplicationRunnerURIs(request);
        final String applicationClassname=URIparts[4];
        compare="/" + applicationClassname + AJAX_UIDL_URI;
      }
      if (request.getPathInfo().startsWith(compare)) {
        UIDLrequest=true;
        application=getExistingApplication(request,response);
        if (application == null) {
          final String repaintAll=request.getParameter("repaintAll");
          if ((repaintAll != null) && (repaintAll.equals("1"))) {
            application=getNewApplication(request,response);
          }
 else {
            throw new SessionExpired();
          }
        }
        ((WebApplicationContext)application.getContext()).startTransaction(application,request);
        getApplicationManager(application).handleUidlRequest(request,response,this);
        return;
      }
    }
    application=getExistingApplication(request,response);
    if (application == null || request.getParameter("restartApplication") != null) {
      if (request.getParameter("restartApplication") != null && application != null) {
        application.close();
        final HttpSession session=request.getSession();
        if (session != null) {
          application.close();
          ApplicationServlet.applicationToAjaxAppMgrMap.remove(application);
          WebApplicationContext.getApplicationContext(session).removeApplication(application);
        }
      }
      application=getNewApplication(request,response);
    }
    ((WebApplicationContext)application.getContext()).startTransaction(application,request);
    if (!application.isRunning()) {
      endApplication(request,response,application);
      return;
    }
    Window window=null;
    window=getApplicationWindow(request,application);
    final Map parameters=request.getParameterMap();
    if (window != null && parameters != null) {
      window.handleParameters(parameters);
    }
    DownloadStream download=null;
    download=handleURI(application,request,response);
    if (download == null) {
      if (window.getTerminal() == null) {
        window.setTerminal(browser);
      }
      String themeName=window.getTheme();
      if (request.getParameter("theme") != null) {
        themeName=request.getParameter("theme");
      }
      if (handleResourceRequest(request,response,themeName)) {
        return;
      }
      writeAjaxPage(request,response,window,themeName,application);
    }
 else {
      handleDownload(download,request,response);
    }
  }
 catch (  final SessionExpired e) {
    criticalNotification(request,response,"Your session has expired.");
  }
catch (  final Throwable e) {
    e.printStackTrace();
    if (UIDLrequest) {
      criticalNotification(request,response,"Internal error. Please notify administrator.");
    }
 else {
      throw new ServletException(e);
    }
  }
 finally {
    if (application != null) {
      ((WebApplicationContext)application.getContext()).endTransaction(application,request);
    }
  }
}
