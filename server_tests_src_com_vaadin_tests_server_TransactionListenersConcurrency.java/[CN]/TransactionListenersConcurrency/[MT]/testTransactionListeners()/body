{
  final List<Throwable> exceptions=new ArrayList<Throwable>();
  HttpSession session=createSession();
  final WebApplicationContext context=WebApplicationContext.getApplicationContext(session);
  List<Thread> threads=new ArrayList<Thread>();
  for (int i=0; i < 5; i++) {
    Thread t=new Thread(new Runnable(){
      @Override public void run(){
        Application app=new Application(){
          @Override public void init(){
            try {
              Thread.sleep((long)(1000 * new Random().nextDouble()));
            }
 catch (            InterruptedException e) {
              e.printStackTrace();
            }
            getContext().addTransactionListener(new DelayTransactionListener(2000));
          }
        }
;
        try {
          DeploymentConfiguration dc=EasyMock.createMock(DeploymentConfiguration.class);
          EasyMock.expect(dc.isProductionMode()).andReturn(true);
          EasyMock.expect(dc.getInitParameters()).andReturn(new Properties());
          EasyMock.replay(dc);
          app.start(new ApplicationStartEvent(new URL("http://localhost/"),dc,context));
        }
 catch (        MalformedURLException e) {
          e.printStackTrace();
        }
        try {
          Method m=ApplicationContext.class.getDeclaredMethod("startTransaction",Application.class,Object.class);
          m.setAccessible(true);
          m.invoke(context,app,null);
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
    }
);
    threads.add(t);
    t.setUncaughtExceptionHandler(new UncaughtExceptionHandler(){
      @Override public void uncaughtException(      Thread t,      Throwable e){
        if (e.getCause() != null) {
          e=e.getCause();
        }
        exceptions.add(e);
      }
    }
);
  }
  for (  Thread t : threads) {
    t.start();
  }
  int running=threads.size();
  while (running > 0) {
    for (Iterator<Thread> i=threads.iterator(); i.hasNext(); ) {
      Thread t=i.next();
      if (!t.isAlive()) {
        running--;
        i.remove();
      }
    }
  }
  for (  Throwable t : exceptions) {
    if (t instanceof InvocationTargetException) {
      t=t.getCause();
    }
    if (t != null) {
      t.printStackTrace(System.err);
      fail(t.getClass().getName());
    }
  }
  System.out.println("Done, all ok");
}
