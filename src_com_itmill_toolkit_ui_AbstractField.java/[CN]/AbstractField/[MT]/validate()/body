{
  if (isEmpty()) {
    if (isRequired()) {
      throw new Validator.EmptyValueException(requiredError);
    }
 else {
      return;
    }
  }
  if (validators == null) {
    return;
  }
  Validator.InvalidValueException firstError=null;
  LinkedList errors=null;
  final Object value=getValue();
  for (final Iterator i=validators.iterator(); i.hasNext(); ) {
    try {
      ((Validator)i.next()).validate(value);
    }
 catch (    final Validator.InvalidValueException e) {
      if (firstError == null) {
        firstError=e;
      }
 else {
        if (errors == null) {
          errors=new LinkedList();
          errors.add(firstError);
        }
        errors.add(e);
      }
    }
  }
  if (firstError == null) {
    return;
  }
  if (errors == null) {
    throw firstError;
  }
  final Validator.InvalidValueException[] exceptions=new Validator.InvalidValueException[errors.size()];
  int index=0;
  for (final Iterator i=errors.iterator(); i.hasNext(); ) {
    exceptions[index++]=(Validator.InvalidValueException)i.next();
  }
  throw new Validator.InvalidValueException(null,exceptions);
}
