{
  if (!method.getDeclaringClass().isAssignableFrom(target.getClass())) {
    throw new java.lang.IllegalArgumentException("The method " + method.getName() + " cannot be used for the given target: "+ target.getClass().getName());
  }
  if (eventArgumentIndex >= 0 && arguments[eventArgumentIndex] != null) {
    throw new java.lang.IllegalArgumentException("argument[" + eventArgumentIndex + "] must be null");
  }
  if (eventArgumentIndex >= 0 && !method.getParameterTypes()[eventArgumentIndex].isAssignableFrom(eventType)) {
    throw new java.lang.IllegalArgumentException("The method " + method.getName() + " does not accept the given eventType: "+ eventType.getName());
  }
  this.eventType=eventType;
  this.target=target;
  this.method=method;
  this.arguments=arguments;
  this.eventArgumentIndex=eventArgumentIndex;
}
