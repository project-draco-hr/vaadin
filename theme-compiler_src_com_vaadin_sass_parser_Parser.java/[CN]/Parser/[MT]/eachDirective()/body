{
  Token var;
  ArrayList<String> list=null;
  String listVariable=null;
  jj_consume_token(EACH_SYM);
  label_74:   while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
      ;
    break;
default :
  jj_la1[113]=jj_gen;
break label_74;
}
jj_consume_token(S);
}
var=jj_consume_token(VARIABLE);
label_75: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[114]=jj_gen;
break label_75;
}
jj_consume_token(S);
}
jj_consume_token(EACH_IN);
label_76: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[115]=jj_gen;
break label_76;
}
jj_consume_token(S);
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case IDENT:
list=stringList();
documentHandler.startEachDirective(var.image,list);
break;
case REMOVE:
documentHandler.startEachDirective(var.image,list);
removeDirective();
break;
case VARIABLE:
listVariable=variableName();
documentHandler.startEachDirective(var.image,listVariable);
break;
default :
jj_la1[116]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
jj_consume_token(LBRACE);
label_77: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[117]=jj_gen;
break label_77;
}
jj_consume_token(S);
}
label_78: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case ANY:
case PARENT:
case DOT:
case COLON:
case INTERPOLATION:
case INCLUDE_SYM:
case EXTEND_SYM:
case IDENT:
case VARIABLE:
case HASH:
case MEDIA_SYM:
case REMOVE:
;
break;
default :
jj_la1[118]=jj_gen;
break label_78;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case INCLUDE_SYM:
includeDirective();
break;
case REMOVE:
removeDirective();
break;
case MEDIA_SYM:
media();
break;
case EXTEND_SYM:
extendDirective();
break;
case VARIABLE:
variable();
break;
default :
jj_la1[119]=jj_gen;
if (jj_2_5(3)) {
declarationOrNestedProperties();
}
 else {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LBRACKET:
case ANY:
case PARENT:
case DOT:
case COLON:
case INTERPOLATION:
case IDENT:
case HASH:
styleRule();
break;
default :
jj_la1[120]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
}
}
jj_consume_token(RBRACE);
label_79: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S:
;
break;
default :
jj_la1[121]=jj_gen;
break label_79;
}
jj_consume_token(S);
}
documentHandler.endEachDirective();
}
