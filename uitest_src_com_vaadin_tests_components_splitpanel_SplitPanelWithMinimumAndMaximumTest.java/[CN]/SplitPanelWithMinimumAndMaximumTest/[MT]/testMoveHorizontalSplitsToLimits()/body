{
  int[] movements={-250,-350,-320,-100,-200,-100,-170,-400};
  int[] finalPositions={60,60,100,100,478,478,550,550};
  List<HorizontalSplitPanelElement> splits=$(HorizontalSplitPanelElement.class).all();
  Actions actions=new Actions(driver);
  for (int i=0; i < splits.size(); i++) {
    TestBenchElement splitter=splits.get(i).getSplitter();
    actions.clickAndHold(splitter).moveByOffset(movements[i],0).release().perform();
    double newX=parseHorizontalPosition(splitter,i < 4);
    int expectedX=finalPositions[i];
    assertTrue("When moving left, the splitter at index " + i + " was at position "+ newX+ " (expected "+ expectedX+ ").",Math.abs(newX - expectedX) <= 1);
  }
  movements=new int[]{450,450,480,480,450,450,480,480};
  finalPositions=new int[]{478,478,550,550,60,60,100,100};
  for (int i=0; i < splits.size(); i++) {
    TestBenchElement splitter=splits.get(i).getSplitter();
    actions.clickAndHold(splitter).moveByOffset(movements[i],0).release().perform();
    double newX=parseHorizontalPosition(splitter,i < 4);
    int expectedX=finalPositions[i];
    assertTrue("When moving right, the splitter at index " + i + " was at position "+ newX+ " (expected "+ expectedX+ ").",Math.abs(newX - expectedX) <= 1);
  }
}
