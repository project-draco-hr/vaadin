{
  final OrderedLayout main=new OrderedLayout();
  main.setMargin(true);
  setCompositionRoot(main);
  final ComboBox s1=new ComboBox("Select with starts-with filter");
  s1.setFilteringMode(Filtering.FILTERINGMODE_STARTSWITH);
  s1.setColumns(20);
  Random r=new Random(5);
  for (int i=0; i < 105; i++) {
    s1.addItem(firstnames[(int)(r.nextDouble() * (firstnames.length - 1))] + " " + lastnames[(int)(r.nextDouble() * (lastnames.length - 1))]);
  }
  s1.setImmediate(true);
  main.addComponent(s1);
  final ComboBox s2=new ComboBox("Select with contains filter");
  s2.setFilteringMode(Filtering.FILTERINGMODE_CONTAINS);
  s2.setColumns(20);
  for (int i=0; i < 500; i++) {
    s2.addItem(firstnames[(int)(r.nextDouble() * (firstnames.length - 1))] + " " + lastnames[(int)(r.nextDouble() * (lastnames.length - 1))]);
  }
  s2.setImmediate(true);
  main.addComponent(s2);
  final ComboBox s3=new ComboBox("Initially empty; enter your own");
  s3.setColumns(20);
  s3.setImmediate(true);
  main.addComponent(s3);
}
