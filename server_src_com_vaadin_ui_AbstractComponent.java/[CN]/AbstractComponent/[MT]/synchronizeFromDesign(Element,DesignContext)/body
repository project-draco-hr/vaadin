{
  Attributes attr=design.attributes();
  AbstractComponent def=designContext.getDefaultInstance(this.getClass());
  for (  String attribute : getDefaultAttributes()) {
    DesignAttributeHandler.readAttribute(this,attribute,attr,def);
  }
  if (attr.hasKey("immediate")) {
    String str=attr.get("immediate");
    boolean immediate="".equals(str) ? true : Boolean.valueOf(str);
    setImmediate(immediate);
  }
 else {
    explicitImmediateValue=null;
  }
  if (attr.hasKey("locale")) {
    setLocale(getLocaleFromString(attr.get("locale")));
  }
 else {
    setLocale(null);
  }
  readSize(attr,def);
  if (attr.hasKey("error")) {
    UserError error=new UserError(attr.get("error"),ContentMode.HTML,ErrorLevel.ERROR);
    setComponentError(error);
  }
 else {
    setComponentError(def.getComponentError());
  }
  setResponsive(attr.hasKey("responsive") && !attr.get("responsive").equalsIgnoreCase("false"));
  Set<String> supported=new HashSet<String>();
  supported.addAll(getDefaultAttributes());
  supported.addAll(getCustomAttributes());
  for (  Attribute a : attr) {
    if (!a.getKey().startsWith(":") && !supported.contains(a.getKey())) {
      getLogger().info("Unsupported attribute found when synchronizing from design : " + a.getKey());
    }
  }
}
