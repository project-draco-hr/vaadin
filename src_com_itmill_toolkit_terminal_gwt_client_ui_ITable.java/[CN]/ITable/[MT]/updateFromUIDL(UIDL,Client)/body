{
  if (client.updateComponent(this,uidl,true))   return;
  this.client=client;
  this.id=uidl.getStringAttribute("id");
  this.immediate=uidl.getBooleanAttribute("immediate");
  this.totalRows=uidl.getIntAttribute("totalrows");
  this.pageLength=uidl.getIntAttribute("pagelength");
  if (uidl.hasAttribute("rowheaders"))   rowHeaders=true;
  UIDL columnInfo=null;
  UIDL rowData=null;
  for (Iterator it=uidl.getChildIterator(); it.hasNext(); ) {
    UIDL c=(UIDL)it.next();
    if (c.getTag().equals("cols"))     columnInfo=c;
 else     if (c.getTag().equals("rows"))     rowData=c;
 else     if (c.getTag().equals("actions"))     updateActionMap(c);
 else     if (c.getTag().equals("visiblecolumns"))     ;
  }
  updateHeader(columnInfo);
  updateBody(rowData,uidl.getIntAttribute("firstrow"),uidl.getIntAttribute("rows"));
  if (!colWidthsInitialized) {
    DeferredCommand.add(new Command(){
      public void execute(){
        initSize();
        updateSpacers();
        bodyContainer.setScrollPosition(getRowHeight() * (firstRowInViewPort - 1));
        colWidthsInitialized=true;
        if (totalRows - 1 > lastRendered) {
          rowRequestHandler.setReqFirstRow(lastRendered + 1);
          rowRequestHandler.setReqRows((int)(pageLength * CACHE_RATE));
          rowRequestHandler.deferRowFetch();
        }
      }
    }
);
  }
}
