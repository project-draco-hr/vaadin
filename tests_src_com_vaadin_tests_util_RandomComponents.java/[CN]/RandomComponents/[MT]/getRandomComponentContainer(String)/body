{
  ComponentContainer result=null;
  final int randint=seededRandom.nextInt(5);
switch (randint) {
case 0:
    result=new OrderedLayout(OrderedLayout.ORIENTATION_HORIZONTAL);
  ((OrderedLayout)result).setCaption("OrderedLayout_horizontal_" + caption);
break;
case 1:
result=new OrderedLayout(OrderedLayout.ORIENTATION_VERTICAL);
((OrderedLayout)result).setCaption("OrderedLayout_vertical_" + caption);
break;
case 2:
GridLayout gl;
if (seededRandom.nextInt(1) > 0) {
gl=new GridLayout();
}
 else {
gl=new GridLayout(seededRandom.nextInt(3) + 1,seededRandom.nextInt(3) + 1);
}
gl.setCaption("GridLayout_" + caption);
gl.setDescription(gl.getCaption());
for (int x=0; x < gl.getColumns(); x++) {
for (int y=0; y < gl.getRows(); y++) {
gl.addComponent(new Label("x=" + x + ", y="+ y));
}
}
result=gl;
break;
case 3:
result=new Panel();
((Panel)result).setCaption("Panel_" + caption);
break;
case 4:
final TabSheet ts=new TabSheet();
ts.setCaption("TabSheet_" + caption);
final int selectedTab=seededRandom.nextInt(3);
final ArrayList<ComponentContainer> tabs=new ArrayList<ComponentContainer>();
for (int i=0; i < 3; i++) {
String tabCaption="tab" + i;
if (selectedTab == i) {
tabCaption="tabX";
}
tabs.add(new OrderedLayout());
ts.addTab(tabs.get(tabs.size() - 1),tabCaption,null);
}
ts.setSelectedTab(tabs.get(selectedTab));
result=ts;
break;
}
return result;
}
