{
  HorizontalLayout row=addSection(root,"Text Fields",Category.Inputs,null);
  TextField tf=new TextField("Normal");
  tf.setInputPrompt("First name");
  tf.setIcon(icon(false));
  row.addComponent(tf);
  tf=new TextField("Focused");
  tf.setInputPrompt("Last name");
  tf.addStyleName("focused");
  row.addComponent(tf);
  tf=new TextField("Custom color");
  tf.setInputPrompt("Email");
  tf.addStyleName("color1");
  row.addComponent(tf);
  tf=new TextField("User Color");
  tf.setInputPrompt("Gender");
  tf.addStyleName("color2");
  row.addComponent(tf);
  tf=new TextField("Themed");
  tf.setInputPrompt("Age");
  tf.addStyleName("color3");
  row.addComponent(tf);
  tf=new TextField("Read-only");
  tf.setInputPrompt("Nationality");
  tf.setValue("Finnish");
  tf.setReadOnly(true);
  row.addComponent(tf);
  tf=new TextField("Small");
  tf.setValue("Field value");
  tf.addStyleName("small");
  row.addComponent(tf);
  tf=new TextField("Large");
  tf.setValue("Field value");
  tf.addStyleName("large");
  tf.setIcon(icon(true));
  row.addComponent(tf);
  tf=new TextField("Icon inside");
  tf.setInputPrompt("Ooh, an icon");
  tf.addStyleName("inline-icon");
  tf.setIcon(icon(false));
  row.addComponent(tf);
  tf=new TextField("16px supported by default");
  tf.setInputPrompt("Image icon");
  tf.addStyleName("inline-icon");
  tf.setIcon(icon(true,16));
  row.addComponent(tf);
  tf=new TextField();
  tf.setValue("Font, no caption");
  tf.addStyleName("inline-icon");
  tf.setIcon(icon(false));
  row.addComponent(tf);
  tf=new TextField();
  tf.setValue("Image, no caption");
  tf.addStyleName("inline-icon");
  tf.setIcon(icon(true,16));
  row.addComponent(tf);
  CssLayout group=new CssLayout();
  group.addStyleName("v-component-group");
  row.addComponent(group);
  tf=new TextField();
  tf.setInputPrompt("Grouped with a button");
  tf.addStyleName("inline-icon");
  tf.setIcon(icon(false));
  tf.setWidth("260px");
  group.addComponent(tf);
  Button button=new Button("Do It");
  group.addComponent(button);
  tf=new TextField("Borderless");
  tf.setInputPrompt("Write here???");
  tf.addStyleName("inline-icon");
  tf.addStyleName("borderless");
  tf.setIcon(icon(false));
  row.addComponent(tf);
}
