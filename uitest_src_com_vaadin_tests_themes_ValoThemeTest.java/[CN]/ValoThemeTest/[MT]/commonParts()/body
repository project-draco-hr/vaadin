{
  final VerticalLayout root=new VerticalLayout();
  root.setMargin(true);
  root.addStyleName("common-parts");
  HorizontalLayout row=addSection(root,"Loading Indicator",Category.Common,"You can test the loading indicator by pressing the buttons. The theme also provides a mixin that you can use to include a spinner anywhere in your application.");
  Button loading=new Button("Loading (800ms)???");
  loading.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      try {
        Thread.sleep(800);
      }
 catch (      InterruptedException e) {
      }
    }
  }
);
  row.addComponent(loading);
  Button delay=new Button("Task Delayed (3s)???");
  delay.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      try {
        Thread.sleep(3000);
      }
 catch (      InterruptedException e) {
      }
    }
  }
);
  row.addComponent(delay);
  Button wait=new Button("Please Wait (15s)???");
  wait.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      try {
        Thread.sleep(15000);
      }
 catch (      InterruptedException e) {
      }
    }
  }
);
  row.addComponent(wait);
  row=addSection(root,"Notifications",Category.Common,null);
  final Notification notification=new Notification("Notification Title");
  final Notification notification2=new Notification("Notification Title");
  notification2.setDescription("A more informative message about what has happened. Nihil hic munitissimus habendi senatus locus, nihil horum? Inmensae subtilitatis, obscuris et malesuada fames. Hi omnes lingua, institutis, legibus inter se differunt.");
  CssLayout group=new CssLayout();
  group.addStyleName("v-component-group");
  row.addComponent(group);
  Button notify=new Button("Humanized",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      notification.setPosition(Position.MIDDLE_CENTER);
      notification.setDelayMsec(-1);
      notification.setStyleName("humanized");
      notification.show(getPage());
    }
  }
);
  group.addComponent(notify);
  notify=new Button("+ description",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      notification2.setPosition(Position.TOP_LEFT);
      notification2.setDelayMsec(-1);
      notification2.setStyleName("humanized closable");
      notification2.show(getPage());
    }
  }
);
  group.addComponent(notify);
  group=new CssLayout();
  group.addStyleName("v-component-group");
  row.addComponent(group);
  notify=new Button("Tray",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      notification.setPosition(Position.TOP_RIGHT);
      notification.setDelayMsec(-1);
      notification.setStyleName("tray");
      notification.show(getPage());
    }
  }
);
  group.addComponent(notify);
  notify=new Button("+ description",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      notification2.setPosition(Position.BOTTOM_RIGHT);
      notification2.setDelayMsec(-1);
      notification2.setStyleName("tray closable");
      notification2.show(getPage());
    }
  }
);
  group.addComponent(notify);
  group=new CssLayout();
  group.addStyleName("v-component-group");
  row.addComponent(group);
  notify=new Button("Warning",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      notification.setPosition(Position.MIDDLE_CENTER);
      notification.setDelayMsec(1500);
      notification.setStyleName("warning");
      notification.show(getPage());
    }
  }
);
  group.addComponent(notify);
  notify=new Button("+ description",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      notification2.setPosition(Position.TOP_CENTER);
      notification2.setDelayMsec(-1);
      notification2.setStyleName("warning closable");
      notification2.show(getPage());
    }
  }
);
  group.addComponent(notify);
  notify=new Button("No caption",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      Notification n3=new Notification(null,"Just a simple description for this warning message.");
      n3.setPosition(Position.TOP_CENTER);
      n3.setDelayMsec(-1);
      n3.setStyleName("warning closable");
      n3.show(getPage());
    }
  }
);
  group.addComponent(notify);
  group=new CssLayout();
  group.addStyleName("v-component-group");
  row.addComponent(group);
  notify=new Button("Error",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      notification.setPosition(Position.MIDDLE_CENTER);
      notification.setDelayMsec(2000);
      notification.setStyleName("error");
      notification.show(getPage());
    }
  }
);
  group.addComponent(notify);
  notify=new Button("+ description",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      notification2.setPosition(Position.BOTTOM_CENTER);
      notification2.setDelayMsec(-1);
      notification2.setStyleName("error closable");
      notification2.show(getPage());
    }
  }
);
  group.addComponent(notify);
  notify=new Button("System Message",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      Notification n=new Notification("Session Expired","A really long description this time, to test how well this will wrap to new lines. Morbi fringilla convallis sapien, id pulvinar odio volutpat. Sed haec quis possit intrepidus aestimare tellus.");
      n.setDelayMsec(-1);
      n.setPosition(Position.TOP_LEFT);
      n.setStyleName("system closable");
      n.show(getPage());
    }
  }
);
  row.addComponent(notify);
  row=addSection(root,"Windows",Category.Component_Containers,null);
  final Window win=new Window("Window Caption");
  win.setWidth("320px");
  win.setContent(windowContents(false));
  group=new CssLayout();
  group.addStyleName("v-component-group");
  row.addComponent(group);
  Button button=new Button("Fixed footer",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      win.close();
      win.setContent(windowContents(true));
      win.setHeight("240px");
      win.setResizable(true);
      UI.getCurrent().addWindow(win);
      win.setPositionX(Page.getCurrent().getBrowserWindowWidth() / 3);
      win.setPositionY(Page.getCurrent().getBrowserWindowHeight() / 3);
    }
  }
);
  group.addComponent(button);
  button=new Button("Auto height",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      win.close();
      win.setContent(windowContents(false));
      win.setHeight(null);
      win.setResizable(false);
      UI.getCurrent().addWindow(win);
      win.setPositionX(Page.getCurrent().getBrowserWindowWidth() / 3);
      win.setPositionY(Page.getCurrent().getBrowserWindowHeight() / 3);
    }
  }
);
  group.addComponent(button);
  group=new CssLayout();
  group.addStyleName("v-component-group");
  row.addComponent(group);
  button=new Button("Toggle caption",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      if (win.getCaption().equals("")) {
        win.setCaption("Window Caption");
      }
 else {
        win.setCaption("");
      }
    }
  }
);
  group.addComponent(button);
  button=new Button("Toggle close",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      win.setClosable(!win.isClosable());
    }
  }
);
  group.addComponent(button);
  button=new Button("Toggle maximize",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      win.setResizable(!win.isResizable());
    }
  }
);
  group.addComponent(button);
  row=addSection(root,"Tooltips",Category.Common,null);
  Label label=new Label("Simple");
  label.setDescription("Simple tooltip message");
  row.addComponent(label);
  label=new Label("Long");
  label.setDescription("Long tooltip message. Inmensae subtilitatis, obscuris et malesuada fames. Salutantibus vitae elit libero, a pharetra augue.");
  row.addComponent(label);
  label=new Label("HTML");
  label.setDescription("<div><h1>Ut enim ad minim veniam, quis nostrud exercitation</h1><p><span>Morbi fringilla convallis sapien, id pulvinar odio volutpat.</span> <span>Vivamus sagittis lacus vel augue laoreet rutrum faucibus.</span> <span>Donec sed odio operae, eu vulputate felis rhoncus.</span> <span>At nos hinc posthac, sitientis piros Afros.</span> <span>Tu quoque, Brute, fili mi, nihil timor populi, nihil!</span></p><p><span>Gallia est omnis divisa in partes tres, quarum.</span> <span>Praeterea iter est quasdam res quas ex communi.</span> <span>Cum ceteris in veneratione tui montes, nascetur mus.</span> <span>Quam temere in vitiis, legem sancimus haerentia.</span> <span>Idque Caesaris facere voluntate liceret: sese habere.</span></p></div>");
  row.addComponent(label);
  label=new Label("w/ Error message");
  label.setDescription("Simple tooltip message");
  label.setComponentError(new UserError("Something terrible has happened"));
  row.addComponent(label);
  label=new Label("w/ Long error message");
  label.setDescription("Simple tooltip message");
  label.setComponentError(new UserError("<h2>Contra legem facit qui id facit quod lex prohibet <span>Tityre, tu patulae recubans sub tegmine fagi  dolor.</span> <span>Tityre, tu patulae recubans sub tegmine fagi  dolor.</span> <span>Prima luce, cum quibus mons aliud  consensu ab eo.</span> <span>Quid securi etiam tamquam eu fugiat nulla pariatur.</span> <span>Fabio vel iudice vincam, sunt in culpa qui officia.</span> <span>Nihil hic munitissimus habendi senatus locus, nihil horum?</span></p><p><span>Plura mihi bona sunt, inclinet, amari petere vellent.</span> <span>Integer legentibus erat a ante historiarum dapibus.</span> <span>Quam diu etiam furor iste tuus nos eludet?</span> <span>Nec dubitamus multa iter quae et nos invenerat.</span> <span>Quisque ut dolor gravida, placerat libero vel, euismod.</span> <span>Quae vero auctorem tractata ab fiducia dicuntur.</span></h2>",AbstractErrorMessage.ContentMode.HTML,ErrorLevel.CRITICAL));
  row.addComponent(label);
  label=new Label("Error message only");
  label.setComponentError(new UserError("Something terrible has happened"));
  row.addComponent(label);
  return root;
}
