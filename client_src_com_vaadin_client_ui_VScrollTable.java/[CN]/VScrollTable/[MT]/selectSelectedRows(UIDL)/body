{
  boolean keyboardSelectionOverRowFetchInProgress=false;
  if (uidl.hasVariable("selected")) {
    final Set<String> selectedKeys=uidl.getStringArrayVariableAsSet("selected");
    boolean rowsUnSelected=removeUnselectedRowKeys(selectedKeys);
    boolean updateFocus=rowsUnSelected || selectedRowKeys.size() == 0 || focusedRow == null;
    if (scrollBody != null) {
      Iterator<Widget> iterator=scrollBody.iterator();
      while (iterator.hasNext()) {
        VScrollTableRow row=(VScrollTableRow)iterator.next();
        boolean selected=selectedKeys.contains(row.getKey());
        if (!selected && unSyncedselectionsBeforeRowFetch != null && unSyncedselectionsBeforeRowFetch.contains(row.getKey())) {
          selected=true;
          keyboardSelectionOverRowFetchInProgress=true;
        }
        if (selected && selectedKeys.size() == 1 && updateFocus) {
          setRowFocus(row);
        }
        if (selected != row.isSelected()) {
          row.toggleSelection();
          if (!isSingleSelectMode() && !selected) {
            removeRowFromUnsentSelectionRanges(row);
          }
        }
      }
    }
  }
  unSyncedselectionsBeforeRowFetch=null;
  return keyboardSelectionOverRowFetchInProgress;
}
