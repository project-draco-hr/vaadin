{
  int type=event.getTypeInt();
switch (type) {
case Event.ONCONTEXTMENU:
    target.showContextMenu(event);
  break;
case Event.ONTOUCHSTART:
touchStart=event;
Touch touch=event.getChangedTouches().get(0);
touchStartX=touch.getClientX();
touchStartY=touch.getClientY();
if (contextTouchTimeout == null) {
contextTouchTimeout=new Timer(){
@Override public void run(){
if (touchStart != null) {
target.showContextMenu(touchStart);
event.preventDefault();
touchStart=null;
}
}
}
;
}
contextTouchTimeout.schedule(TOUCH_CONTEXT_MENU_TIMEOUT);
break;
case Event.ONTOUCHCANCEL:
case Event.ONTOUCHEND:
cancel();
break;
case Event.ONTOUCHMOVE:
if (isSignificantMove(event)) {
cancel();
}
}
}
