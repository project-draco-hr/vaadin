{
switch (DOM.eventGetType(event)) {
case Event.ONMOUSEDOWN:
    if (!Util.isTouchEventOrLeftMouseButton(event)) {
      return;
    }
  isResizing=true;
DOM.setCapture(getElement());
dragStartX=DOM.eventGetClientX(event);
colIndex=getColIndexByKey(cid);
originalWidth=getWidthWithIndent();
DOM.eventPreventDefault(event);
break;
case Event.ONMOUSEUP:
if (!Util.isTouchEventOrLeftMouseButton(event)) {
return;
}
isResizing=false;
DOM.releaseCapture(getElement());
tHead.disableAutoColumnWidthCalculation(this);
HeaderCell lastCell=tHead.getHeaderCell(tHead.getVisibleCellCount() - 1);
tHead.resizeCaptionContainer(lastCell);
triggerLazyColumnAdjustment(true);
fireColumnResizeEvent(cid,originalWidth,getColWidth(cid));
break;
case Event.ONMOUSEMOVE:
if (!Util.isTouchEventOrLeftMouseButton(event)) {
return;
}
if (isResizing) {
final int deltaX=DOM.eventGetClientX(event) - dragStartX;
if (deltaX == 0) {
return;
}
tHead.disableAutoColumnWidthCalculation(this);
int newWidth=originalWidth + deltaX;
int minWidth=getMinWidth(true,false);
if (newWidth < minWidth) {
newWidth=minWidth;
}
setColWidth(colIndex,newWidth,true);
triggerLazyColumnAdjustment(false);
forceRealignColumnHeaders();
}
break;
default :
break;
}
}
