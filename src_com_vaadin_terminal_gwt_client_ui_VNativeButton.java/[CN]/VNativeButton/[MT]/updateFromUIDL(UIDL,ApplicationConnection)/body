{
  if (client.updateComponent(this,uidl,false)) {
    return;
  }
  disableOnClick=uidl.hasAttribute(VButton.ATTR_DISABLE_ON_CLICK);
  focusHandlerRegistration=EventHelper.updateFocusHandler(this,client,focusHandlerRegistration);
  blurHandlerRegistration=EventHelper.updateBlurHandler(this,client,blurHandlerRegistration);
  this.client=client;
  id=uidl.getId();
  htmlCaption=uidl.hasAttribute("html-caption") && uidl.getBooleanAttribute("html-caption");
  setText(uidl.getStringAttribute("caption"));
  if (uidl.hasAttribute("error")) {
    if (errorIndicatorElement == null) {
      errorIndicatorElement=DOM.createSpan();
      errorIndicatorElement.setClassName("v-errorindicator");
    }
    getElement().insertBefore(errorIndicatorElement,captionElement);
    if (BrowserInfo.get().isIE()) {
      errorIndicatorElement.setInnerText(" ");
    }
  }
 else   if (errorIndicatorElement != null) {
    getElement().removeChild(errorIndicatorElement);
    errorIndicatorElement=null;
  }
  if (uidl.hasAttribute("icon")) {
    if (icon == null) {
      icon=new Icon(client);
      getElement().insertBefore(icon.getElement(),captionElement);
    }
    icon.setUri(uidl.getStringAttribute("icon"));
  }
 else {
    if (icon != null) {
      getElement().removeChild(icon.getElement());
      icon=null;
    }
  }
  if (BrowserInfo.get().isIE7()) {
    if (width.equals("")) {
      Scheduler.get().scheduleDeferred(new Command(){
        public void execute(){
          setWidth("");
          setWidth(getOffsetWidth() + "px");
        }
      }
);
    }
  }
}
