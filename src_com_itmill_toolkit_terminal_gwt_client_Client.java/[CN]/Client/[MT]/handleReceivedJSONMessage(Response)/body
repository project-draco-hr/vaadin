{
  Date start=new Date();
  String jsonText=response.getText().substring(3) + "}";
  JSONValue json;
  try {
    json=JSONParser.parse(jsonText);
  }
 catch (  com.google.gwt.json.client.JSONException e) {
    console.log(e.getMessage() + " - Original JSON-text:");
    console.log(jsonText);
    return;
  }
  JSONObject resources=(JSONObject)((JSONObject)json).get("resources");
  for (Iterator i=resources.keySet().iterator(); i.hasNext(); ) {
    String key=(String)i.next();
    resourcesMap.put(key,((JSONString)resources.get(key)).stringValue());
  }
  JSONArray changes=(JSONArray)((JSONObject)json).get("changes");
  for (int i=0; i < changes.size(); i++) {
    try {
      UIDL change=new UIDL((JSONArray)changes.get(i));
      try {
        console.dirUIDL(change);
      }
 catch (      Exception e) {
        console.log(e.getMessage());
      }
      UIDL uidl=change.getChildUIDL(0);
      Paintable paintable=getPaintable(uidl.getId());
      if (paintable != null)       paintable.updateFromUIDL(uidl,this);
 else {
        if (!uidl.getTag().equals("window"))         throw new IllegalStateException("Received update for " + uidl.getTag() + ", but there is no such paintable ("+ uidl.getId()+ ") registered yet.");
        Widget window=widgetFactory.createWidget(uidl);
        registerPaintable(uidl.getId(),(Paintable)window);
        ((Paintable)window).updateFromUIDL(uidl,this);
        RootPanel.get("itmtk-ajax-window").add(window);
      }
    }
 catch (    Throwable e) {
      e.printStackTrace();
    }
  }
  long prosessingTime=(new Date().getTime()) - start.getTime();
  console.log(" Processing time was " + String.valueOf(prosessingTime) + "ms for "+ jsonText.length()+ " characters of JSON");
}
