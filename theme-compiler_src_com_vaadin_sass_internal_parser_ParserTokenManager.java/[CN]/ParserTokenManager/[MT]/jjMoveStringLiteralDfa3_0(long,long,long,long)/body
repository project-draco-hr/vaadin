{
  if (((active0&=old0) | (active1&=old1)) == 0L) {
    return jjStartNfa_0(1,old0,old1);
  }
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(2,active0,active1);
    return 3;
  }
switch (curChar) {
case 45:
    if ((active0 & 0x400L) != 0L) {
      return jjStopAtPos(3,10);
    }
  break;
case 65:
case 97:
return jjMoveStringLiteralDfa4_0(active0,0L,active1,0x2000000000L);
case 66:
case 98:
return jjMoveStringLiteralDfa4_0(active0,0x800000000000000L,active1,0L);
case 67:
case 99:
return jjMoveStringLiteralDfa4_0(active0,0x4100000000000000L,active1,0L);
case 68:
case 100:
return jjMoveStringLiteralDfa4_0(active0,0L,active1,0x1000000000L);
case 71:
case 103:
return jjMoveStringLiteralDfa4_0(active0,0L,active1,0x4000000000L);
case 73:
case 105:
return jjMoveStringLiteralDfa4_0(active0,0x8000000000000000L,active1,0L);
case 77:
case 109:
if ((active0 & 0x40000000000000L) != 0L) {
return jjStartNfaWithStates_0(3,54,518);
}
break;
case 78:
case 110:
return jjMoveStringLiteralDfa4_0(active0,0x200000000000000L,active1,0x8000000020L);
case 79:
case 111:
return jjMoveStringLiteralDfa4_0(active0,0x10000000000000L,active1,0x8L);
case 80:
case 112:
return jjMoveStringLiteralDfa4_0(active0,0L,active1,0x800000010L);
case 82:
case 114:
if ((active0 & 0x2000000000000000L) != 0L) {
return jjStartNfaWithStates_0(3,61,520);
}
return jjMoveStringLiteralDfa4_0(active0,0x1000000000000000L,active1,0L);
case 83:
case 115:
return jjMoveStringLiteralDfa4_0(active0,0L,active1,0x2L);
case 84:
case 116:
return jjMoveStringLiteralDfa4_0(active0,0x400000000000000L,active1,0x4L);
case 88:
case 120:
return jjMoveStringLiteralDfa4_0(active0,0x80000000000000L,active1,0L);
default :
break;
}
return jjStartNfa_0(2,active0,active1);
}
