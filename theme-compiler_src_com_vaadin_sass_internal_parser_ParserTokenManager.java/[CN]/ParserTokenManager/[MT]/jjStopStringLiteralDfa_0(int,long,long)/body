{
switch (pos) {
case 0:
    if ((active0 & 0xffe0000000000000L) != 0L || (active1 & 0x3e0000000fL) != 0L)     return 162;
  if ((active0 & 0xe000000000000L) != 0L || (active1 & 0x20L) != 0L) {
    jjmatchedKind=72;
    return 522;
  }
if ((active0 & 0x80000000L) != 0L) return 523;
if ((active0 & 0x10000000000000L) != 0L) {
jjmatchedKind=72;
return 29;
}
if ((active0 & 0x4000L) != 0L) return 75;
if ((active0 & 0x2000010L) != 0L) return 216;
if ((active0 & 0x80200L) != 0L) return 38;
if ((active0 & 0x2000000000L) != 0L) return 524;
return -1;
case 1:
if ((active1 & 0x2L) != 0L) return 174;
if ((active0 & 0xffe0000000000000L) != 0L || (active1 & 0x3e0000000dL) != 0L) {
jjmatchedKind=103;
jjmatchedPos=1;
return 525;
}
if ((active0 & 0x14000000000000L) != 0L) {
jjmatchedKind=72;
jjmatchedPos=1;
return 522;
}
if ((active0 & 0xa000000000000L) != 0L || (active1 & 0x20L) != 0L) return 522;
if ((active0 & 0x10L) != 0L) return 221;
return -1;
case 2:
if ((active0 & 0xbfe0000000000000L) != 0L || (active1 & 0x3e0000000dL) != 0L) {
jjmatchedKind=103;
jjmatchedPos=2;
return 525;
}
if ((active0 & 0x4000000000000000L) != 0L) return 525;
if ((active1 & 0x2L) != 0L) {
jjmatchedKind=103;
jjmatchedPos=2;
return 173;
}
if ((active0 & 0x14000000000000L) != 0L) {
jjmatchedKind=72;
jjmatchedPos=2;
return 522;
}
return -1;
case 3:
if ((active0 & 0xb7e0000000000000L) != 0L || (active1 & 0x3e0000000dL) != 0L) {
jjmatchedKind=103;
jjmatchedPos=3;
return 525;
}
if ((active0 & 0x800000000000000L) != 0L) return 525;
if ((active0 & 0x4000000000000L) != 0L) {
jjmatchedKind=72;
jjmatchedPos=3;
return 522;
}
if ((active0 & 0x10000000000000L) != 0L) return 522;
if ((active1 & 0x2L) != 0L) {
jjmatchedKind=103;
jjmatchedPos=3;
return 172;
}
return -1;
case 4:
if ((active0 & 0x9400000000000000L) != 0L || (active1 & 0x1000000000L) != 0L) return 525;
if ((active1 & 0x2L) != 0L) {
jjmatchedKind=103;
jjmatchedPos=4;
return 171;
}
if ((active0 & 0x4000000000000L) != 0L) {
jjmatchedKind=72;
jjmatchedPos=4;
return 522;
}
if ((active0 & 0x23e0000000000000L) != 0L || (active1 & 0x2e0000000dL) != 0L) {
jjmatchedKind=103;
jjmatchedPos=4;
return 525;
}
return -1;
case 5:
if ((active1 & 0x2L) != 0L) {
jjmatchedKind=103;
jjmatchedPos=5;
return 170;
}
if ((active0 & 0x4000000000000L) != 0L) {
jjmatchedKind=72;
jjmatchedPos=5;
return 522;
}
if ((active0 & 0x2220000000000000L) != 0L || (active1 & 0x400000000L) != 0L) return 525;
if ((active0 & 0x1c0000000000000L) != 0L || (active1 & 0x2a0000000dL) != 0L) {
jjmatchedKind=103;
jjmatchedPos=5;
return 525;
}
return -1;
case 6:
if ((active0 & 0x100000000000000L) != 0L || (active1 & 0x200000001L) != 0L) return 525;
if ((active0 & 0x4000000000000L) != 0L) return 522;
if ((active0 & 0xc0000000000000L) != 0L || (active1 & 0x280000000eL) != 0L) {
jjmatchedKind=103;
jjmatchedPos=6;
return 525;
}
return -1;
case 7:
if ((active0 & 0x40000000000000L) != 0L || (active1 & 0x800000008L) != 0L) return 525;
if ((active0 & 0x80000000000000L) != 0L || (active1 & 0x2000000006L) != 0L) {
jjmatchedKind=103;
jjmatchedPos=7;
return 525;
}
return -1;
case 8:
if ((active1 & 0x2000000002L) != 0L) {
jjmatchedKind=103;
jjmatchedPos=8;
return 525;
}
if ((active0 & 0x80000000000000L) != 0L || (active1 & 0x4L) != 0L) return 525;
return -1;
case 9:
if ((active1 & 0x2L) != 0L) {
jjmatchedKind=103;
jjmatchedPos=9;
return 525;
}
if ((active1 & 0x2000000000L) != 0L) return 525;
return -1;
case 10:
if ((active1 & 0x2L) != 0L) {
jjmatchedKind=103;
jjmatchedPos=10;
return 525;
}
return -1;
case 11:
if ((active1 & 0x2L) != 0L) {
jjmatchedKind=103;
jjmatchedPos=11;
return 525;
}
return -1;
case 12:
if ((active1 & 0x2L) != 0L) {
jjmatchedKind=103;
jjmatchedPos=12;
return 525;
}
return -1;
default :
return -1;
}
}
