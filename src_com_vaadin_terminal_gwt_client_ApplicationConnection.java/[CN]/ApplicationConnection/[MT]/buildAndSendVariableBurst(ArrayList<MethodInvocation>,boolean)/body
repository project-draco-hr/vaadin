{
  final StringBuffer req=new StringBuffer();
  while (!pendingInvocations.isEmpty()) {
    if (ApplicationConfiguration.isDebugMode()) {
      Util.logVariableBurst(this,pendingInvocations);
    }
    JSONArray reqJson=new JSONArray();
    for (    MethodInvocation invocation : pendingInvocations) {
      JSONArray invocationJson=new JSONArray();
      invocationJson.set(0,new JSONString(invocation.getPaintableId()));
      invocationJson.set(1,new JSONString(invocation.getMethodName()));
      JSONArray paramJson=new JSONArray();
      for (int i=0; i < invocation.getParameters().length; ++i) {
        paramJson.set(i,new JSONString(invocation.getParameters()[i]));
      }
      invocationJson.set(2,paramJson);
      reqJson.set(reqJson.size(),invocationJson);
    }
    req.append(reqJson.toString());
    pendingInvocations.clear();
    if (forceSync && !pendingBursts.isEmpty()) {
      pendingInvocations=pendingBursts.get(0);
      pendingBursts.remove(0);
      req.append(VAR_BURST_SEPARATOR);
    }
  }
  String extraParams;
  if (!getConfiguration().isBrowserDetailsSent()) {
    extraParams=getNativeBrowserDetailsParameters(getConfiguration().getRootPanelId());
    getConfiguration().setBrowserDetailsSent();
  }
 else {
    extraParams="";
  }
  makeUidlRequest(req.toString(),extraParams,forceSync);
}
