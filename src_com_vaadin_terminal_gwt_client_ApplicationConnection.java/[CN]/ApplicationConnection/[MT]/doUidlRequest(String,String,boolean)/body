{
  if (!synchronous) {
    RequestCallback requestCallback=new RequestCallback(){
      public void onError(      Request request,      Throwable exception){
        showCommunicationError(exception.getMessage());
        endRequest();
      }
      public void onResponseReceived(      Request request,      Response response){
        VConsole.log("Server visit took " + String.valueOf((new Date()).getTime() - requestStartTime.getTime()) + "ms");
        int statusCode=response.getStatusCode();
switch (statusCode) {
case 0:
          showCommunicationError("Invalid status code 0 (server down?)");
        endRequest();
      return;
case 401:
    showAuthenticationError("");
  endRequest();
return;
case 503:
int delay=Integer.parseInt(response.getHeader("Retry-After"));
VConsole.log("503, retrying in " + delay + "msec");
(new Timer(){
@Override public void run(){
decrementActiveRequests();
doUidlRequest(uri,payload,synchronous);
}
}
).schedule(delay);
return;
}
if ((statusCode / 100) == 4) {
showCommunicationError("UIDL could not be read from server. Check servlets mappings. Error code: " + statusCode);
endRequest();
return;
}
final String jsonText=response.getText().substring(9,response.getText().length() - 1);
handleJSONText(jsonText);
}
}
;
try {
doAsyncUIDLRequest(uri,payload,requestCallback);
}
 catch (RequestException e) {
VConsole.error(e);
endRequest();
}
}
 else {
SynchronousXHR syncXHR=(SynchronousXHR)SynchronousXHR.create();
syncXHR.synchronousPost(uri + "&" + PARAM_UNLOADBURST+ "=1",payload);
endRequest();
}
}
