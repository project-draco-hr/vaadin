{
  createCategory("Columns",null);
  createBooleanAction("Selection controls","Columns",false,new Command<Grid,Boolean>(){
    @Override public void execute(    Grid grid,    Boolean value,    Object data){
      grid.setSelectionCheckboxes(value);
    }
  }
);
  for (int c=0; c < COLUMNS; c++) {
    createCategory(getColumnProperty(c),"Columns");
    createBooleanAction("Visible",getColumnProperty(c),true,new Command<Grid,Boolean>(){
      @Override public void execute(      Grid grid,      Boolean value,      Object columnIndex){
        Object propertyId=(new ArrayList(grid.getContainerDatasource().getContainerPropertyIds()).get((Integer)columnIndex));
        GridColumn column=grid.getColumn(propertyId);
        column.setVisible(!column.isVisible());
      }
    }
,c);
    createClickAction("Remove",getColumnProperty(c),new Command<Grid,String>(){
      @Override public void execute(      Grid grid,      String value,      Object data){
        grid.getContainerDatasource().removeContainerProperty("Column" + data);
      }
    }
,null,c);
    createClickAction("Freeze",getColumnProperty(c),new Command<Grid,String>(){
      @Override public void execute(      Grid grid,      String value,      Object data){
        grid.setLastFrozenPropertyId("Column" + data);
      }
    }
,null,c);
    createBooleanAction("Sortable",getColumnProperty(c),true,new Command<Grid,Boolean>(){
      @Override public void execute(      Grid grid,      Boolean value,      Object columnIndex){
        Object propertyId=(new ArrayList(grid.getContainerDatasource().getContainerPropertyIds()).get((Integer)columnIndex));
        GridColumn column=grid.getColumn(propertyId);
        column.setSortable(value);
      }
    }
,c);
    createCategory("Column" + c + " Width",getColumnProperty(c));
    createClickAction("Auto","Column" + c + " Width",new Command<Grid,Integer>(){
      @Override public void execute(      Grid grid,      Integer value,      Object columnIndex){
        Object propertyId=(new ArrayList(grid.getContainerDatasource().getContainerPropertyIds()).get((Integer)columnIndex));
        GridColumn column=grid.getColumn(propertyId);
        column.setWidthUndefined();
      }
    }
,-1,c);
    for (int w=50; w < 300; w+=50) {
      createClickAction(w + "px","Column" + c + " Width",new Command<Grid,Integer>(){
        @Override public void execute(        Grid grid,        Integer value,        Object columnIndex){
          Object propertyId=(new ArrayList(grid.getContainerDatasource().getContainerPropertyIds()).get((Integer)columnIndex));
          GridColumn column=grid.getColumn(propertyId);
          column.setWidth(value);
        }
      }
,w,c);
    }
  }
}
