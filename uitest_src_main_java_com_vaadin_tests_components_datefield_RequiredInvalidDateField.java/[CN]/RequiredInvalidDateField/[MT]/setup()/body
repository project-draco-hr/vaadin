{
  Date date=new Date(2011 - 1900,9 - 1,1);
  Validator dateValidator=new LegacyAbstractValidator<Date>("Day of month must be an even number"){
    @Override protected boolean isValidValue(    Date value){
      if (value == null) {
        return true;
      }
      return (value.getDate() % 2 == 0);
    }
    @Override public Class getType(){
      return Date.class;
    }
  }
;
  Property<Date> dateProperty1=new ObjectProperty<Date>(date);
  LegacyDateField dateField1=new LegacyDateField("Not required",dateProperty1);
  dateField1.setLocale(new Locale("fi","FI"));
  dateField1.setResolution(LegacyDateField.RESOLUTION_DAY);
  dateField1.setId("_DF1");
  dateField1.setImmediate(true);
  dateField1.addValidator(dateValidator);
  addComponent(dateField1);
  Property<Date> dateProperty2=new ObjectProperty<Date>(date);
  LegacyDateField dateField2=new LegacyDateField("Required",dateProperty2);
  dateField2.setLocale(new Locale("fi","FI"));
  dateField2.setResolution(LegacyDateField.RESOLUTION_DAY);
  dateField2.setId("_DF2");
  dateField2.setRequired(true);
  dateField2.setImmediate(true);
  dateField2.addValidator(dateValidator);
  addComponent(dateField2);
}
