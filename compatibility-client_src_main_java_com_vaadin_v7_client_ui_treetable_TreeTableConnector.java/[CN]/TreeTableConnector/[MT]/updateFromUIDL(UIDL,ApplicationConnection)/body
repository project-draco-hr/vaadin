{
  FocusableScrollPanel widget=null;
  int scrollPosition=0;
  if (getWidget().collapseRequest) {
    widget=(FocusableScrollPanel)getWidget().getWidget(1);
    scrollPosition=widget.getScrollPosition();
  }
  getWidget().animationsEnabled=uidl.getBooleanAttribute("animate");
  getWidget().colIndexOfHierarchy=uidl.hasAttribute(TreeTableConstants.ATTRIBUTE_HIERARCHY_COLUMN_INDEX) ? uidl.getIntAttribute(TreeTableConstants.ATTRIBUTE_HIERARCHY_COLUMN_INDEX) : 0;
  int oldTotalRows=getWidget().getTotalRows();
  super.updateFromUIDL(uidl,client);
  getWidget().rendering=true;
  if (getWidget().collapseRequest) {
    if (getWidget().collapsedRowKey != null && getWidget().scrollBody != null) {
      VScrollTableRow row=getWidget().getRenderedRowByKey(getWidget().collapsedRowKey);
      if (row != null) {
        getWidget().setRowFocus(row);
        getWidget().focus();
      }
    }
    int scrollPosition2=widget.getScrollPosition();
    if (scrollPosition != scrollPosition2) {
      widget.setScrollPosition(scrollPosition);
    }
    getWidget().onScroll(null);
  }
  if (getWidget().collapseRequest || (!uidl.hasAttribute("pagelength") && getWidget().getTotalRows() != oldTotalRows)) {
    getWidget().triggerLazyColumnAdjustment(true);
    getWidget().collapseRequest=false;
  }
  if (uidl.hasAttribute("focusedRow")) {
    String key=uidl.getStringAttribute("focusedRow");
    getWidget().setRowFocus(getWidget().getRenderedRowByKey(key));
    getWidget().focusParentResponsePending=false;
  }
 else   if (uidl.hasAttribute("clearFocusPending")) {
    getWidget().focusParentResponsePending=false;
  }
  while (!getWidget().collapseRequest && !getWidget().focusParentResponsePending && !getWidget().pendingNavigationEvents.isEmpty()) {
    PendingNavigationEvent event=getWidget().pendingNavigationEvents.removeFirst();
    getWidget().handleNavigation(event.keycode,event.ctrl,event.shift);
  }
  getWidget().rendering=false;
}
