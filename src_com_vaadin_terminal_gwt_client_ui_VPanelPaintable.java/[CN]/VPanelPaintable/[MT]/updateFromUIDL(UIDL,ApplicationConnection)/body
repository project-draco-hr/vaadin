{
  if (isRealUpdate(uidl)) {
    getWidget().contentNode.setClassName(VPanel.CLASSNAME + "-content");
    getWidget().bottomDecoration.setClassName(VPanel.CLASSNAME + "-deco");
    getWidget().captionNode.setClassName(VPanel.CLASSNAME + "-caption");
    boolean hasCaption=false;
    if (getState().getCaption() != null && !"".equals(getState().getCaption())) {
      getWidget().setCaption(getState().getCaption());
      hasCaption=true;
    }
 else {
      getWidget().setCaption("");
      getWidget().captionNode.setClassName(VPanel.CLASSNAME + "-nocaption");
    }
    final String captionBaseClass=VPanel.CLASSNAME + (hasCaption ? "-caption" : "-nocaption");
    final String contentBaseClass=VPanel.CLASSNAME + "-content";
    final String decoBaseClass=VPanel.CLASSNAME + "-deco";
    String captionClass=captionBaseClass;
    String contentClass=contentBaseClass;
    String decoClass=decoBaseClass;
    if (getState().hasStyles()) {
      final String[] styles=getState().getStyle().split(" ");
      for (int i=0; i < styles.length; i++) {
        captionClass+=" " + captionBaseClass + "-"+ styles[i];
        contentClass+=" " + contentBaseClass + "-"+ styles[i];
        decoClass+=" " + decoBaseClass + "-"+ styles[i];
      }
    }
    getWidget().captionNode.setClassName(captionClass);
    getWidget().contentNode.setClassName(contentClass);
    getWidget().bottomDecoration.setClassName(decoClass);
  }
  super.updateFromUIDL(uidl,client);
  if (!isRealUpdate(uidl)) {
    return;
  }
  clickEventHandler.handleEventHandlerRegistration(client);
  getWidget().client=client;
  getWidget().id=uidl.getId();
  getWidget().setIconUri(uidl,client);
  getWidget().handleError(uidl);
  final UIDL layoutUidl=uidl.getChildUIDL(0);
  final ComponentConnector newLayout=client.getPaintable(layoutUidl);
  if (newLayout != getWidget().layout) {
    if (getWidget().layout != null) {
      client.unregisterPaintable(getWidget().layout);
    }
    getWidget().setWidget(newLayout.getWidget());
    getWidget().layout=newLayout;
  }
  getWidget().layout.updateFromUIDL(layoutUidl,client);
  if (uidl.getChildCount() > 1) {
    final int cnt=uidl.getChildCount();
    for (int i=1; i < cnt; i++) {
      UIDL childUidl=uidl.getChildUIDL(i);
      if (childUidl.getTag().equals("actions")) {
        if (getWidget().shortcutHandler == null) {
          getWidget().shortcutHandler=new ShortcutActionHandler(getId(),client);
        }
        getWidget().shortcutHandler.updateActionMap(childUidl);
      }
    }
  }
  if (uidl.hasVariable("scrollTop") && uidl.getIntVariable("scrollTop") != getWidget().scrollTop) {
    uidlScrollTop=new Integer(uidl.getIntVariable("scrollTop"));
  }
  if (uidl.hasVariable("scrollLeft") && uidl.getIntVariable("scrollLeft") != getWidget().scrollLeft) {
    uidlScrollLeft=new Integer(uidl.getIntVariable("scrollLeft"));
  }
  if (uidl.hasVariable("tabindex")) {
    getWidget().contentNode.setTabIndex(uidl.getIntVariable("tabindex"));
  }
}
