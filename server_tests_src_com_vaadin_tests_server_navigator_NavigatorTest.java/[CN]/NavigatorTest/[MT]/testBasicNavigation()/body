{
  IMocksControl control=EasyMock.createControl();
  NavigationStateManager manager=control.createMock(NavigationStateManager.class);
  ViewDisplay display=control.createMock(ViewDisplay.class);
  ViewProvider provider=control.createMock(ViewProvider.class);
  View view1=control.createMock(View.class);
  View view2=control.createMock(View.class);
  manager.setNavigator(EasyMock.anyObject(Navigator.class));
  EasyMock.expect(provider.getViewName("test1")).andReturn("test1");
  EasyMock.expect(provider.getView("test1")).andReturn(view1);
  EasyMock.expect(manager.getState()).andReturn("");
  view1.enter(eventParametersEqual(""));
  display.showView(view1);
  manager.setState("test1");
  EasyMock.expect(provider.getViewName("test2/")).andReturn("test2");
  EasyMock.expect(provider.getView("test2")).andReturn(view2);
  EasyMock.expect(manager.getState()).andReturn("view1");
  view2.enter(eventParametersEqual(""));
  display.showView(view2);
  manager.setState("test2");
  EasyMock.expect(provider.getViewName("test1/params")).andReturn("test1");
  EasyMock.expect(provider.getView("test1")).andReturn(view1);
  EasyMock.expect(manager.getState()).andReturn("view2");
  view1.enter(eventParametersEqual("params"));
  display.showView(view1);
  manager.setState("test1/params");
  control.replay();
  Navigator navigator=createNavigator(manager,display);
  navigator.addProvider(provider);
  navigator.navigateTo("test1");
  navigator.navigateTo("test2/");
  navigator.navigateTo("test1/params");
}
