{
  this.id=uidl.getId();
  this.client=client;
  if (client.updateComponent(this,uidl,false))   return;
  if (uidl.hasAttribute("invisible")) {
    this.hide();
    return;
  }
 else {
    if (uidl.hasVariable("width")) {
      String width=uidl.getStringVariable("width");
      setWidth(width);
    }
    if (uidl.hasVariable("height")) {
      String height=uidl.getStringVariable("height");
      setHeight(height);
    }
    contentPanel.setScrollPosition(uidl.getIntVariable("scrolltop"));
    contentPanel.setHorizontalScrollPosition(uidl.getIntVariable("scrollleft"));
    try {
      int positionx=uidl.getIntVariable("positionx");
      int positiony=uidl.getIntVariable("positiony");
      if (positionx >= 0 && positiony >= 0) {
        setPopupPosition(positionx,positiony);
      }
    }
 catch (    IllegalArgumentException e) {
    }
    if (!isAttached()) {
      show();
    }
  }
  UIDL childUidl=uidl.getChildUIDL(0);
  Paintable lo=(Paintable)client.getWidget(childUidl);
  if (layout != null) {
    if (layout != lo) {
      client.unregisterPaintable(layout);
      contentPanel.remove((Widget)layout);
      contentPanel.setWidget((Widget)lo);
      layout=lo;
    }
  }
 else {
    contentPanel.setWidget((Widget)lo);
  }
  if (uidl.hasAttribute("caption")) {
    setCaption(uidl.getStringAttribute("caption"));
  }
  lo.updateFromUIDL(childUidl,client);
  if (uidl.getChidlCount() > 1) {
    childUidl=uidl.getChildUIDL(1);
    if (childUidl.getTag().equals("actions")) {
      if (shortcutHandler == null)       shortcutHandler=new ShortcutActionHandler(id,client);
      shortcutHandler.updateActionMap(childUidl);
    }
  }
}
