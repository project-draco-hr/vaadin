{
  getWidgetForPaintable().rendering=true;
  if (uidl.hasAttribute(VScrollTable.ATTRIBUTE_PAGEBUFFER_FIRST)) {
    getWidgetForPaintable().serverCacheFirst=uidl.getIntAttribute(VScrollTable.ATTRIBUTE_PAGEBUFFER_FIRST);
    getWidgetForPaintable().serverCacheLast=uidl.getIntAttribute(VScrollTable.ATTRIBUTE_PAGEBUFFER_LAST);
  }
 else {
    getWidgetForPaintable().serverCacheFirst=-1;
    getWidgetForPaintable().serverCacheLast=-1;
  }
  if (uidl.hasAttribute("colfooters")) {
    getWidgetForPaintable().showColFooters=uidl.getBooleanAttribute("colfooters");
  }
  getWidgetForPaintable().tFoot.setVisible(getWidgetForPaintable().showColFooters);
  super.updateFromUIDL(uidl,client);
  if (!isRealUpdate(uidl)) {
    getWidgetForPaintable().rendering=false;
    return;
  }
  getWidgetForPaintable().enabled=!uidl.hasAttribute(ATTRIBUTE_DISABLED);
  if (BrowserInfo.get().isIE8() && !getWidgetForPaintable().enabled) {
    getWidgetForPaintable().scrollBodyPanel.getElement().getStyle().setPosition(Position.STATIC);
  }
 else   if (BrowserInfo.get().isIE8()) {
    getWidgetForPaintable().scrollBodyPanel.getElement().getStyle().setPosition(Position.RELATIVE);
  }
  getWidgetForPaintable().client=client;
  getWidgetForPaintable().paintableId=uidl.getStringAttribute("id");
  getWidgetForPaintable().immediate=uidl.getBooleanAttribute(ATTRIBUTE_IMMEDIATE);
  int previousTotalRows=getWidgetForPaintable().totalRows;
  getWidgetForPaintable().updateTotalRows(uidl);
  boolean totalRowsChanged=(getWidgetForPaintable().totalRows != previousTotalRows);
  getWidgetForPaintable().updateDragMode(uidl);
  getWidgetForPaintable().updateSelectionProperties(uidl);
  if (uidl.hasAttribute("alb")) {
    getWidgetForPaintable().bodyActionKeys=uidl.getStringArrayAttribute("alb");
  }
 else {
    getWidgetForPaintable().bodyActionKeys=null;
  }
  getWidgetForPaintable().setCacheRateFromUIDL(uidl);
  getWidgetForPaintable().recalcWidths=uidl.hasAttribute("recalcWidths");
  if (getWidgetForPaintable().recalcWidths) {
    getWidgetForPaintable().tHead.clear();
    getWidgetForPaintable().tFoot.clear();
  }
  getWidgetForPaintable().updatePageLength(uidl);
  getWidgetForPaintable().updateFirstVisibleAndScrollIfNeeded(uidl);
  getWidgetForPaintable().showRowHeaders=uidl.getBooleanAttribute("rowheaders");
  getWidgetForPaintable().showColHeaders=uidl.getBooleanAttribute("colheaders");
  getWidgetForPaintable().updateSortingProperties(uidl);
  boolean keyboardSelectionOverRowFetchInProgress=getWidgetForPaintable().selectSelectedRows(uidl);
  getWidgetForPaintable().updateActionMap(uidl);
  getWidgetForPaintable().updateColumnProperties(uidl);
  UIDL ac=uidl.getChildByTagName("-ac");
  if (ac == null) {
    if (getWidgetForPaintable().dropHandler != null) {
      getWidgetForPaintable().dropHandler=null;
    }
  }
 else {
    if (getWidgetForPaintable().dropHandler == null) {
      getWidgetForPaintable().dropHandler=getWidgetForPaintable().new VScrollTableDropHandler();
    }
    getWidgetForPaintable().dropHandler.updateAcceptRules(ac);
  }
  UIDL partialRowAdditions=uidl.getChildByTagName("prows");
  UIDL partialRowUpdates=uidl.getChildByTagName("urows");
  if (partialRowUpdates != null || partialRowAdditions != null) {
    getWidgetForPaintable().rowRequestHandler.cancel();
    getWidgetForPaintable().updateRowsInBody(partialRowUpdates);
    getWidgetForPaintable().addAndRemoveRows(partialRowAdditions);
  }
 else {
    UIDL rowData=uidl.getChildByTagName("rows");
    if (rowData != null) {
      getWidgetForPaintable().rowRequestHandler.cancel();
      if (!getWidgetForPaintable().recalcWidths && getWidgetForPaintable().initializedAndAttached) {
        getWidgetForPaintable().updateBody(rowData,uidl.getIntAttribute("firstrow"),uidl.getIntAttribute("rows"));
        if (getWidgetForPaintable().headerChangedDuringUpdate) {
          getWidgetForPaintable().triggerLazyColumnAdjustment(true);
        }
 else         if (!getWidgetForPaintable().isScrollPositionVisible() || totalRowsChanged || getWidgetForPaintable().lastRenderedHeight != getWidgetForPaintable().scrollBody.getOffsetHeight()) {
          Scheduler.get().scheduleDeferred(new Command(){
            public void execute(){
              Util.runWebkitOverflowAutoFix(getWidgetForPaintable().scrollBodyPanel.getElement());
            }
          }
);
        }
      }
 else {
        getWidgetForPaintable().initializeRows(uidl,rowData);
      }
    }
  }
  if (!getWidgetForPaintable().isSelectable()) {
    getWidgetForPaintable().scrollBody.addStyleName(VScrollTable.CLASSNAME + "-body-noselection");
  }
 else {
    getWidgetForPaintable().scrollBody.removeStyleName(VScrollTable.CLASSNAME + "-body-noselection");
  }
  getWidgetForPaintable().hideScrollPositionAnnotation();
  getWidgetForPaintable().purgeUnregistryBag();
  if (!keyboardSelectionOverRowFetchInProgress) {
    getWidgetForPaintable().selectionChanged=false;
  }
  if (getWidgetForPaintable().selectFirstItemInNextRender || getWidgetForPaintable().focusFirstItemInNextRender) {
    getWidgetForPaintable().selectFirstRenderedRowInViewPort(getWidgetForPaintable().focusFirstItemInNextRender);
    getWidgetForPaintable().selectFirstItemInNextRender=getWidgetForPaintable().focusFirstItemInNextRender=false;
  }
  if (getWidgetForPaintable().selectLastItemInNextRender || getWidgetForPaintable().focusLastItemInNextRender) {
    getWidgetForPaintable().selectLastRenderedRowInViewPort(getWidgetForPaintable().focusLastItemInNextRender);
    getWidgetForPaintable().selectLastItemInNextRender=getWidgetForPaintable().focusLastItemInNextRender=false;
  }
  getWidgetForPaintable().multiselectPending=false;
  if (getWidgetForPaintable().focusedRow != null) {
    if (!getWidgetForPaintable().focusedRow.isAttached() && !getWidgetForPaintable().rowRequestHandler.isRunning()) {
      getWidgetForPaintable().focusRowFromBody();
    }
  }
  getWidgetForPaintable().tabIndex=uidl.hasAttribute("tabindex") ? uidl.getIntAttribute("tabindex") : 0;
  getWidgetForPaintable().setProperTabIndex();
  getWidgetForPaintable().resizeSortedColumnForSortIndicator();
  getWidgetForPaintable().lastRenderedHeight=getWidgetForPaintable().scrollBody.getOffsetHeight();
  getWidgetForPaintable().rendering=false;
  getWidgetForPaintable().headerChangedDuringUpdate=false;
}
