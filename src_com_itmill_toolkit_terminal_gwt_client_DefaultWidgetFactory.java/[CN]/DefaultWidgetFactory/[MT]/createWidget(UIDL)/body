{
  String className=resolveWidgetTypeName(uidl);
  if ("com.itmill.toolkit.terminal.gwt.client.ui.ICheckBox".equals(className)) {
    return new ICheckBox();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IButton".equals(className)) {
    return new IButton();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IView".equals(className)) {
    return new IView();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IWindow".equals(className)) {
    return new IWindow();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IOrderedLayoutVertical".equals(className)) {
    return new IOrderedLayoutVertical();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IOrderedLayoutHorizontal".equals(className)) {
    return new IOrderedLayoutHorizontal();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ILabel".equals(className)) {
    return new ILabel();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ILink".equals(className)) {
    return new ILink();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IGridLayout".equals(className)) {
    return new IGridLayout();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ITree".equals(className)) {
    return new ITree();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IOptionGroup".equals(className)) {
    return new IOptionGroup();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ITwinColSelect".equals(className)) {
    return new ITwinColSelect();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ISelect".equals(className)) {
    return new ISelect();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IPanel".equals(className)) {
    return new IPanel();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IComponent".equals(className)) {
    return new IComponent();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ITabsheet".equals(className)) {
    return new ITabsheet();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IEmbedded".equals(className)) {
    return new IEmbedded();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ICustomLayout".equals(className)) {
    return new ICustomLayout();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ITextArea".equals(className)) {
    return new ITextArea();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IPasswordField".equals(className)) {
    return new IPasswordField();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ITextField".equals(className)) {
    return new ITextField();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ITablePaging".equals(className)) {
    return new ITablePaging();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IScrollTable".equals(className)) {
    return new IScrollTable();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IDateFieldCalendar".equals(className)) {
    return new IDateFieldCalendar();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ICalendar".equals(className)) {
    return new ICalendar();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ITextualDate".equals(className)) {
    return new ITextualDate();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IPopupCalendar".equals(className)) {
    return new IPopupCalendar();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ISlider".equals(className)) {
    return new ISlider();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IForm".equals(className)) {
    return new IForm();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.IUpload".equals(className)) {
    return new IUpload();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ISplitPanelHorizontal".equals(className)) {
    return new ISplitPanelHorizontal();
  }
 else   if ("com.itmill.toolkit.terminal.gwt.client.ui.ISplitPanelVertical".equals(className)) {
    return new ISplitPanelVertical();
  }
  return new IUnknownComponent();
}
