{
  final String tag=uidl.getTag();
  Class<? extends Paintable> widgetClass=conf.getWidgetClassByEncodedTag(tag);
  if (widgetClass == VButton.class && uidl.hasAttribute("type")) {
    return VCheckBox.class;
  }
 else   if (widgetClass == VView.class && uidl.hasAttribute("sub")) {
    return VWindow.class;
  }
 else   if (widgetClass == VFilterSelect.class) {
    if (uidl.hasAttribute("type")) {
      final String type=uidl.getStringAttribute("type").intern();
      if ("twincol".equals(type)) {
        return VTwinColSelect.class;
      }
 else       if ("optiongroup".equals(type)) {
        return VOptionGroup.class;
      }
 else       if ("native".equals(type)) {
        return VNativeSelect.class;
      }
 else       if ("list".equals(type)) {
        return VListSelect.class;
      }
 else       if ("legacy-multi".equals(type)) {
        return VListSelect.class;
      }
 else       if (uidl.hasAttribute("selectmode") && uidl.getStringAttribute("selectmode").equals("multi")) {
        return VListSelect.class;
      }
    }
  }
 else   if (widgetClass == VTextField.class) {
    if (uidl.hasAttribute("multiline")) {
      return VTextArea.class;
    }
 else     if (uidl.hasAttribute("secret")) {
      return VPasswordField.class;
    }
  }
 else   if (widgetClass == VPopupCalendar.class) {
    if (uidl.hasAttribute("type") && uidl.getStringAttribute("type").equals("inline")) {
      return VDateFieldCalendar.class;
    }
  }
 else   if (widgetClass == VSplitPanelHorizontal.class && uidl.hasAttribute("vertical")) {
    return VSplitPanelVertical.class;
  }
  return widgetClass;
}
