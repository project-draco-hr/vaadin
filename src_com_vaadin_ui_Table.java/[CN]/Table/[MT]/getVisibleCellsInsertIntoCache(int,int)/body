{
  Object[][] cells=getVisibleCellsNoCache(firstIndex,rows,false);
  int currentlyCachedRowCount=pageBuffer[CELL_ITEMID].length;
  int lastCachedRow=currentlyCachedRowCount - rows;
  int cacheIx=firstIndex - pageBufferFirstIndex;
  unregisterComponentsAndPropertiesInRows(lastCachedRow + 1,currentlyCachedRowCount - lastCachedRow);
  int newCachedRowCount=currentlyCachedRowCount;
  if (currentlyCachedRowCount < pageLength) {
    newCachedRowCount=currentlyCachedRowCount + rows;
    if (newCachedRowCount > pageLength) {
      newCachedRowCount=pageLength;
    }
  }
  Object[][] newPageBuffer=new Object[pageBuffer.length][newCachedRowCount];
  for (int ix=0; ix < newCachedRowCount; ix++) {
    for (int i=0; i < pageBuffer.length; i++) {
      if (ix >= cacheIx && ix < cacheIx + rows) {
        newPageBuffer[i][ix]=cells[i][ix - cacheIx];
      }
 else       if (ix >= cacheIx + rows) {
        newPageBuffer[i][ix]=pageBuffer[i][ix - rows];
      }
 else {
        newPageBuffer[i][ix]=pageBuffer[i][ix];
      }
    }
  }
  pageBuffer=newPageBuffer;
  return cells;
}
