{
  int totalCachedRows=pageBuffer[CELL_ITEMID].length;
  int totalRows=size();
  int cacheIx=firstIndex - pageBufferFirstIndex;
  unregisterComponentsAndPropertiesInRows(firstIndex,rows);
  int newCachedRowCount=totalRows < totalCachedRows ? totalRows : totalCachedRows;
  int firstAppendedRow=newCachedRowCount > rows ? newCachedRowCount - rows : firstIndex;
  int rowsToAdd=Math.min(rows,totalCachedRows - firstAppendedRow);
  rowsToAdd=Math.min(rowsToAdd,totalRows - (firstAppendedRow + pageBufferFirstIndex));
  if (rowsToAdd <= 0) {
    return;
  }
  Object[][] cells=getVisibleCellsNoCache(firstAppendedRow,rowsToAdd,false);
  Object[][] newPageBuffer=new Object[pageBuffer.length][newCachedRowCount];
  for (int ix=0; ix < newCachedRowCount; ix++) {
    for (int i=0; i < pageBuffer.length; i++) {
      if (ix >= firstAppendedRow) {
        newPageBuffer[i][ix]=cells[i][ix - firstAppendedRow];
      }
 else       if (ix >= cacheIx && ix + rows < totalCachedRows) {
        newPageBuffer[i][ix]=pageBuffer[i][ix + rows];
      }
 else {
        newPageBuffer[i][ix]=pageBuffer[i][ix];
      }
    }
  }
  pageBuffer=newPageBuffer;
}
