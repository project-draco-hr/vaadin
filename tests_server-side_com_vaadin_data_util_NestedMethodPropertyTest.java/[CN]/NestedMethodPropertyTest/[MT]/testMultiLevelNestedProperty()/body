{
  NestedMethodProperty<String> managerNameProperty=new NestedMethodProperty<String>(vaadin,"manager.name");
  NestedMethodProperty<Address> addressProperty=new NestedMethodProperty<Address>(vaadin,"manager.address");
  NestedMethodProperty<String> streetProperty=new NestedMethodProperty<String>(vaadin,"manager.address.street");
  NestedMethodProperty<Integer> postalCodePrimitiveProperty=new NestedMethodProperty<Integer>(vaadin,"manager.address.postalCodePrimitive");
  NestedMethodProperty<Integer> postalCodeObjectProperty=new NestedMethodProperty<Integer>(vaadin,"manager.address.postalCodeObject");
  NestedMethodProperty<Boolean> booleanProperty=new NestedMethodProperty<Boolean>(vaadin,"manager.address.boolean");
  Assert.assertEquals(String.class,managerNameProperty.getType());
  Assert.assertEquals("Joonas",managerNameProperty.getValue());
  Assert.assertEquals(Address.class,addressProperty.getType());
  Assert.assertEquals(oldMill,addressProperty.getValue());
  Assert.assertEquals(String.class,streetProperty.getType());
  Assert.assertEquals("Ruukinkatu 2-4",streetProperty.getValue());
  Assert.assertEquals(Integer.class,postalCodePrimitiveProperty.getType());
  Assert.assertEquals(Integer.valueOf(20540),postalCodePrimitiveProperty.getValue());
  Assert.assertEquals(Integer.class,postalCodeObjectProperty.getType());
  Assert.assertEquals(Integer.valueOf(20540),postalCodeObjectProperty.getValue());
  Assert.assertEquals(Boolean.class,booleanProperty.getType());
  Assert.assertEquals(Boolean.TRUE,booleanProperty.getValue());
}
