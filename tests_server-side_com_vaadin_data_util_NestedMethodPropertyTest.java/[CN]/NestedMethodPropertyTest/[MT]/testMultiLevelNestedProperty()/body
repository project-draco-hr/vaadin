{
  NestedMethodProperty managerNameProperty=new NestedMethodProperty(vaadin,"manager.name");
  NestedMethodProperty addressProperty=new NestedMethodProperty(vaadin,"manager.address");
  NestedMethodProperty streetProperty=new NestedMethodProperty(vaadin,"manager.address.street");
  NestedMethodProperty postalCodePrimitiveProperty=new NestedMethodProperty(vaadin,"manager.address.postalCodePrimitive");
  NestedMethodProperty postalCodeObjectProperty=new NestedMethodProperty(vaadin,"manager.address.postalCodeObject");
  NestedMethodProperty booleanProperty=new NestedMethodProperty(vaadin,"manager.address.boolean");
  Assert.assertEquals(String.class,managerNameProperty.getType());
  Assert.assertEquals("Joonas",managerNameProperty.getValue());
  Assert.assertEquals(Address.class,addressProperty.getType());
  Assert.assertEquals(oldMill,addressProperty.getValue());
  Assert.assertEquals(String.class,streetProperty.getType());
  Assert.assertEquals("Ruukinkatu 2-4",streetProperty.getValue());
  Assert.assertEquals(Integer.class,postalCodePrimitiveProperty.getType());
  Assert.assertEquals(20540,postalCodePrimitiveProperty.getValue());
  Assert.assertEquals(Integer.class,postalCodeObjectProperty.getType());
  Assert.assertEquals(20540,postalCodeObjectProperty.getValue());
  Assert.assertEquals(Boolean.class,booleanProperty.getType());
  Assert.assertEquals(true,booleanProperty.getValue());
}
