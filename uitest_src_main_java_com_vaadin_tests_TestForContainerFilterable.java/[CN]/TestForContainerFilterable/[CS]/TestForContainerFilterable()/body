{
  setCompositionRoot(lo);
  ic.addContainerProperty("foo",String.class,"");
  ic.addContainerProperty("bar",String.class,"");
  for (int i=0; i < 1000; i++) {
    final Object id=ic.addItem();
    ic.getContainerProperty(id,"foo").setValue(randomWord());
    ic.getContainerProperty(id,"bar").setValue(randomWord());
  }
  final HorizontalLayout filterLayout=new HorizontalLayout();
  final Panel filterPanel=new Panel("Filter",filterLayout);
  filterPanel.setWidth(100,Panel.UNITS_PERCENTAGE);
  lo.addComponent(filterPanel);
  filterLayout.addComponent(fooFilter);
  filterLayout.addComponent(barFilter);
  filterLayout.addComponent(filterButton);
  fooFilter.setDescription("Filters foo column in case-sensitive contains manner.");
  barFilter.setDescription("Filters bar column in case-insensitive prefix manner.");
  filterLayout.addComponent(count);
  lo.addComponent(t);
  t.setPageLength(12);
  t.setWidth(100,Table.UNITS_PERCENTAGE);
  t.setContainerDataSource(ic);
  filterButton.addClickListener(new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      ic.removeAllContainerFilters();
      if (fooFilter.getValue().length() > 0) {
        ic.addContainerFilter("foo",fooFilter.getValue(),false,false);
      }
      if (barFilter.getValue().length() > 0) {
        ic.addContainerFilter("bar",barFilter.getValue(),true,true);
      }
      count.setValue("Rows in table: " + ic.size());
    }
  }
);
  lo.addComponent(new Button("Rebind table datasource",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      t.setContainerDataSource(ic);
    }
  }
));
}
