{
  if (dataSource == null) {
    throw new IllegalArgumentException("dataSource can't be null.");
  }
  selectionModel.reset();
  if (this.dataSource != null) {
    this.dataSource.setDataChangeHandler(null);
  }
  this.dataSource=dataSource;
  dataSource.setDataChangeHandler(new DataChangeHandler(){
    @Override public void dataUpdated(    int firstIndex,    int numberOfItems){
      escalator.getBody().refreshRows(firstIndex,numberOfItems);
    }
    @Override public void dataRemoved(    int firstIndex,    int numberOfItems){
      escalator.getBody().removeRows(firstIndex,numberOfItems);
      Range removed=Range.withLength(firstIndex,numberOfItems);
      activeCellHandler.rowsRemoved(removed);
    }
    @Override public void dataAdded(    int firstIndex,    int numberOfItems){
      escalator.getBody().insertRows(firstIndex,numberOfItems);
      Range added=Range.withLength(firstIndex,numberOfItems);
      activeCellHandler.rowsAdded(added);
    }
    @Override public void dataAvailable(    int firstIndex,    int numberOfItems){
      currentDataAvailable=Range.withLength(firstIndex,numberOfItems);
      fireEvent(new DataAvailableEvent(currentDataAvailable));
    }
  }
);
  int previousRowCount=escalator.getBody().getRowCount();
  if (previousRowCount != 0) {
    escalator.getBody().removeRows(0,previousRowCount);
  }
  int size=dataSource.size();
  if (size > 0) {
    escalator.getBody().insertRows(0,size);
  }
}
