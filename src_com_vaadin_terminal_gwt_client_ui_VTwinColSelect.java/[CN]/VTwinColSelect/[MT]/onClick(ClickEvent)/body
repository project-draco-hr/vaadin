{
  super.onClick(event);
  if (event.getSource() == add) {
    final boolean[] sel=getItemsToAdd();
    for (int i=0; i < sel.length; i++) {
      if (sel[i]) {
        final int optionIndex=i - (sel.length - options.getItemCount());
        selectedKeys.add(options.getValue(optionIndex));
        final String text=options.getItemText(optionIndex);
        final String value=options.getValue(optionIndex);
        selections.addItem(text,value);
        selections.setItemSelected(selections.getItemCount() - 1,true);
        options.removeItem(optionIndex);
      }
    }
    client.updateVariable(id,"selected",selectedKeys.toArray(new String[selectedKeys.size()]),isImmediate());
  }
 else   if (event.getSource() == remove) {
    final boolean[] sel=getItemsToRemove();
    for (int i=0; i < sel.length; i++) {
      if (sel[i]) {
        final int selectionIndex=i - (sel.length - selections.getItemCount());
        selectedKeys.remove(selections.getValue(selectionIndex));
        final String text=selections.getItemText(selectionIndex);
        final String value=selections.getValue(selectionIndex);
        options.addItem(text,value);
        options.setItemSelected(options.getItemCount() - 1,true);
        selections.removeItem(selectionIndex);
      }
    }
    client.updateVariable(id,"selected",selectedKeys.toArray(new String[selectedKeys.size()]),isImmediate());
  }
 else   if (event.getSource() == options) {
    final int c=selections.getItemCount();
    for (int i=0; i < c; i++) {
      selections.setItemSelected(i,false);
    }
  }
 else   if (event.getSource() == selections) {
    final int c=options.getItemCount();
    for (int i=0; i < c; i++) {
      options.setItemSelected(i,false);
    }
  }
}
