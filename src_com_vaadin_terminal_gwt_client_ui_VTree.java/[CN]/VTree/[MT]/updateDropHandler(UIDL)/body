{
  if (dropHandler == null) {
    dropHandler=new VAbstractDropHandler(){
      @Override public void dragEnter(      VDragEvent drag){
      }
      @Override protected void dragAccepted(      final VDragEvent drag){
      }
      @Override public void dragOver(      final VDragEvent currentDrag){
        final Object oldIdOver=currentDrag.getDropDetails().get("itemIdOver");
        final VerticalDropLocation oldDetail=(VerticalDropLocation)currentDrag.getDropDetails().get("detail");
        updateTreeRelatedDragData(currentDrag);
        final VerticalDropLocation detail=(VerticalDropLocation)currentDrag.getDropDetails().get("detail");
        boolean nodeHasChanged=(currentMouseOverKey != null && currentMouseOverKey != oldIdOver) || (currentMouseOverKey == null && oldIdOver != null);
        boolean detailHasChanded=(detail != null && detail != oldDetail) || (detail == null && oldDetail != null);
        if (nodeHasChanged || detailHasChanded) {
          final String newKey=currentMouseOverKey;
          TreeNode treeNode=keyToNode.get(oldIdOver);
          if (treeNode != null) {
            treeNode.emphasis(null);
          }
          if (newKey != null) {
            validate(new VAcceptCallback(){
              public void accepted(              VDragEvent event){
                VerticalDropLocation curDetail=(VerticalDropLocation)event.getDropDetails().get("detail");
                if (curDetail == detail && newKey.equals(currentMouseOverKey)) {
                  getNodeByKey(newKey).emphasis(detail);
                }
              }
            }
,currentDrag);
          }
        }
      }
      @Override public void dragLeave(      VDragEvent drag){
        cleanUp();
      }
      private void cleanUp(){
        if (currentMouseOverKey != null) {
          getNodeByKey(currentMouseOverKey).emphasis(null);
          currentMouseOverKey=null;
        }
      }
      @Override public boolean drop(      VDragEvent drag){
        cleanUp();
        return super.drop(drag);
      }
      @Override public VPaintableWidget getPaintable(){
        return VPaintableMap.get(client).getPaintable(VTree.this);
      }
      public ApplicationConnection getApplicationConnection(){
        return client;
      }
    }
;
  }
  dropHandler.updateAcceptRules(childUidl);
}
