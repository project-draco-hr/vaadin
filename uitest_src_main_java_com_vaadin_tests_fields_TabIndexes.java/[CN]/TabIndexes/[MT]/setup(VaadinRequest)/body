{
  HorizontalLayout buttonLayout=new HorizontalLayout();
  addComponent(buttonLayout);
  Button clearTabIndexes=new Button("Set all tab indexes to 0");
  clearTabIndexes.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      log("Setting tab indexes to 0");
      for (      Focusable f : fields) {
        f.setTabIndex(0);
      }
      updateCaptions();
    }
  }
);
  Button setTabIndexesToOne=new Button("Set all tab indexes to 1");
  setTabIndexesToOne.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      log("Setting tab indexes to 1");
      for (      Focusable f : fields) {
        f.setTabIndex(1);
      }
      updateCaptions();
    }
  }
);
  Button setTabIndexesInOrder=new Button("Set tab indexes to 1..N");
  setTabIndexesInOrder.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      int tabIndex=1;
      log("Setting tab indexes to 1..N");
      for (      Focusable f : fields) {
        f.setTabIndex(tabIndex++);
      }
      updateCaptions();
    }
  }
);
  Button setTabIndexesInReverseOrder=new Button("Set tab indexes to N..1");
  setTabIndexesInReverseOrder.addClickListener(new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      int tabIndex=fields.size();
      log("Setting tab indexes to N..1");
      for (      Focusable f : fields) {
        f.setTabIndex(tabIndex--);
      }
      updateCaptions();
    }
  }
);
  fields=new ArrayList<Focusable>();
  Table t=new Table();
  t.setSelectable(true);
  t.addContainerProperty("foo",String.class,"bar");
  t.addItem();
  fields.add(t);
  fields.add(new ComboBox());
  fields.add(new NativeSelect());
  fields.add(new ListSelect());
  fields.add(new LegacyTextField());
  fields.add(new PopupDateField());
  fields.add(new InlineDateField());
  OptionGroup og=new OptionGroup();
  og.addItem("Item 1");
  og.addItem("Item 2");
  fields.add(og);
  TreeTable tt=new TreeTable();
  tt.setSelectable(true);
  tt.addContainerProperty("foo",String.class,"bar");
  tt.addItem();
  fields.add(tt);
  Tree tree=new Tree();
  tree.addItem("Item 1");
  fields.add(tree);
  fields.add(new TwinColSelect());
  fields.add(new LegacyPasswordField());
  fields.add(new LegacyTextField());
  fields.add(new TextArea());
  fields.add(new RichTextArea());
  fields.add(new CheckBox());
  fields.add(new Slider());
  clearTabIndexes.click();
  buttonLayout.addComponents(clearTabIndexes,setTabIndexesToOne,setTabIndexesInOrder,setTabIndexesInReverseOrder);
  int fieldId=1;
  GridLayout gl=new GridLayout(4,4);
  for (  Component f : fields) {
    f.setId("field-" + fieldId++);
    gl.addComponent(f);
  }
  addComponent(gl);
}
