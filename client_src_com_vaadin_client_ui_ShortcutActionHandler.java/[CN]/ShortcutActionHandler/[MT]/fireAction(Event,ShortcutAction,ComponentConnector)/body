{
  final Element et=DOM.eventGetTarget(event);
  if (target == null) {
    target=Util.findPaintable(client,et);
  }
  final ComponentConnector finalTarget=target;
  event.preventDefault();
  if (finalTarget instanceof BeforeShortcutActionListener) {
    ((BeforeShortcutActionListener)finalTarget).onBeforeShortcutAction(event);
  }
 else {
    shakeTarget(et);
    Scheduler.get().scheduleDeferred(new Command(){
      @Override public void execute(){
        shakeTarget(et);
      }
    }
);
  }
  Scheduler.get().scheduleDeferred(new Command(){
    @Override public void execute(){
      Connector shortcutTarget=ConnectorMap.get(client).getConnector(a.getTargetCID());
      boolean handledClientSide=false;
      if (shortcutTarget instanceof ShortcutActionTarget) {
        handledClientSide=((ShortcutActionTarget)shortcutTarget).handleAction(a);
      }
      if (!handledClientSide) {
        if (finalTarget != null) {
          client.updateVariable(paintableId,ShortCutConstants.ACTION_TARGET_VARIABLE,finalTarget,false);
        }
        client.updateVariable(paintableId,ShortCutConstants.ACTION_TARGET_ACTION_VARIABLE,a.getKey(),true);
      }
    }
  }
);
}
