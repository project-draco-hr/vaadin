{
  try {
    Class<?> class1=getClass();
    while (class1 != null) {
      try {
        Method m=class1.getDeclaredMethod("getState",(Class[])null);
        Class<?> type=m.getReturnType();
        if (!m.isSynthetic()) {
          return type.asSubclass(SharedState.class);
        }
      }
 catch (      NoSuchMethodException nsme) {
      }
      class1=class1.getSuperclass();
    }
    throw new NoSuchMethodException(getClass().getCanonicalName() + ".getState()");
  }
 catch (  Exception e) {
    throw new RuntimeException("Error finding state type for " + getClass().getName(),e);
  }
}
