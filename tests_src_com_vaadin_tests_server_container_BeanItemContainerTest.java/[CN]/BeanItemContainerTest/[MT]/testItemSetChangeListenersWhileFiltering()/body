{
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.addBean(new ClassName("com.example.Test",1111));
    }
  }
.listenerTest(2,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.addItem(new ClassName("com.example.Test",1111));
    }
  }
.listenerTest(2,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.addItem(new ClassName("com.example.Test",1111));
      container.addItem(new ClassName("com.example.Other",2222));
    }
  }
.listenerTest(2,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.addItem(new ClassName("com.example.Test",1111));
      container.addItem(new ClassName("com.example.Test2",1112));
    }
  }
.listenerTest(3,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      ClassName cn=new ClassName("com.example.Test",1111);
      container.addItem(cn);
      container.addItem(cn);
    }
  }
.listenerTest(2,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.addItemAfter(null,new ClassName("com.example.Test",1111));
      Assert.assertEquals("com.example.Test",container.getContainerProperty(container.firstItemId(),FULLY_QUALIFIED_NAME).getValue());
    }
  }
.listenerTest(2,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.addItemAfter(container.firstItemId(),new ClassName("com.example.Test",1111));
      Assert.assertEquals("com.example.Test",container.getContainerProperty(container.getIdByIndex(1),FULLY_QUALIFIED_NAME).getValue());
    }
  }
.listenerTest(2,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.addItemAfter(container.lastItemId(),new ClassName("com.example.Test",1111));
      Assert.assertEquals("com.example.Test",container.getContainerProperty(container.lastItemId(),FULLY_QUALIFIED_NAME).getValue());
    }
  }
.listenerTest(2,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.addItemAt(0,new ClassName("com.example.Test",1111));
      Assert.assertEquals("com.example.Test",container.getContainerProperty(container.firstItemId(),FULLY_QUALIFIED_NAME).getValue());
    }
  }
.listenerTest(2,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.addItemAt(1,new ClassName("com.example.Test",1111));
      Assert.assertEquals("com.example.Test",container.getContainerProperty(container.getIdByIndex(1),FULLY_QUALIFIED_NAME).getValue());
    }
  }
.listenerTest(2,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.addItemAt(container.size(),new ClassName("com.example.Test",1111));
      Assert.assertEquals("com.example.Test",container.getContainerProperty(container.lastItemId(),FULLY_QUALIFIED_NAME).getValue());
    }
  }
.listenerTest(2,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.addBean(new ClassName("com.example.Test",1111));
    }
  }
.listenerTest(2,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.removeItem(nameToBean.get(sampleData[0]));
    }
  }
.listenerTest(2,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.removeItem(new ClassName("com.example.Test",1111));
    }
  }
.listenerTest(1,true);
  new ItemSetChangeListenerTester(){
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      container.removeAllItems();
    }
  }
.listenerTest(2,true);
  new ItemSetChangeListenerTester(){
    private int propertyIndex=0;
    @Override protected void performModification(    BeanItemContainer<ClassName> container){
      container.addContainerFilter(FULLY_QUALIFIED_NAME,"Test",true,false);
      Collection<String> containerPropertyIds=container.getContainerPropertyIds();
      container.addContainerFilter(new ArrayList<String>(containerPropertyIds).get(propertyIndex++),"a",true,false);
    }
  }
.listenerTest(2,true);
}
