{
  if (reservedFrom.after(reservedTo)) {
    Date tmp=reservedTo;
    reservedTo=reservedFrom;
    reservedFrom=tmp;
  }
  String checkQ="SELECT count(*) FROM " + Reservation.TABLE + " WHERE "+ Reservation.PROPERTY_ID_RESOURCE_ID+ "=? AND (("+ Reservation.PROPERTY_ID_RESERVED_FROM+ ">=? AND "+ Reservation.PROPERTY_ID_RESERVED_FROM+ "<=?) OR ("+ Reservation.PROPERTY_ID_RESERVED_TO+ ">=? AND "+ Reservation.PROPERTY_ID_RESERVED_TO+ "<=?) OR ("+ Reservation.PROPERTY_ID_RESERVED_FROM+ "<=? AND "+ Reservation.PROPERTY_ID_RESERVED_TO+ ">=?)"+ ")";
  try {
    PreparedStatement p=connection.prepareStatement(checkQ);
    p.setInt(1,resourceId);
    p.setTimestamp(2,new java.sql.Timestamp(reservedFrom.getTime()));
    p.setTimestamp(3,new java.sql.Timestamp(reservedTo.getTime()));
    p.setTimestamp(4,new java.sql.Timestamp(reservedFrom.getTime()));
    p.setTimestamp(5,new java.sql.Timestamp(reservedTo.getTime()));
    p.setTimestamp(6,new java.sql.Timestamp(reservedFrom.getTime()));
    p.setTimestamp(7,new java.sql.Timestamp(reservedTo.getTime()));
    p.execute();
    ResultSet rs=p.getResultSet();
    if (rs.next() && rs.getInt(1) > 0) {
      return false;
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  return true;
}
