{
  AtmosphereHandler a;
  AtmosphereHandlerWrapper w;
  for (  Entry<String,AtmosphereHandlerWrapper> h : atmosphereHandlers.entrySet()) {
    w=h.getValue();
    a=w.atmosphereHandler;
    if (a instanceof AtmosphereServletProcessor) {
      ((AtmosphereServletProcessor)a).init(sc);
    }
  }
  if (atmosphereHandlers.size() == 0 && !SimpleHttpProtocol.class.isAssignableFrom(webSocketProtocol.getClass())) {
    logger.debug("Adding a void AtmosphereHandler mapped to /* to allow WebSocket application only");
    addAtmosphereHandler("/*",new AbstractReflectorAtmosphereHandler(){
      @Override public void onRequest(      AtmosphereResource r) throws IOException {
        logger.debug("No AtmosphereHandler defined.");
      }
      @Override public void destroy(){
      }
    }
);
  }
}
