{
  int inBuff=(numSigBytes > 0 ? ((source[srcOffset] << 24) >>> 8) : 0) | (numSigBytes > 1 ? ((source[srcOffset + 1] << 24) >>> 16) : 0) | (numSigBytes > 2 ? ((source[srcOffset + 2] << 24) >>> 24) : 0);
switch (numSigBytes) {
case 3:
    destination[destOffset]=Base64_ALPHABET[(inBuff >>> 18)];
  destination[destOffset + 1]=Base64_ALPHABET[(inBuff >>> 12) & 0x3f];
destination[destOffset + 2]=Base64_ALPHABET[(inBuff >>> 6) & 0x3f];
destination[destOffset + 3]=Base64_ALPHABET[(inBuff) & 0x3f];
return destination;
case 2:
destination[destOffset]=Base64_ALPHABET[(inBuff >>> 18)];
destination[destOffset + 1]=Base64_ALPHABET[(inBuff >>> 12) & 0x3f];
destination[destOffset + 2]=Base64_ALPHABET[(inBuff >>> 6) & 0x3f];
destination[destOffset + 3]=Base64_EQUALS_SIGN;
return destination;
case 1:
destination[destOffset]=Base64_ALPHABET[(inBuff >>> 18)];
destination[destOffset + 1]=Base64_ALPHABET[(inBuff >>> 12) & 0x3f];
destination[destOffset + 2]=Base64_EQUALS_SIGN;
destination[destOffset + 3]=Base64_EQUALS_SIGN;
return destination;
default :
return destination;
}
}
