{
  int summedWidgetWidth=0;
  int summedWidgetHeight=0;
  int maxWidgetWidth=0;
  int maxWidgetHeight=0;
  for (  ChildComponentContainer childComponentContainer : widgetToComponentContainer.values()) {
    if (childComponentContainer.isComponentRelativeSized(orientation)) {
      continue;
    }
    Size s=childComponentContainer.getWidgetSize();
    int widgetWidth=s.getWidth() + childComponentContainer.getCaptionWidthAfterComponent();
    if (!childComponentContainer.widgetHasSizeSpecified(orientation)) {
      int captionWidth=childComponentContainer.getCaptionWidth();
      if (captionWidth > widgetWidth) {
        widgetWidth=captionWidth;
      }
    }
    int widgetHeight=s.getHeight() + childComponentContainer.getCaptionHeightAboveComponent();
    summedWidgetWidth+=widgetWidth;
    summedWidgetHeight+=widgetHeight;
    maxWidgetHeight=Math.max(maxWidgetHeight,widgetHeight);
    maxWidgetWidth=Math.max(maxWidgetWidth,widgetWidth);
  }
  if (isHorizontal()) {
    summedWidgetWidth+=activeSpacing.hSpacing * (widgetToComponentContainer.size() - 1);
  }
 else {
    summedWidgetHeight+=activeSpacing.vSpacing * (widgetToComponentContainer.size() - 1);
  }
  Size layoutSize=updateLayoutDimensions(summedWidgetWidth,summedWidgetHeight,maxWidgetWidth,maxWidgetHeight);
  int remainingSpace;
  if (isHorizontal()) {
    remainingSpace=layoutSize.getWidth() - summedWidgetWidth;
  }
 else {
    remainingSpace=layoutSize.getHeight() - summedWidgetHeight;
  }
  if (remainingSpace < 0) {
    remainingSpace=0;
  }
  return remainingSpace;
}
