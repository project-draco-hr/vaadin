{
  isRendering=true;
  super.updateFromUIDL(uidl,client);
  if (uidl.getBooleanAttribute("cached")) {
    return;
  }
  handleOrientationUpdate(uidl);
  ArrayList<Widget> uidlWidgets=new ArrayList<Widget>(uidl.getChildCount());
  ArrayList<ChildComponentContainer> relativeSizeComponents=new ArrayList<ChildComponentContainer>();
  ArrayList<UIDL> relativeSizeComponentUIDL=new ArrayList<UIDL>();
  ArrayList<Widget> relativeSizeWidgets=new ArrayList<Widget>();
  int pos=0;
  for (final Iterator<UIDL> it=uidl.getChildIterator(); it.hasNext(); ) {
    final UIDL childUIDL=it.next();
    final Paintable child=client.getPaintable(childUIDL);
    Widget widget=(Widget)child;
    ChildComponentContainer childComponentContainer=getComponentContainer(widget);
    if (childComponentContainer == null) {
      childComponentContainer=createChildContainer(widget);
    }
    addOrMoveChild(childComponentContainer,pos++);
    FloatSize relativeSize=Util.parseRelativeSize(childUIDL);
    childComponentContainer.setRelativeSize(relativeSize);
    if (hasRelativeSize(relativeSize,orientation)) {
      relativeSizeComponents.add(childComponentContainer);
      relativeSizeComponentUIDL.add(childUIDL);
      relativeSizeWidgets.add(widget);
    }
 else {
      childComponentContainer.renderChild(childUIDL,client);
    }
    uidlWidgets.add(widget);
  }
  removeChildrenAfter(pos);
  updateAlignmentsAndExpandRatios(uidl,uidlWidgets);
  for (  ChildComponentContainer childComponentContainer : widgetToComponentContainer.values()) {
    childComponentContainer.updateWidgetSize();
  }
  recalculateLayout();
  for (int i=0; i < relativeSizeComponents.size(); i++) {
    ChildComponentContainer childComponentContainer=relativeSizeComponents.get(i);
    UIDL childUIDL=relativeSizeComponentUIDL.get(i);
    childComponentContainer.renderChild(childUIDL,client);
  }
  for (  ChildComponentContainer childComponentContainer : widgetToComponentContainer.values()) {
    childComponentContainer.updateWidgetSize();
  }
  recalculateComponentSizesAndAlignments();
  client.runDescendentsLayout(this);
  isRendering=false;
}
