{
  if (!fixedCellSize) {
    return;
  }
  int size=DOM.getElementPropertyInt(root,(orientationMode == ORIENTATION_HORIZONTAL) ? "offsetWidth" : "offsetHeight");
  if (orientationMode == ORIENTATION_HORIZONTAL) {
    size-=margins.hasLeft() ? marginLeft : 0;
    size-=margins.hasRight() ? marginRight : 0;
  }
 else {
    size-=margins.hasTop() ? marginTop : 0;
    size-=margins.hasBottom() ? marginBottom : 0;
  }
  if (orientationMode == ORIENTATION_HORIZONTAL) {
    Element table=DOM.getParent(DOM.getParent(wrappedChildContainer));
    DOM.setStyleAttribute(table,"tableLayout","fixed");
    DOM.setStyleAttribute(table,"width","" + size + "px");
  }
  int numChild=childWidgets.size();
  if (hasComponentSpacing) {
    size-=((orientationMode == ORIENTATION_HORIZONTAL) ? hSpacing : vSpacing) * (numChild - 1);
  }
  boolean firstTime=(previouslyAppliedFixedSize < 0);
  if (size == previouslyAppliedFixedSize) {
    return;
  }
  previouslyAppliedFixedSize=size;
  String wh=(orientationMode == ORIENTATION_HORIZONTAL) ? "width" : "height";
  for (Iterator i=childWidgetWrappers.iterator(); i.hasNext(); ) {
    Element we=((WidgetWrapper)i.next()).getElement();
    final int ws=Math.round(((float)size) / (numChild--));
    size-=ws;
    DOM.setStyleAttribute(we,wh,"" + ws + "px");
    if (firstTime) {
      DOM.setStyleAttribute(we,"overflow","hidden");
    }
  }
  fixedCellSize=true;
  childLayoutsHaveChanged=true;
}
