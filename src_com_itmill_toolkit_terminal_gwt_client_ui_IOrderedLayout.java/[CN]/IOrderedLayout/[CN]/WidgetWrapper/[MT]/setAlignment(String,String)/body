{
  if (!horizontalAlignment.equals("left") || !verticalAlignment.equals("top")) {
    if (alignmentTD == null) {
      Element c1=DOM.getFirstChild(getElementWrappingWidgetAndCaption());
      if (c1 != null) {
        DOM.removeChild(getElementWrappingWidgetAndCaption(),c1);
      }
      Element c2=DOM.getFirstChild(getElementWrappingWidgetAndCaption());
      if (c2 != null) {
        DOM.removeChild(getElementWrappingWidgetAndCaption(),c2);
      }
      String alignmentTableStructure="<table cellpadding='0' cellspacing='0' width='100%'";
      if (BrowserInfo.get().isIE()) {
        alignmentTableStructure+=" style='height: expression(this.parentElement.offsetHeight+\"px\")'";
      }
 else {
        alignmentTableStructure+=" height='100%'";
      }
      alignmentTableStructure+="><tbody><tr><td>" + "<table cellpadding='0' cellspacing='0' ><tbody><tr><td align='left'>" + "</td></tr></tbody></table></td></tr></tbody></table>";
      DOM.setInnerHTML(getElementWrappingWidgetAndCaption(),alignmentTableStructure);
      alignmentTD=DOM.getFirstChild(DOM.getFirstChild(DOM.getFirstChild(DOM.getFirstChild(getElementWrappingWidgetAndCaption()))));
      innermostTDinAlignmnetStructure=DOM.getFirstChild(DOM.getFirstChild(DOM.getFirstChild(DOM.getFirstChild(alignmentTD))));
      if (c1 != null) {
        DOM.appendChild(innermostTDinAlignmnetStructure,c1);
        if (c2 != null) {
          DOM.appendChild(innermostTDinAlignmnetStructure,c2);
        }
      }
    }
 else {
      if (BrowserInfo.get().isSafari()) {
        String prevValue=DOM.getElementAttribute(alignmentTD,"align");
        if (!horizontalAlignment.equals(prevValue)) {
          Element parent=DOM.getParent(alignmentTD);
          DOM.removeChild(parent,alignmentTD);
          DOM.appendChild(parent,alignmentTD);
        }
      }
    }
    DOM.setElementAttribute(alignmentTD,"align",horizontalAlignment);
    DOM.setElementAttribute(alignmentTD,"vAlign",verticalAlignment);
  }
 else {
    if (alignmentTD != null) {
      final Element itd=innermostTDinAlignmnetStructure;
      final Element alignmentTable=DOM.getParent(DOM.getParent(DOM.getParent(alignmentTD)));
      final Element target=DOM.getParent(alignmentTable);
      while (DOM.getChildCount(itd) > 0) {
        Element content=DOM.getFirstChild(itd);
        if (content != null) {
          DOM.removeChild(itd,content);
          DOM.appendChild(target,content);
        }
      }
      DOM.removeChild(target,alignmentTable);
      alignmentTD=innermostTDinAlignmnetStructure=null;
    }
  }
}
