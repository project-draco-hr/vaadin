{
  this.client=client;
  this.id=uidl.getId();
  if (client.updateComponent(this,uidl,false)) {
    return;
  }
  disabled=uidl.hasAttribute("disabled");
  if (uidl.hasAttribute("style")) {
    String[] styles=uidl.getStringAttribute("style").split(" ");
    String contentBaseClass="CLASSNAME" + "-content";
    String contentClass=contentBaseClass;
    String decoBaseClass=CLASSNAME + "-deco";
    String decoClass=decoBaseClass;
    for (int i=0; i < styles.length; i++) {
      tb.addStyleDependentName(styles[i]);
      contentClass+=" " + contentBaseClass + "-"+ styles[i];
      decoClass+=" " + decoBaseClass + "-"+ styles[i];
    }
    DOM.setElementProperty(contentNode,"className",contentClass);
    DOM.setElementProperty(deco,"className",decoClass);
  }
 else {
    tb.setStyleName(CLASSNAME + "-tabs");
    DOM.setElementProperty(contentNode,"className",CLASSNAME + "-content");
    DOM.setElementProperty(deco,"className",CLASSNAME + "-deco");
  }
  if (uidl.hasAttribute("height")) {
    setHeight(uidl.getStringAttribute("height"));
  }
 else {
    setHeight("");
  }
  if (uidl.hasAttribute("width")) {
    setWidth(uidl.getStringAttribute("width"));
  }
 else {
    setWidth("");
  }
  UIDL tabs=uidl.getChildUIDL(0);
  boolean keepCurrentTabs=tabKeys.size() == tabs.getNumberOfChildren();
  for (int i=0; keepCurrentTabs && i < tabKeys.size(); i++) {
    keepCurrentTabs=tabKeys.get(i).equals(tabs.getChildUIDL(i).getStringAttribute("key")) && captions.get(i).equals(tabs.getChildUIDL(i).getStringAttribute("caption"));
  }
  if (keepCurrentTabs) {
    int index=0;
    for (Iterator it=tabs.getChildIterator(); it.hasNext(); ) {
      UIDL tab=(UIDL)it.next();
      if (tab.getBooleanAttribute("selected")) {
        activeTabIndex=index;
        renderContent(tab.getChildUIDL(0));
      }
      index++;
    }
  }
 else {
    tabKeys.clear();
    captions.clear();
    clearTabs();
    int index=0;
    for (Iterator it=tabs.getChildIterator(); it.hasNext(); ) {
      UIDL tab=(UIDL)it.next();
      String key=tab.getStringAttribute("key");
      String caption=tab.getStringAttribute("caption");
      if (caption == null) {
        caption="&nbsp;";
      }
      captions.add(caption);
      tabKeys.add(key);
      tb.insertTab("<span>" + caption + "</span>",true,tb.getTabCount());
      tp.add(new ILabel(""));
      if (tab.getBooleanAttribute("selected")) {
        activeTabIndex=index;
        renderContent(tab.getChildUIDL(0));
      }
      index++;
    }
  }
  if (tabKeys.size() > 0)   tb.selectTab(activeTabIndex);
}
