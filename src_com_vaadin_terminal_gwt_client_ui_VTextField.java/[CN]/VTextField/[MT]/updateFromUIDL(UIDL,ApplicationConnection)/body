{
  this.client=client;
  id=uidl.getId();
  if (client.updateComponent(this,uidl,true)) {
    return;
  }
  if (uidl.getBooleanAttribute("readonly")) {
    setReadOnly(true);
  }
 else {
    setReadOnly(false);
  }
  inputPrompt=uidl.getStringAttribute(ATTR_INPUTPROMPT);
  setMaxLength(uidl.hasAttribute("maxLength") ? uidl.getIntAttribute("maxLength") : -1);
  immediate=uidl.getBooleanAttribute("immediate");
  if (uidl.hasAttribute("cols")) {
    setColumns(new Integer(uidl.getStringAttribute("cols")).intValue());
  }
  String text=uidl.getStringVariable("text");
  setPrompting(inputPrompt != null && focusedTextField != this && (text == null || text.equals("")));
  if (prompting) {
    setText(inputPrompt);
    addStyleDependentName(CLASSNAME_PROMPT);
  }
 else {
    setText(text);
    removeStyleDependentName(CLASSNAME_PROMPT);
  }
  valueBeforeEdit=uidl.getStringVariable("text");
}
