{
  final AtomicBoolean threadFailed=new AtomicBoolean(true);
  CurrentInstance.setInheritable(CurrentInstanceTest.class,this);
  Assert.assertEquals(this,CurrentInstance.get(CurrentInstanceTest.class));
  Thread t=new Thread(){
    @Override public void run(){
      try {
        Assert.assertEquals(CurrentInstanceTest.this,CurrentInstance.get(CurrentInstanceTest.class));
        CurrentInstance.set(CurrentInstanceTest.class,null);
        assertCleared();
        threadFailed.set(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
;
  t.start();
  while (t.isAlive()) {
    Thread.sleep(1000);
  }
  Assert.assertFalse("Thread failed",threadFailed.get());
  Assert.assertEquals(this,CurrentInstance.get(CurrentInstanceTest.class));
  CurrentInstance.set(CurrentInstanceTest.class,null);
  assertCleared();
}
