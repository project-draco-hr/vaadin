{
  super.updateFromUIDL(uidl,client);
  if (!isRealUpdate(uidl)) {
    return;
  }
  getWidgetForPaintable().rendering=true;
  getWidgetForPaintable().client=client;
  if (uidl.hasAttribute("partialUpdate")) {
    handleUpdate(uidl);
    getWidgetForPaintable().rendering=false;
    return;
  }
  getWidgetForPaintable().paintableId=uidl.getId();
  getWidgetForPaintable().immediate=uidl.hasAttribute(ATTRIBUTE_IMMEDIATE);
  getWidgetForPaintable().disabled=uidl.getBooleanAttribute(ATTRIBUTE_DISABLED);
  getWidgetForPaintable().readonly=uidl.getBooleanAttribute(ATTRIBUTE_READONLY);
  getWidgetForPaintable().dragMode=uidl.hasAttribute("dragMode") ? uidl.getIntAttribute("dragMode") : 0;
  getWidgetForPaintable().isNullSelectionAllowed=uidl.getBooleanAttribute("nullselect");
  if (uidl.hasAttribute("alb")) {
    getWidgetForPaintable().bodyActionKeys=uidl.getStringArrayAttribute("alb");
  }
  getWidgetForPaintable().body.clear();
  getWidgetForPaintable().clearNodeToKeyMap();
  TreeNode childTree=null;
  UIDL childUidl=null;
  for (final Iterator<?> i=uidl.getChildIterator(); i.hasNext(); ) {
    childUidl=(UIDL)i.next();
    if ("actions".equals(childUidl.getTag())) {
      updateActionMap(childUidl);
      continue;
    }
 else     if ("-ac".equals(childUidl.getTag())) {
      getWidgetForPaintable().updateDropHandler(childUidl);
      continue;
    }
    childTree=getWidgetForPaintable().new TreeNode();
    updateNodeFromUIDL(childTree,childUidl);
    getWidgetForPaintable().body.add(childTree);
    childTree.addStyleDependentName("root");
    childTree.childNodeContainer.addStyleDependentName("root");
  }
  if (childTree != null && childUidl != null) {
    boolean leaf=!childUidl.getTag().equals("node");
    childTree.addStyleDependentName(leaf ? "leaf-last" : "last");
    childTree.childNodeContainer.addStyleDependentName("last");
  }
  final String selectMode=uidl.getStringAttribute("selectmode");
  getWidgetForPaintable().selectable=!"none".equals(selectMode);
  getWidgetForPaintable().isMultiselect="multi".equals(selectMode);
  if (getWidgetForPaintable().isMultiselect) {
    getWidgetForPaintable().multiSelectMode=uidl.getIntAttribute("multiselectmode");
  }
  getWidgetForPaintable().selectedIds=uidl.getStringArrayVariableAsSet("selected");
  if (getWidgetForPaintable().lastSelection != null) {
    getWidgetForPaintable().lastSelection=getWidgetForPaintable().getNodeByKey(getWidgetForPaintable().lastSelection.key);
  }
  if (getWidgetForPaintable().focusedNode != null) {
    getWidgetForPaintable().setFocusedNode(getWidgetForPaintable().getNodeByKey(getWidgetForPaintable().focusedNode.key));
  }
  if (getWidgetForPaintable().lastSelection == null && getWidgetForPaintable().focusedNode == null && !getWidgetForPaintable().selectedIds.isEmpty()) {
    getWidgetForPaintable().setFocusedNode(getWidgetForPaintable().getNodeByKey(getWidgetForPaintable().selectedIds.iterator().next()));
    getWidgetForPaintable().focusedNode.setFocused(false);
  }
  getWidgetForPaintable().rendering=false;
}
