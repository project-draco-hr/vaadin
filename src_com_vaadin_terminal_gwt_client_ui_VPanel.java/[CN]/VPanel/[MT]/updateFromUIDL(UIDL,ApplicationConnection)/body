{
  rendering=true;
  if (!uidl.hasAttribute("cached")) {
    contentNode.setClassName(CLASSNAME + "-content");
    bottomDecoration.setClassName(CLASSNAME + "-deco");
    captionNode.setClassName(CLASSNAME + "-caption");
    boolean hasCaption=false;
    if (uidl.hasAttribute("caption") && !uidl.getStringAttribute("caption").equals("")) {
      setCaption(uidl.getStringAttribute("caption"));
      hasCaption=true;
    }
 else {
      setCaption("");
      captionNode.setClassName(CLASSNAME + "-nocaption");
    }
    if (uidl.hasAttribute("style")) {
      final String[] styles=uidl.getStringAttribute("style").split(" ");
      final String captionBaseClass=CLASSNAME + (hasCaption ? "-caption" : "-nocaption");
      final String contentBaseClass=CLASSNAME + "-content";
      final String decoBaseClass=CLASSNAME + "-deco";
      String captionClass=captionBaseClass;
      String contentClass=contentBaseClass;
      String decoClass=decoBaseClass;
      for (int i=0; i < styles.length; i++) {
        captionClass+=" " + captionBaseClass + "-"+ styles[i];
        contentClass+=" " + contentBaseClass + "-"+ styles[i];
        decoClass+=" " + decoBaseClass + "-"+ styles[i];
      }
      captionNode.setClassName(captionClass);
      contentNode.setClassName(contentClass);
      bottomDecoration.setClassName(decoClass);
    }
  }
  if (client.updateComponent(this,uidl,false)) {
    rendering=false;
    return;
  }
  clickEventHandler.handleEventHandlerRegistration(client);
  this.client=client;
  id=uidl.getId();
  setIconUri(uidl,client);
  handleError(uidl);
  final UIDL layoutUidl=uidl.getChildUIDL(0);
  final Paintable newLayout=client.getPaintable(layoutUidl);
  if (newLayout != layout) {
    if (layout != null) {
      client.unregisterPaintable(layout);
    }
    setWidget((Widget)newLayout);
    layout=newLayout;
  }
  layout.updateFromUIDL(layoutUidl,client);
  runHacks(false);
  if (uidl.getChildCount() > 1) {
    final int cnt=uidl.getChildCount();
    for (int i=1; i < cnt; i++) {
      UIDL childUidl=uidl.getChildUIDL(i);
      if (childUidl.getTag().equals("actions")) {
        if (shortcutHandler == null) {
          shortcutHandler=new ShortcutActionHandler(id,client);
        }
        shortcutHandler.updateActionMap(childUidl);
      }
    }
  }
  if (uidl.hasVariable("scrollTop") && uidl.getIntVariable("scrollTop") != scrollTop) {
    scrollTop=uidl.getIntVariable("scrollTop");
    DOM.setElementPropertyInt(contentNode,"scrollTop",scrollTop);
  }
  if (uidl.hasVariable("scrollLeft") && uidl.getIntVariable("scrollLeft") != scrollLeft) {
    scrollLeft=uidl.getIntVariable("scrollLeft");
    DOM.setElementPropertyInt(contentNode,"scrollLeft",scrollLeft);
  }
  rendering=false;
}
