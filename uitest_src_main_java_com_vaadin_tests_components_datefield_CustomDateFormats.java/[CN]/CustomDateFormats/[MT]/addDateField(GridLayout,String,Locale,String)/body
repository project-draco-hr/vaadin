{
  Calendar cal=Calendar.getInstance();
  cal.set(2010,1,1);
  Label serversideValueLabel=new Label();
  DateField df=new DateField();
  df.setResolution(DateField.RESOLUTION_DAY);
  df.setLocale(locale);
  df.setWidth("300px");
  df.setDateFormat(pattern);
  df.setImmediate(true);
  String debugId=pattern.replace('/','X');
  debugId=debugId.replaceAll("[^-a-zA-Z .'_]","X");
  while (usedDebugIds.contains(debugId)) {
    debugId=debugId + "-";
  }
  df.setId(debugId);
  usedDebugIds.add(debugId);
  df.setData(new Data(serversideValueLabel,pattern));
  df.setValue(cal.getTime());
  df.addListener(new Property.ValueChangeListener(){
    @Override public void valueChange(    ValueChangeEvent event){
      updateServerSideLabel((DateField)event.getProperty());
    }
  }
);
  Label patternLabel=new Label(pattern);
  patternLabel.setWidth(null);
  SimpleDateFormat expDateFormat=new SimpleDateFormat(expectedDateFormat,locale);
  Label expectedLabel=new Label(expDateFormat.format(cal.getTime()));
  if (!pattern.equals(expectedDateFormat)) {
    expectedLabel.setValue(expectedLabel.getValue() + " (differs from JDK)");
  }
  expectedLabel.setWidth(null);
  gridLayout.addComponent(patternLabel);
  gridLayout.addComponent(df);
  gridLayout.addComponent(serversideValueLabel);
  gridLayout.addComponent(expectedLabel);
  updateServerSideLabel(df);
}
