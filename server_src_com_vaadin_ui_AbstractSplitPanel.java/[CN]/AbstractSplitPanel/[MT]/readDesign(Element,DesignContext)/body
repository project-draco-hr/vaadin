{
  super.readDesign(design,designContext);
  AbstractSplitPanel def=designContext.getDefaultInstance(this.getClass());
  boolean reversed=DesignAttributeHandler.readAttribute("reversed",design.attributes(),def.getSplitterState().positionReversed,Boolean.class);
  if (design.hasAttr("split-position")) {
    SizeWithUnit splitPosition=SizeWithUnit.parseStringSize(design.attr("split-position"),def.getSplitPositionUnit());
    setSplitPosition(splitPosition.getSize(),splitPosition.getUnit(),reversed);
  }
 else {
    setSplitPosition(def.getSplitPosition(),def.getSplitPositionUnit(),reversed);
  }
  if (design.hasAttr("min-split-position")) {
    SizeWithUnit minSplitPosition=SizeWithUnit.parseStringSize(design.attr("min-split-position"),def.getMinSplitPositionUnit());
    setMinSplitPosition(minSplitPosition.getSize(),minSplitPosition.getUnit());
  }
 else {
    setMinSplitPosition(def.getMinSplitPosition(),def.getMinSplitPositionUnit());
  }
  if (design.hasAttr("max-split-position")) {
    SizeWithUnit maxSplitPosition=SizeWithUnit.parseStringSize(design.attr("max-split-position"),def.getMaxSplitPositionUnit());
    setMaxSplitPosition(maxSplitPosition.getSize(),maxSplitPosition.getUnit());
  }
 else {
    setMaxSplitPosition(def.getMaxSplitPosition(),def.getMaxSplitPositionUnit());
  }
  removeAllComponents();
  if (design.children().size() > 2) {
    throw new DesignException("A split panel can contain at most two components.");
  }
  for (  Element childElement : design.children()) {
    Component childComponent=designContext.createChild(childElement);
    if (childElement.hasAttr(":second")) {
      setSecondComponent(childComponent);
    }
 else {
      addComponent(childComponent);
    }
  }
}
