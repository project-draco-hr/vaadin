{
  HashSet<String> horizontals=new HashSet<String>();
  horizontals.addAll(shortHorizontalAlignments);
  horizontals.addAll(longHorizontalAlignments);
  for (  String horiz : horizontals) {
    int expectedHoriz=expected.get(horiz);
    checkAlignment(layout,horiz,AlignmentHandler.ALIGNMENT_TOP | expectedHoriz);
    for (    String vert : shortVerticalAlignments) {
      int expectedVert=expected.get(vert);
      if (horiz.length() == 1) {
        checkAlignment(layout,horiz + vert,expectedHoriz | expectedVert);
        checkAlignment(layout,vert + horiz,expectedHoriz | expectedVert);
      }
 else {
        boolean ok=false;
        try {
          checkAlignment(layout,horiz + vert,expectedHoriz | expectedVert);
        }
 catch (        IllegalArgumentException e) {
          ok=true;
        }
        if (!ok) {
          error("IllegalArgumentException was not thrown for " + horiz + vert);
        }
        ok=false;
        try {
          checkAlignment(layout,vert + horiz,expectedHoriz | expectedVert);
        }
 catch (        IllegalArgumentException e) {
          ok=true;
        }
        if (!ok) {
          error("IllegalArgumentException was not thrown for " + horiz + vert);
        }
      }
      checkAlignment(layout,horiz + " " + vert,expectedHoriz | expectedVert);
      checkAlignment(layout,vert + " " + horiz,expectedHoriz | expectedVert);
    }
    for (    String vert : longVerticalAlignments) {
      int expectedVert=expected.get(vert);
      checkAlignment(layout,horiz + " " + vert,expectedHoriz | expectedVert);
      checkAlignment(layout,vert + " " + horiz,expectedHoriz | expectedVert);
      boolean ok=false;
      try {
        checkAlignment(layout,horiz + " " + vert+ " "+ horiz,expectedHoriz | expectedVert);
      }
 catch (      IllegalArgumentException e) {
        ok=true;
      }
      if (!ok) {
        error("IllegalArgumentException was not thrown for " + horiz + " "+ vert+ " "+ horiz);
      }
    }
  }
  checkAlignment(layout,"left right",AlignmentHandler.ALIGNMENT_TOP | AlignmentHandler.ALIGNMENT_RIGHT);
}
