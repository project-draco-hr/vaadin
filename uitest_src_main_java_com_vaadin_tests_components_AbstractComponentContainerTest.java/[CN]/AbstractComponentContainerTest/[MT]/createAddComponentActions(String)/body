{
  String subCategory="Add component";
  createCategory(subCategory,category);
  LinkedHashMap<String,Command<T,ComponentSize>> addCommands=new LinkedHashMap<>();
  addCommands.put("Button",addButtonCommand);
  addCommands.put("NativeButton",addNativeButtonCommand);
  addCommands.put("TextField",addTextFieldCommand);
  addCommands.put("TextArea",addTextAreaCommand);
  addCommands.put("RichTextArea",addRichTextAreaCommand);
  addCommands.put("TabSheet",addTabSheetCommand);
  addCommands.put("Table",addTableCommand);
  addCommands.put("InlineDateField",addInlineDateFieldCommand);
  addCommands.put("PopupDateField",addPopupDateFieldCommand);
  addCommands.put("VerticalSplitPanel",addVerticalSplitPanelCommand);
  addCommands.put("HorizontalSplitPanel",addHorizontalSplitPanelCommand);
  HashSet<String> noVerticalSize=new HashSet<>();
  noVerticalSize.add("TextField");
  noVerticalSize.add("Button");
  ComponentSize[] sizes=new ComponentSize[]{new ComponentSize(null,null),new ComponentSize("200px",null),new ComponentSize("100%",null),new ComponentSize(null,"200px"),new ComponentSize(null,"100%"),new ComponentSize("300px","300px"),new ComponentSize("100%","100%")};
  for (  String componentCategory : addCommands.keySet()) {
    createCategory(componentCategory,subCategory);
    for (    ComponentSize size : sizes) {
      if (size.getHeight() != null && noVerticalSize.contains(componentCategory)) {
        continue;
      }
      createClickAction(size.toString(),componentCategory,addCommands.get(componentCategory),size);
    }
  }
}
