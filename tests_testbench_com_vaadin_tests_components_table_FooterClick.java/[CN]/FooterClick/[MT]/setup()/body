{
  final Table table=new Table();
  table.setDebugId("table");
  table.setContainerDataSource(createContainer());
  table.setWidth("400px");
  table.setHeight("400px");
  table.setImmediate(true);
  table.setFooterVisible(true);
  table.setColumnReorderingAllowed(true);
  table.setColumnFooter(COLUMN1_PROPERTY_ID,"fuu");
  table.setColumnFooter(COLUMN3_PROPERTY_ID,"fuubar");
  final TextField columnField=new TextField("ProperyId of clicked column");
  columnField.setDebugId("ClickedColumn");
  table.addListener(new Table.FooterClickListener(){
    public void footerClick(    FooterClickEvent event){
      columnField.setValue(String.valueOf(event.getPropertyId()));
      log.log("Clicked on footer: " + event.getPropertyId());
    }
  }
);
  CheckBox immediateCheckbox=new CheckBox("Immediate");
  immediateCheckbox.setImmediate(true);
  immediateCheckbox.setValue(table.isImmediate());
  immediateCheckbox.addListener(new Property.ValueChangeListener(){
    @Override public void valueChange(    ValueChangeEvent event){
      table.setImmediate((Boolean)event.getProperty().getValue());
    }
  }
);
  CheckBox columnReorderingCheckbox=new CheckBox("Column reordering allowed");
  columnReorderingCheckbox.setImmediate(true);
  columnReorderingCheckbox.setValue(table.isColumnReorderingAllowed());
  columnReorderingCheckbox.addListener(new Property.ValueChangeListener(){
    @Override public void valueChange(    ValueChangeEvent event){
      table.setColumnReorderingAllowed((Boolean)event.getProperty().getValue());
    }
  }
);
  addComponent(immediateCheckbox);
  addComponent(columnReorderingCheckbox);
  addComponent(log);
  addComponent(table);
  addComponent(columnField);
}
