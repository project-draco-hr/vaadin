{
  return new EscalatorUpdater(){
    private int i=0;
    public void renderCell(    final Cell cell){
      final Integer columnName=columns.get(cell.getColumn());
      final Integer rowName=rows.get(cell.getRow());
      final String cellInfo=columnName + "," + rowName+ " ("+ i+ ")";
      if (cell.getColumn() > 0) {
        cell.getElement().setInnerText("Cell: " + cellInfo);
      }
 else {
        cell.getElement().setInnerText("Row " + cell.getRow() + ": "+ cellInfo);
      }
      if (cell.getColumn() % 3 == cell.getRow() % 3) {
        cell.setColSpan(3);
      }
      final double c=i * .1;
      final int r=(int)((Math.cos(c) + 1) * 128);
      final int g=(int)((Math.cos(c / Math.PI) + 1) * 128);
      final int b=(int)((Math.cos(c / (Math.PI * 2)) + 1) * 128);
      cell.getElement().getStyle().setBackgroundColor("rgb(" + r + ","+ g+ ","+ b+ ")");
      if ((r * .8 + g * 1.3 + b * .9) / 3 < 127) {
        cell.getElement().getStyle().setColor("white");
      }
 else {
        cell.getElement().getStyle().clearColor();
      }
      i++;
    }
    @Override public void updateCells(    final Row row,    final Iterable<Cell> cellsToUpdate){
      for (      final Cell cell : cellsToUpdate) {
        renderCell(cell);
      }
    }
  }
;
}
