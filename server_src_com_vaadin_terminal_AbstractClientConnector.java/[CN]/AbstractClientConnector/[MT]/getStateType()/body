{
  try {
    Method m=null;
    Class<?> class1=getClass();
    while (m == null && class1 != null) {
      m=class1.getDeclaredMethod("getState",(Class[])null);
      class1=class1.getSuperclass();
    }
    if (m == null) {
      throw new NoSuchMethodException(getClass().getCanonicalName() + ".getState()");
    }
    Class<?> type=m.getReturnType();
    return type.asSubclass(SharedState.class);
  }
 catch (  Exception e) {
    throw new RuntimeException("Error finding state type for " + getClass().getName(),e);
  }
}
