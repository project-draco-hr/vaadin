{
  List<FrameworkMethod> tests=new LinkedList<FrameworkMethod>();
  if (!AbstractTB3Test.class.isAssignableFrom(getTestClass().getJavaClass())) {
    throw new RuntimeException(getClass().getName() + " only supports " + AbstractTB3Test.class.getName());
  }
  try {
    AbstractTB3Test testClassInstance=(AbstractTB3Test)getTestClass().getOnlyConstructor().newInstance();
    Collection<DesiredCapabilities> desiredCapabilites=testClassInstance.getBrowsersToTest();
    if (testClassInstance.runLocally()) {
      desiredCapabilites=new ArrayList<DesiredCapabilities>();
      desiredCapabilites.add(BrowserUtil.firefox(MultiBrowserTest.TESTED_FIREFOX_VERSION));
    }
    for (    DesiredCapabilities capabilities : desiredCapabilites) {
      for (      FrameworkMethod m : getTestClass().getAnnotatedMethods(Test.class)) {
        tests.add(new TB3Method(m.getMethod(),capabilities));
      }
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Error retrieving browsers to run on",e);
  }
  return tests;
}
