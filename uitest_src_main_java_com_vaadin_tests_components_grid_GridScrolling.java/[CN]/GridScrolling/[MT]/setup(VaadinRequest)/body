{
  ds=new IndexedContainer();
  for (int col=0; col < 5; col++) {
    ds.addContainerProperty("col" + col,String.class,"");
  }
  for (int row=0; row < 65536; row++) {
    Item item=ds.addItem(Integer.valueOf(row));
    for (int col=0; col < 5; col++) {
      item.getItemProperty("col" + col).setValue("(" + row + ", "+ col+ ")");
    }
  }
  grid=new LegacyGrid(ds);
  HorizontalLayout hl=new HorizontalLayout();
  hl.addComponent(grid);
  hl.setMargin(true);
  hl.setSpacing(true);
  VerticalLayout vl=new VerticalLayout();
  vl.setSpacing(true);
  Button scrollUpButton=new Button("Top",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      grid.scrollToStart();
    }
  }
);
  scrollUpButton.setSizeFull();
  vl.addComponent(scrollUpButton);
  for (int i=1; i < 7; ++i) {
    final int row=(ds.size() / 7) * i;
    Button scrollButton=new Button("Scroll to row " + row,new ClickListener(){
      @Override public void buttonClick(      ClickEvent event){
        grid.scrollTo(Integer.valueOf(row),ScrollDestination.MIDDLE);
      }
    }
);
    scrollButton.setSizeFull();
    vl.addComponent(scrollButton);
  }
  Button scrollDownButton=new Button("Bottom",new ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      grid.scrollToEnd();
    }
  }
);
  scrollDownButton.setSizeFull();
  vl.addComponent(scrollDownButton);
  hl.addComponent(vl);
  addComponent(hl);
}
