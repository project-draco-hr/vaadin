{
  System.out.println("UI " + getUIId() + " inited");
  final int sessionHash=getSession().hashCode();
  final String sessionId=request.getWrappedSession().getId();
  log.log("Current session hashcode: " + sessionHash);
  log.log("Current WrappedSession id: " + sessionId);
  String oldHashValue=request.getParameter(OLD_HASH_PARAM);
  if (oldHashValue != null) {
    log.log("Old session hashcode: " + oldHashValue);
    log.log("Same hash as current? " + oldHashValue.equals(Integer.toString(sessionHash)));
  }
  String oldSessionId=request.getParameter(OLD_SESSION_ID_PARAM);
  if (oldSessionId != null) {
    log.log("Old WrappedSession id: " + oldSessionId);
    log.log("Same WrappedSession id? " + oldSessionId.equals(sessionId));
  }
  addComponent(log);
  addComponent(new Button("Log 'hello'",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      log.log("Hello");
    }
  }
));
  addComponent(new Button("Close UI",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      close();
    }
  }
));
  addComponent(new Button("Close UI (background)",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      new UIRunSafelyThread(CloseUI.this){
        @Override protected void runSafely(){
          close();
        }
      }
.start();
    }
  }
));
  addComponent(new Button("Close UI and redirect to /statictestfiles/static.html",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      getPage().setLocation("/statictestfiles/static.html");
      close();
    }
  }
));
  addComponent(new Button("Close UI and redirect to /statictestfiles/static.html (background)",new Button.ClickListener(){
    @Override public void buttonClick(    ClickEvent event){
      new UIRunSafelyThread(CloseUI.this){
        @Override protected void runSafely(){
          getPage().setLocation("/statictestfiles/static.html");
          close();
        }
      }
.start();
    }
  }
));
}
