{
  Attributes attr=tabElement.attributes();
  if (tabElement.children().size() != 1) {
    throw new DesignException("A tab must have exactly one child element");
  }
  Element content=tabElement.child(0);
  Component child=designContext.createChild(content);
  Tab tab=this.addTab(child);
  if (attr.hasKey("visible")) {
    tab.setVisible(DesignAttributeHandler.readAttribute("visible",attr,Boolean.class));
  }
  if (attr.hasKey("closable")) {
    tab.setClosable(DesignAttributeHandler.readAttribute("closable",attr,Boolean.class));
  }
  if (attr.hasKey("caption")) {
    tab.setCaption(DesignAttributeHandler.readAttribute("caption",attr,String.class));
  }
  if (attr.hasKey("enabled")) {
    tab.setEnabled(DesignAttributeHandler.readAttribute("enabled",attr,Boolean.class));
  }
  if (attr.hasKey("icon")) {
    tab.setIcon(DesignAttributeHandler.readAttribute("icon",attr,Resource.class));
  }
  if (attr.hasKey("icon-alt")) {
    tab.setIconAlternateText(DesignAttributeHandler.readAttribute("icon-alt",attr,String.class));
  }
  if (attr.hasKey("description")) {
    tab.setDescription(DesignAttributeHandler.readAttribute("description",attr,String.class));
  }
  if (attr.hasKey("style-name")) {
    tab.setStyleName(DesignAttributeHandler.readAttribute("style-name",attr,String.class));
  }
  if (attr.hasKey("id")) {
    tab.setId(DesignAttributeHandler.readAttribute("id",attr,String.class));
  }
  if (attr.hasKey("selected")) {
    boolean selected=DesignAttributeHandler.readAttribute("selected",attr,Boolean.class);
    if (selected) {
      this.setSelectedTab(tab.getComponent());
    }
  }
}
