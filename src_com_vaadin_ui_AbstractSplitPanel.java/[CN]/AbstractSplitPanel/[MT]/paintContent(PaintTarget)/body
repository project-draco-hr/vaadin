{
  super.paintContent(target);
  final String position=pos + UNIT_SYMBOLS[posUnit];
  final String minimumPosition=posMin + UNIT_SYMBOLS[posMinUnit];
  final String maximumPosition=posMax + UNIT_SYMBOLS[posMaxUnit];
  target.addAttribute("position",position);
  if (minimumPosition != "0%") {
    target.addAttribute("minimumPosition",minimumPosition);
  }
  if (maximumPosition != "100%") {
    target.addAttribute("maximumPosition",maximumPosition);
  }
  if (isLocked()) {
    target.addAttribute("locked",true);
  }
  target.addAttribute("reversed",posReversed);
  if (firstComponent != null) {
    firstComponent.paint(target);
  }
 else {
    VerticalLayout temporaryComponent=new VerticalLayout();
    temporaryComponent.setParent(this);
    temporaryComponent.paint(target);
  }
  if (secondComponent != null) {
    secondComponent.paint(target);
  }
 else {
    VerticalLayout temporaryComponent=new VerticalLayout();
    temporaryComponent.setParent(this);
    temporaryComponent.paint(target);
  }
}
