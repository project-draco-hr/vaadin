{
  final LinkedList<Object> visible=new LinkedList<>();
  final Stack<Iterator<?>> iteratorStack=new Stack<>();
  final Collection<?> ids=rootItemIds();
  if (ids != null) {
    iteratorStack.push(ids.iterator());
  }
  while (!iteratorStack.isEmpty()) {
    final Iterator<?> i=iteratorStack.peek();
    if (!i.hasNext()) {
      iteratorStack.pop();
    }
 else {
      final Object itemId=i.next();
      visible.add(itemId);
      if (isExpanded(itemId) && hasChildren(itemId)) {
        iteratorStack.push(getChildren(itemId).iterator());
      }
    }
  }
  return visible;
}
