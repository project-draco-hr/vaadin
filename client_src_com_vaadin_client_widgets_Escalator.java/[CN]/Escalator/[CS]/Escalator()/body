{
  detectAndApplyPositionFunction();
  getLogger().info("Using " + position.getClass().getSimpleName() + " for position");
  final Element root=DOM.createDiv();
  setElement(root);
  ScrollHandler scrollHandler=new ScrollHandler(){
    @Override public void onScroll(    ScrollEvent event){
      scroller.onScroll();
      fireEvent(new ScrollEvent());
    }
  }
;
  root.appendChild(verticalScrollbar.getElement());
  verticalScrollbar.addScrollHandler(scrollHandler);
  verticalScrollbar.setScrollbarThickness(WidgetUtil.getNativeScrollbarSize());
  root.appendChild(horizontalScrollbar.getElement());
  horizontalScrollbar.addScrollHandler(scrollHandler);
  horizontalScrollbar.setScrollbarThickness(WidgetUtil.getNativeScrollbarSize());
  horizontalScrollbar.addVisibilityHandler(new ScrollbarBundle.VisibilityHandler(){
    @Override public void visibilityChanged(    ScrollbarBundle.VisibilityChangeEvent event){
      applyHeightByRows();
    }
  }
);
  tableWrapper=DivElement.as(DOM.createDiv());
  root.appendChild(tableWrapper);
  final Element table=DOM.createTable();
  tableWrapper.appendChild(table);
  table.appendChild(headElem);
  table.appendChild(bodyElem);
  table.appendChild(footElem);
  Style hCornerStyle=headerDeco.getStyle();
  hCornerStyle.setWidth(WidgetUtil.getNativeScrollbarSize(),Unit.PX);
  hCornerStyle.setDisplay(Display.NONE);
  root.appendChild(headerDeco);
  Style fCornerStyle=footerDeco.getStyle();
  fCornerStyle.setWidth(WidgetUtil.getNativeScrollbarSize(),Unit.PX);
  fCornerStyle.setDisplay(Display.NONE);
  root.appendChild(footerDeco);
  Style hWrapperStyle=horizontalScrollbarDeco.getStyle();
  hWrapperStyle.setDisplay(Display.NONE);
  hWrapperStyle.setHeight(WidgetUtil.getNativeScrollbarSize(),Unit.PX);
  root.appendChild(horizontalScrollbarDeco);
  setStylePrimaryName("v-escalator");
  setHeight(null);
  setWidth(null);
}
