{
  final double viewportLength=viewportEndPx - viewportStartPx;
switch (destination) {
case ANY:
{
      final double startScrollPos=targetStartPx - padding;
      final double endScrollPos=targetEndPx + padding - viewportLength;
      if (startScrollPos < viewportStartPx) {
        return startScrollPos;
      }
 else       if (targetEndPx + padding > viewportEndPx) {
        return endScrollPos;
      }
 else {
        return viewportStartPx;
      }
    }
case END:
{
    return targetEndPx + padding - viewportLength;
  }
case MIDDLE:
{
  final double targetMiddle=targetStartPx + (targetEndPx - targetStartPx) / 2;
  return targetMiddle - viewportLength / 2;
}
case START:
{
return targetStartPx - padding;
}
default :
{
throw new IllegalArgumentException("Internal: ScrollDestination has been modified, " + "but Escalator.getScrollPos has not been updated " + "to match new values.");
}
}
}
