{
  return new Comparator<CalendarEvent>(){
    @Override public int compare(    CalendarEvent o1,    CalendarEvent o2){
      if (o1.isAllDay() != o2.isAllDay()) {
        if (o2.isAllDay()) {
          return 1;
        }
        return -1;
      }
      Long d1=o1.getRangeInMilliseconds();
      Long d2=o2.getRangeInMilliseconds();
      int r=0;
      if (!d1.equals(0L) && !d2.equals(0L)) {
        r=d2.compareTo(d1);
        return (r == 0) ? ((Integer)o2.getIndex()).compareTo(o1.getIndex()) : r;
      }
      if (d2.equals(0L) && d1.equals(0L)) {
        return ((Integer)o2.getIndex()).compareTo(o1.getIndex());
      }
 else       if (d2.equals(0L) && d1 >= DateConstants.DAYINMILLIS) {
        return -1;
      }
 else       if (d2.equals(0L) && d1 < DateConstants.DAYINMILLIS) {
        return 1;
      }
 else       if (d1.equals(0L) && d2 >= DateConstants.DAYINMILLIS) {
        return 1;
      }
 else       if (d1.equals(0L) && d2 < DateConstants.DAYINMILLIS) {
        return -1;
      }
      r=d2.compareTo(d1);
      return (r == 0) ? ((Integer)o2.getIndex()).compareTo(o1.getIndex()) : r;
    }
  }
;
}
