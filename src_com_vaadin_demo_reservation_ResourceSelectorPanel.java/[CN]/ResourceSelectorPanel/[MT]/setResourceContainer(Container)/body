{
  removeAllComponents();
  categoryLayouts.clear();
  categoryResources.clear();
  if (resources != null && resources.size() > 0) {
    for (final Iterator it=resources.getItemIds().iterator(); it.hasNext(); ) {
      final Item resource=resources.getItem(it.next());
      final String category=(String)resource.getItemProperty(SampleDB.Resource.PROPERTY_ID_CATEGORY).getValue();
      final String name=(String)resource.getItemProperty(SampleDB.Resource.PROPERTY_ID_NAME).getValue();
      final String description=(String)resource.getItemProperty(SampleDB.Resource.PROPERTY_ID_DESCRIPTION).getValue();
      final Button rButton=new Button(name,this);
      rButton.setStyleName("link");
      rButton.setDescription(description);
      rButton.setData(resource);
      Layout resourceLayout=(Layout)categoryLayouts.get(category);
      LinkedList resourceList=(LinkedList)categoryResources.get(category);
      if (resourceLayout == null) {
        resourceLayout=new VerticalLayout();
        resourceLayout.setSizeUndefined();
        resourceLayout.setMargin(true);
        addComponent(resourceLayout);
        categoryLayouts.put(category,resourceLayout);
        resourceList=new LinkedList();
        categoryResources.put(category,resourceList);
        final Button cButton=new Button(category + " (any)",this);
        cButton.setStyleName("important-link");
        cButton.setData(category);
        resourceLayout.addComponent(cButton);
      }
      resourceLayout.addComponent(rButton);
      resourceList.add(resource);
    }
  }
}
