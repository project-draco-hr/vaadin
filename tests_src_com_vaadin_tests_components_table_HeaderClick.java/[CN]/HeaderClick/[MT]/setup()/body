{
  final Table table=new Table();
  table.setColumnReorderingAllowed(true);
  table.setContainerDataSource(createContainer());
  table.setWidth("400px");
  table.setHeight("400px");
  table.setImmediate(true);
  final TextField columnField=new TextField("ProperyId of clicked column");
  table.setHeaderClickHandler(new Table.HeaderClickHandler(){
    public void handleHeaderClick(    HeaderClickEvent event){
      columnField.setValue(event.getPropertyId());
    }
  }
);
  CheckBox immediateCheckbox=new CheckBox("Immediate");
  immediateCheckbox.setImmediate(true);
  immediateCheckbox.setValue(table.isImmediate());
  immediateCheckbox.addListener(new ClickListener(){
    public void buttonClick(    ClickEvent event){
      table.setImmediate(event.getButton().booleanValue());
    }
  }
);
  CheckBox sortEnabledCheckbox=new CheckBox("Sortable");
  sortEnabledCheckbox.setImmediate(true);
  sortEnabledCheckbox.setValue(!table.isSortDisabled());
  sortEnabledCheckbox.addListener(new ClickListener(){
    public void buttonClick(    ClickEvent event){
      table.setSortDisabled(!event.getButton().booleanValue());
    }
  }
);
  CheckBox columnReorderingCheckbox=new CheckBox("Column reordering allowed");
  columnReorderingCheckbox.setImmediate(true);
  columnReorderingCheckbox.setValue(table.isColumnReorderingAllowed());
  columnReorderingCheckbox.addListener(new ClickListener(){
    public void buttonClick(    ClickEvent event){
      table.setColumnReorderingAllowed(event.getButton().booleanValue());
    }
  }
);
  addComponent(immediateCheckbox);
  addComponent(sortEnabledCheckbox);
  addComponent(columnReorderingCheckbox);
  addComponent(table);
  addComponent(columnField);
}
